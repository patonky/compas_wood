<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Archive name="Root">
  <!--Grasshopper archive-->
  <!--Grasshopper and GH_IO.dll are copyrighted by Robert McNeel & Associates-->
  <!--Archive generated by GH_IO.dll file utility library {0.2.0002}-->
  <items count="1">
    <item name="ArchiveVersion" type_name="gh_version" type_code="80">
      <Major>0</Major>
      <Minor>2</Minor>
      <Revision>2</Revision>
    </item>
  </items>
  <chunks count="2">
    <chunk name="Definition">
      <items count="1">
        <item name="plugin_version" type_name="gh_version" type_code="80">
          <Major>1</Major>
          <Minor>0</Minor>
          <Revision>7</Revision>
        </item>
      </items>
      <chunks count="5">
        <chunk name="DocumentHeader">
          <items count="5">
            <item name="DocumentID" type_name="gh_guid" type_code="9">29ca862c-0eba-4970-8903-199d6a5b68b5</item>
            <item name="Preview" type_name="gh_string" type_code="10">Shaded</item>
            <item name="PreviewMeshType" type_name="gh_int32" type_code="3">1</item>
            <item name="PreviewNormal" type_name="gh_drawing_color" type_code="36">
              <ARGB>100;150;0;0</ARGB>
            </item>
            <item name="PreviewSelected" type_name="gh_drawing_color" type_code="36">
              <ARGB>100;0;150;0</ARGB>
            </item>
          </items>
        </chunk>
        <chunk name="DefinitionProperties">
          <items count="3">
            <item name="Date" type_name="gh_date" type_code="8">638160906699296797</item>
            <item name="Description" type_name="gh_string" type_code="10"></item>
            <item name="Name" type_name="gh_string" type_code="10">chevron.ghx</item>
          </items>
          <chunks count="3">
            <chunk name="Revisions">
              <items count="1">
                <item name="RevisionCount" type_name="gh_int32" type_code="3">0</item>
              </items>
            </chunk>
            <chunk name="Projection">
              <items count="2">
                <item name="Target" type_name="gh_drawing_point" type_code="30">
                  <X>2</X>
                  <Y>-735</Y>
                </item>
                <item name="Zoom" type_name="gh_single" type_code="5">2.76816583</item>
              </items>
            </chunk>
            <chunk name="Views">
              <items count="1">
                <item name="ViewCount" type_name="gh_int32" type_code="3">0</item>
              </items>
            </chunk>
          </chunks>
        </chunk>
        <chunk name="RcpLayout">
          <items count="1">
            <item name="GroupCount" type_name="gh_int32" type_code="3">0</item>
          </items>
        </chunk>
        <chunk name="GHALibraries">
          <items count="1">
            <item name="Count" type_name="gh_int32" type_code="3">3</item>
          </items>
          <chunks count="3">
            <chunk name="Library" index="0">
              <items count="6">
                <item name="AssemblyFullName" type_name="gh_string" type_code="10">joinery_solver_gh, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</item>
                <item name="AssemblyVersion" type_name="gh_string" type_code="10">1.0.0.0</item>
                <item name="Author" type_name="gh_string" type_code="10">petras_vestartas</item>
                <item name="Id" type_name="gh_guid" type_code="9">9bb16bc1-9a19-4a99-9f0b-1afee092287d</item>
                <item name="Name" type_name="gh_string" type_code="10">compas_wood</item>
                <item name="Version" type_name="gh_string" type_code="10"></item>
              </items>
            </chunk>
            <chunk name="Library" index="1">
              <items count="6">
                <item name="AssemblyFullName" type_name="gh_string" type_code="10">GhPython, Version=7.28.23058.3001, Culture=neutral, PublicKeyToken=null</item>
                <item name="AssemblyVersion" type_name="gh_string" type_code="10">7.28.23058.3001</item>
                <item name="Author" type_name="gh_string" type_code="10"></item>
                <item name="Id" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10"></item>
                <item name="Version" type_name="gh_string" type_code="10"></item>
              </items>
            </chunk>
            <chunk name="Library" index="2">
              <items count="6">
                <item name="AssemblyFullName" type_name="gh_string" type_code="10">NGonGh, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</item>
                <item name="AssemblyVersion" type_name="gh_string" type_code="10">1.0.0.0</item>
                <item name="Author" type_name="gh_string" type_code="10">Petras Vestartas</item>
                <item name="Id" type_name="gh_guid" type_code="9">20563e24-568f-4f4f-b61b-71a1781ef92f</item>
                <item name="Name" type_name="gh_string" type_code="10">NGon</item>
                <item name="Version" type_name="gh_string" type_code="10">3.2.0</item>
              </items>
            </chunk>
          </chunks>
        </chunk>
        <chunk name="DefinitionObjects">
          <items count="1">
            <item name="ObjectCount" type_name="gh_int32" type_code="3">62</item>
          </items>
          <chunks count="62">
            <chunk name="Object" index="0">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">9deb91eb-6e97-1234-174a-7b0926605f30</item>
                <item name="Lib" type_name="gh_guid" type_code="9">9bb16bc1-9a19-4a99-9f0b-1afee092287d</item>
                <item name="Name" type_name="gh_string" type_code="10">chevron</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">chevron, NURBS subdivision into a quad mesh</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">c6fbceb4-801d-4c7b-83ff-0d4f8bd6eab1</item>
                    <item name="Name" type_name="gh_string" type_code="10">chevron</item>
                    <item name="NickName" type_name="gh_string" type_code="10">chevron</item>
                  </items>
                  <chunks count="7">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>529</X>
                          <Y>137</Y>
                          <W>146</W>
                          <H>104</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>622</X>
                          <Y>189</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">surface</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">114e96f7-e91f-4ad9-ab57-675b2ad4b2e0</item>
                        <item name="Name" type_name="gh_string" type_code="10">surface</item>
                        <item name="NickName" type_name="gh_string" type_code="10">surface</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">413becb6-7abc-45cf-b5c7-b3205a7e6f4f</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>531</X>
                              <Y>139</Y>
                              <W>76</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>570.5</X>
                              <Y>149</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">u_divisions</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">f9a24138-4075-43bc-b2f8-48a305efdd9c</item>
                        <item name="Name" type_name="gh_string" type_code="10">u_divisions</item>
                        <item name="NickName" type_name="gh_string" type_code="10">u_divisions</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">0cc7584b-3c7f-4f7f-be0e-fd8da7695e49</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>531</X>
                              <Y>159</Y>
                              <W>76</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>570.5</X>
                              <Y>169</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="2">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">v_division_dist</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">3f7b02b9-8a16-430f-8c79-8569507ba0e7</item>
                        <item name="Name" type_name="gh_string" type_code="10">v_division_dist</item>
                        <item name="NickName" type_name="gh_string" type_code="10">v_division_dist</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">3f3c2537-3872-44c3-8ad8-124a40469613</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>531</X>
                              <Y>179</Y>
                              <W>76</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>570.5</X>
                              <Y>189</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="3">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">shift</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">d07786cf-7101-4dd3-b5a0-ec199d26d09d</item>
                        <item name="Name" type_name="gh_string" type_code="10">shift</item>
                        <item name="NickName" type_name="gh_string" type_code="10">shift</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">bcbd1f94-1c9e-43b4-89d2-ea1d64760193</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>531</X>
                              <Y>199</Y>
                              <W>76</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>570.5</X>
                              <Y>209</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="4">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">scale</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">0e2ab9d0-2e1e-4b09-974b-69a9c68dfa19</item>
                        <item name="Name" type_name="gh_string" type_code="10">scale</item>
                        <item name="NickName" type_name="gh_string" type_code="10">scale</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">ad44a811-5904-40e0-a764-08855b85038b</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>531</X>
                              <Y>219</Y>
                              <W>76</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>570.5</X>
                              <Y>229</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">mesh</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">b82e1ffe-9f9d-4f94-87af-7fef14d5eec7</item>
                        <item name="Name" type_name="gh_string" type_code="10">mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">mesh</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>637</X>
                              <Y>139</Y>
                              <W>36</W>
                              <H>100</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>655</X>
                              <Y>189</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="1">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">0cc7584b-3c7f-4f7f-be0e-fd8da7695e49</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>305</X>
                          <Y>159</Y>
                          <W>186</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>305.2531</X>
                          <Y>159.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">20</item>
                        <item name="Min" type_name="gh_double" type_code="6">1</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">4</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="2">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">3f3c2537-3872-44c3-8ad8-124a40469613</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>305</X>
                          <Y>179</Y>
                          <W>202</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>305.2531</X>
                          <Y>179.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">1000</item>
                        <item name="Min" type_name="gh_double" type_code="6">900</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">900</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="3">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">bcbd1f94-1c9e-43b4-89d2-ea1d64760193</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>305</X>
                          <Y>199</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>305.2531</X>
                          <Y>199.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">1</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">0</item>
                        <item name="Max" type_name="gh_double" type_code="6">1</item>
                        <item name="Min" type_name="gh_double" type_code="6">0.5</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">0.5</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="4">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">ad44a811-5904-40e0-a764-08855b85038b</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>305</X>
                          <Y>219</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>305.2531</X>
                          <Y>219.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">5</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">0</item>
                        <item name="Max" type_name="gh_double" type_code="6">0.06</item>
                        <item name="Min" type_name="gh_double" type_code="6">0.05</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">0.05799</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="5">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">c552a431-af5b-46a9-a8a4-0fcbc27ef596</item>
                <item name="Name" type_name="gh_string" type_code="10">Group</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="12">
                    <item name="Border" type_name="gh_int32" type_code="3">1</item>
                    <item name="Colour" type_name="gh_drawing_color" type_code="36">
                      <ARGB>255;255;255;255</ARGB>
                    </item>
                    <item name="Description" type_name="gh_string" type_code="10">A group of Grasshopper objects</item>
                    <item name="ID" index="0" type_name="gh_guid" type_code="9">c6fbceb4-801d-4c7b-83ff-0d4f8bd6eab1</item>
                    <item name="ID" index="1" type_name="gh_guid" type_code="9">0cc7584b-3c7f-4f7f-be0e-fd8da7695e49</item>
                    <item name="ID" index="2" type_name="gh_guid" type_code="9">3f3c2537-3872-44c3-8ad8-124a40469613</item>
                    <item name="ID" index="3" type_name="gh_guid" type_code="9">bcbd1f94-1c9e-43b4-89d2-ea1d64760193</item>
                    <item name="ID" index="4" type_name="gh_guid" type_code="9">ad44a811-5904-40e0-a764-08855b85038b</item>
                    <item name="ID_Count" type_name="gh_int32" type_code="3">5</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">4c33f26e-7cac-4ea5-a1f3-bf1c6ca6b50f</item>
                    <item name="Name" type_name="gh_string" type_code="10">Group</item>
                    <item name="NickName" type_name="gh_string" type_code="10">chevron</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes" />
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="6">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">9deb91eb-6e97-4234-974a-7b0926605f30</item>
                <item name="Lib" type_name="gh_guid" type_code="9">9bb16bc1-9a19-4a99-9f0b-1afee092287d</item>
                <item name="Name" type_name="gh_string" type_code="10">chevron_plates</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">chevron_plates</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">74803c8c-94cc-4bb7-a53e-bc0327941463</item>
                    <item name="Name" type_name="gh_string" type_code="10">chevron_plates</item>
                    <item name="NickName" type_name="gh_string" type_code="10">chevron_plates</item>
                  </items>
                  <chunks count="10">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>535</X>
                          <Y>291</Y>
                          <W>145</W>
                          <H>144</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>632</X>
                          <Y>363</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">mesh</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">90b675bf-a608-44b0-8b31-67140475b5f6</item>
                        <item name="Name" type_name="gh_string" type_code="10">mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">mesh</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>293</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>303</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">edge_rotation</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">af8d8474-354c-412b-ba47-dcc527289f36</item>
                        <item name="Name" type_name="gh_string" type_code="10">edge_rotation</item>
                        <item name="NickName" type_name="gh_string" type_code="10">edge_rotation</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">cf7b8d1c-fc9e-4f49-b310-8c20ea3d2bfe</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>313</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>323</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="2">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">edge_offset</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">9a214014-66bf-4459-8e93-c07bf7cfe73b</item>
                        <item name="Name" type_name="gh_string" type_code="10">edge_offset</item>
                        <item name="NickName" type_name="gh_string" type_code="10">edge_offset</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">8a90c071-c643-48de-81e3-cd266e602f4d</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>333</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>343</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="3">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">box_height</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">5c9fd214-c0cb-4438-abb8-a3b1923450fc</item>
                        <item name="Name" type_name="gh_string" type_code="10">box_height</item>
                        <item name="NickName" type_name="gh_string" type_code="10">box_height</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">c16ca636-8ce2-48fb-80b1-22fb142d5e19</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>353</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>363</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="4">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">top_plate_inlet</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">46df0d56-1f03-4682-8f79-a4406072deee</item>
                        <item name="Name" type_name="gh_string" type_code="10">top_plate_inlet</item>
                        <item name="NickName" type_name="gh_string" type_code="10">top_plate_inlet</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">167e9efe-2224-4c92-be9c-81f118ea7b20</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>373</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>383</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="5">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">plate_thickness</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">ae1a7dec-0c4b-40cf-a28f-bbd6bbcca7c8</item>
                        <item name="Name" type_name="gh_string" type_code="10">plate_thickness</item>
                        <item name="NickName" type_name="gh_string" type_code="10">plate_thickness</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">7bc2651b-45db-44fd-ae34-740a583da421</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>393</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>403</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="6">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">ortho</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">cbc800ef-b42b-4178-bcd8-d0a1082cb7aa</item>
                        <item name="Name" type_name="gh_string" type_code="10">ortho</item>
                        <item name="NickName" type_name="gh_string" type_code="10">ortho</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>537</X>
                              <Y>413</Y>
                              <W>80</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>578.5</X>
                              <Y>423</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">data</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">05010591-4158-4ea6-93c6-916918ac8041</item>
                        <item name="Name" type_name="gh_string" type_code="10">data</item>
                        <item name="NickName" type_name="gh_string" type_code="10">data</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>647</X>
                              <Y>293</Y>
                              <W>31</W>
                              <H>70</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>662.5</X>
                              <Y>328</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="1">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">dir</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">479d96ac-4b67-4489-b8a6-13b496a64b5b</item>
                        <item name="Name" type_name="gh_string" type_code="10">dir</item>
                        <item name="NickName" type_name="gh_string" type_code="10">dir</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>647</X>
                              <Y>363</Y>
                              <W>31</W>
                              <H>70</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>662.5</X>
                              <Y>398</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="7">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">cf7b8d1c-fc9e-4f49-b310-8c20ea3d2bfe</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>315</X>
                          <Y>322</Y>
                          <W>201</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>315.2531</X>
                          <Y>322.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">10</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">1</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="8">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">8a90c071-c643-48de-81e3-cd266e602f4d</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>315</X>
                          <Y>342</Y>
                          <W>189</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>315.2531</X>
                          <Y>342.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">1</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">0</item>
                        <item name="Max" type_name="gh_double" type_code="6">2.5</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">0.5</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="9">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">c16ca636-8ce2-48fb-80b1-22fb142d5e19</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>315</X>
                          <Y>362</Y>
                          <W>187</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>315.2531</X>
                          <Y>362.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">1000</item>
                        <item name="Min" type_name="gh_double" type_code="6">100</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">760</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="10">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">167e9efe-2224-4c92-be9c-81f118ea7b20</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>315</X>
                          <Y>382</Y>
                          <W>204</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>315.2531</X>
                          <Y>382.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">80</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="11">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">7bc2651b-45db-44fd-ae34-740a583da421</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>315</X>
                          <Y>402</Y>
                          <W>206</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>315.2531</X>
                          <Y>402.9246</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">40</item>
                        <item name="Min" type_name="gh_double" type_code="6">1</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">40</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="12">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">c552a431-af5b-46a9-a8a4-0fcbc27ef596</item>
                <item name="Name" type_name="gh_string" type_code="10">Group</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="Border" type_name="gh_int32" type_code="3">1</item>
                    <item name="Colour" type_name="gh_drawing_color" type_code="36">
                      <ARGB>255;255;255;255</ARGB>
                    </item>
                    <item name="Description" type_name="gh_string" type_code="10">A group of Grasshopper objects</item>
                    <item name="ID" index="0" type_name="gh_guid" type_code="9">74803c8c-94cc-4bb7-a53e-bc0327941463</item>
                    <item name="ID" index="1" type_name="gh_guid" type_code="9">cf7b8d1c-fc9e-4f49-b310-8c20ea3d2bfe</item>
                    <item name="ID" index="2" type_name="gh_guid" type_code="9">8a90c071-c643-48de-81e3-cd266e602f4d</item>
                    <item name="ID" index="3" type_name="gh_guid" type_code="9">c16ca636-8ce2-48fb-80b1-22fb142d5e19</item>
                    <item name="ID" index="4" type_name="gh_guid" type_code="9">167e9efe-2224-4c92-be9c-81f118ea7b20</item>
                    <item name="ID" index="5" type_name="gh_guid" type_code="9">7bc2651b-45db-44fd-ae34-740a583da421</item>
                    <item name="ID_Count" type_name="gh_int32" type_code="3">6</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">9e90600a-42e3-4b3a-be59-f86be1013f13</item>
                    <item name="Name" type_name="gh_string" type_code="10">Group</item>
                    <item name="NickName" type_name="gh_string" type_code="10">chevron_plates</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes" />
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="13">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">import Rhino
import Rhino.Geometry
from Rhino.Geometry import Surface, Mesh, MeshFace, Point3d, Point3f, Vector3d

class Chevron:
    # User inputs
    mesh = None
    edge_rotation = 0.0
    edge_offset = 0.0
    box_height = 0.0
    top_plate_inlet = 0.0
    plate_thickness = 0.0
    ortho = False

    # Class generated properties
    f_e = {}
    f_rotation_flip = {}
    bi_planes = []
    e_planes = []
    f_planes = []

    # Output
    f_v = []
    f_me = []
    plines = [] # pair of outlines
    insertion_vectors = [] # v0,v1,v2,v3,v4,v5
    adjacency = [] # v0,v1, f0, f1
    joints_per_face = [] # 0,0,1,1,2,2
    three_valence = [] # 43, 41, 45, 41

    # Display
    box_insertion_vectors = [] # v0,v1,v2,v3,v4,v5
    box_insertion_lines = [] # v0,v1,v2,v3,v4,v5
    
    def __init__(self, mesh, edge_rotation=1, edge_offset=0.5, box_height=760, top_plate_inlet=80, plate_thickness=40, ortho=True):
        if mesh == None:
            return
        self.mesh = mesh.DuplicateMesh() # assuming DuplicateMesh() is a method in Rhino or some other external library
        self.mesh.Flip(True, True, True)

        self.edge_rotation = max(min(edge_rotation, 30), -30) # constrain edge_rotation to -30 to 30
        self.edge_offset = max(min(edge_offset, 2), -2) # constrain edge_offset to -2 to 2

        self.box_height = max(min(box_height, math.inf), 1) # constrain box_height to 1 to infinity
        self.top_plate_inlet = max(min(top_plate_inlet, box_height * 0.333), 1) # constrain top_plate_inlet to 1 to box_height * 0.333
        self.plate_thickness = max(min(plate_thickness, box_height * 0.333), 1) # constrain plate_thickness to 1 to box_height * 0.333
        self.ortho = ortho

        # output
        self.plines = [] # list of Polyline objects
        self.insertion_vectors = [[] for _ in range(mesh.Faces.Count * 4)] # list of Vector3d arrays
        self.adjacency = [] # list of int arrays
        self.joints_per_face = [[] for _ in range(mesh.Faces.Count * 4)] # list of int arrays
        self.three_valence = [] # list of int arrays
        self.f_v = [[] for _ in range(mesh.Faces.Count)] # list of int arrays
        self.f_me = [[] for _ in range(mesh.Faces.Count)] # list of int arrays

        # display
        self.box_insertion_vectors = [None] * mesh.Faces.Count # list of Vector3d objects
        self.box_insertion_lines = [None] * mesh.Faces.Count # list of Line objects
    
    def chevron_grid(self, s, u_divisions=4, v_division_dist=900, shift=0.5, scale=0.05799):
        
        # Python code
        # Inputs to construct mesh
        f = []
        v = []
        
        # Get Surface Interval, divisionStep, baseStep, maxStep, and Delta parameters
        DomU = s.Domain(0)
        DomV = s.Domain(1)
        half_v = DomV.T1 * 0.5
        StepU = (DomU.T1 - DomU.T0) / u_divisions
        baseStepV = v_division_dist
        maxStepV = 2500
        Delta = maxStepV - baseStepV
        
        totalV = DomV[1] - DomV[0]
        rem = (totalV / 2) - ((maxStepV / 2) + baseStepV + Delta)
        stepV = rem / baseStepV
        
        # Iterate number strips of the NURBS
        ctU = 0
#        print(s.Domain(0))
#        print(s.Domain(1))
#        print(u_divisions)
        for j in range(u_divisions):
#            print(j)
            ctV = 0
            thresh = totalV / 2
            StepV1 = baseStepV
            b = True
            ListV = []
        
            p0, p1, p2, p6, p7, p8 = None,None,None,None,None,None
            savept6 = Point3f.Unset
            savept7 = Point3f.Unset
            savept8 = Point3f.Unset
            iterations = 0

            while b and iterations &lt; 1000:
                iterations += 1
                ListV.append(StepV1)
        
                # Get First Half of a Quads
                if ctV == 0:
                    
                    p0 = s.PointAt(ctU, ctV)
                    
                    p1 = s.PointAt(ctU + StepU * 0.5, ctV)
                    p2 = s.PointAt(ctU + StepU, ctV)
                    p6 = s.PointAt(ctU, ctV + StepV1 * (1 - shift / 2))
                    p7 = s.PointAt(ctU + StepU * 0.5, ctV + StepV1 * (1 + shift / 2))
                    p8 = s.PointAt(ctU + StepU, ctV + StepV1 * (1 - shift / 2))
                    savept6 = p6
                    savept7 = p7
                    savept8 = p8
                else:
                    p0 = savept6
                    p1 = savept7
                    p2 = savept8
                    p6 = s.PointAt(ctU, ctV + StepV1 * (1 - shift / 2))
                    p7 = s.PointAt(ctU + StepU * 0.5, ctV + StepV1 * (1 + shift / 2))
                    p8 = s.PointAt(ctU + StepU, ctV + StepV1 * (1 - shift / 2))
                    savept6 = p6
                    savept7 = p7
                    savept8 = p8
        
                # Add mesh faces
                f.append(MeshFace(len(v), len(v)+ 1, len(v) + 2, len(v) + 3))
                v.extend([p0, p6, p7, p1])
                f.append(MeshFace(len(v), len(v) + 1, len(v)+ 2, len(v) + 3))
                v.extend([p1, p7, p8, p2])
        
                # Increment V Parameter, and multiply by scale due to curvature change
                ctV += StepV1
                thresh -= StepV1
                StepV1 += StepV1 * scale
                
                # mirror side
                if ctV + StepV1 &gt; half_v:
                    ListV.append(thresh)
                    ListV.reverse()
                    revCt = totalV / 2  # rev counter
                
                    for i in range(len(ListV) - 1):
                        revCt += ListV[i]
                
                        if i == 0:
                            p0 = s.PointAt(ctU, revCt - ListV[i + 1] * shift / 2)
                            #print(ctU, revCt - ListV[i + 1] * shift / 2)
                            p1 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * shift / 2)
                            p2 = s.PointAt(ctU + StepU, revCt - ListV[i + 1] * shift / 2)
                
                            f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                            v.extend([p6, p0, p1, p7])
                
                            f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                            v.extend([p7, p1, p2, p8])
                
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1] * (1 - shift / 2))
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * (1 + shift / 2))
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1] * (1 - shift / 2))
                            savept6 = p6
                            savept7 = p7
                            savept8 = p8
                        elif i == (len(ListV) - 2):
                            p0 = savept6
                            p1 = savept7
                            p2 = savept8
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1])
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1])
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1])
                        else:
                            p0 = savept6
                            p1 = savept7
                            p2 = savept8
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1] * (1 - shift / 2))
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * (1 + shift / 2))
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1] * (1 - shift / 2))
                            savept6 = p6
                            savept7 = p7
                            savept8 = p8
                        
                        f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                        v.extend([p1, p7, p8, p2])
                        f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                        v.extend([p0, p6, p7, p1])
                        
                    b = False
                    
            ctU += StepU
            
        # Create Mesh
        #print(v)
        mesh = Mesh()
        for point in v:
            mesh.Vertices.Add(point)
        mesh.Faces.AddFaces(f)
        mesh.Weld(100)
        mesh.RebuildNormals()

        return mesh
        
    def get_mesh_face_edges(self, mesh, f, flag):
        edge_id = mesh.TopologyEdges.GetEdgesForFace(f)
        ids = [0, 1] if flag else [1, 2]
        return ids
    
    def stripper(self, mesh):
        f_e = {}
        f_rotation_flip = {}
        f_e_temp = {}
        f_rotation_flip_temp = {}
        flagArray = [False] * mesh.Faces.Count
        num = 0
    
        for i in range(mesh.Faces.Count):
            face_1 = 0
            num2 = 0
            while num2 &lt; mesh.Faces.Count:
                if flagArray[num2]:
                    num2 += 1
                else:
                    face_1 = num2
                    break
    
            mesh1 = Rhino.Geometry.Mesh()
            mesh1.Vertices.AddVertices(mesh.Vertices)
            mesh1.Faces.AddFace(mesh.Faces[face_1])
    
            f_e_temp[face_1] = get_mesh_face_edges(mesh, face_1, i % 2 == 0)
            f_rotation_flip_temp[face_1] = i % 2 == 0
    
            nums = [face_1]
            flagArray[face_1] = True
            num += 1
            flags = [False]
            flag = False
    
            while not flag:
                flag1 = False
                for j in range(mesh1.Faces.Count):
                    if not flags[j]:
                        f_n = mesh.Faces.AdjacentFaces(nums[j])
                        for k in range(len(f_n)):
                            if not flagArray[f_n[k]]:
                                f = mesh1.Faces[j]
                                a = f.A
                                b = f.B
                                c = f.C
                                d = f.D
                                f = mesh.Faces[f_n[k]]
                                a1 = f.A
                                b1 = f.B
                                c1 = f.C
                                d1 = f.D
                                if (a == b1 and b == a1) or (c == d1 and d == c1) or (c == b1 and d == a1) or (b == c1 and a == d1):
                                    f_e_temp[f_n[k]] = get_mesh_face_edges(mesh, f_n[k], i % 2 == 0)
                                    f_rotation_flip_temp[f_n[k]] = i % 2 == 0
    
                                    mesh1.Faces.AddFace(mesh.Faces[f_n[k]])
                                    nums.append(f_n[k])
                                    flags.append(False)
                                    flagArray[f_n[k]] = True
                                    num += 1
                                    flag1 = True
                        flags[j] = True
    
                if flag1:
                    continue
    
                flag = True
                mesh1.Vertices.CullUnused()
    
            f_e_temp_keys = list(f_e_temp.keys())
            if i % 2 == 0:
                f_e_temp_keys.reverse()
    
            for j in range(len(f_e_temp_keys)):
                f_e[f_e_temp_keys[j]] = f_e_temp[f_e_temp_keys[j]]
                f_rotation_flip[f_e_temp_keys[j]] = f_rotation_flip_temp[f_e_temp_keys[j]]
    
            f_e_temp = {}
            f_rotation_flip_temp = {}
    
        return f_e, f_rotation_flip
    
    def update_neighbour_plane(self, update_plane, curr_face, curr_edge):
        face_neighbors = self.mesh.TopologyEdges.GetConnectedFaces(curr_edge)
        if len(face_neighbors) == 1:
            return
    
        if face_neighbors[0] == curr_face:
            face_neighbors.reverse()
    
        neighbor_edges = [0, 0, 0, 0]
        for i in range(4):
            neighbor_edges[i] = self.mesh.TopologyEdges.GetEdgeIndex(
                self.f_v[face_neighbors[0]][i],
                self.f_v[face_neighbors[0]][(i + 1) % 4]
            )
    
        neighbor_edge = neighbor_edges.index(curr_edge)
    
        self.e_planes[face_neighbors[0]][neighbor_edge] = Plane(
            update_plane.Origin,
            -update_plane.XAxis,
            update_plane.YAxis
        )
    
    def get_edge_planes(self):
        try:
            for i in range(len(mesh.Faces)):
                self.f_v[i] = [mesh.Faces[i][0], mesh.Faces[i][1], mesh.Faces[i][2], mesh.Faces[i][3]]
    
            self.e_planes = [None] * len(self.f_v)
            self.f_planes = [None] * len(self.f_v)
            self.f_me = [None] * len(self.f_v)
    
            for i in range(len(self.f_v)):
                n = len(self.f_v[i])
                self.e_planes[i] = [None] * n
                self.f_planes[i] = Plane(mesh.MeshFaceCenter(i), mesh.FaceNormals[i])
                self.f_me[i] = [None] * len(self.f_v[i])
    
                for j in range(len(self.f_v[i])):
                    v1 = self.f_v[i][(j + 0) % n]
                    v2 = self.f_v[i][(j + 1) % n]
    
                    e = mesh.TopologyEdges.GetEdgeIndex(v1, v2)
                    self.f_me[i][j] = e
                    cf = mesh.TopologyEdges.GetConnectedFaces(e)
    
                    sum = Vector3d.Zero
                    for k in range(len(cf)):
                        sum += mesh.FaceNormals[cf[k]]
                    sum /= len(cf)
    
                    edgePlane = Plane(
                        (Point3d)(mesh.Vertices[v1] + mesh.Vertices[v2]) * 0.5,
                        mesh.Vertices[v1] - mesh.Vertices[v2], sum)
    
                    self.e_planes[i][j] = edgePlane
    
        except Exception as e:
            Rhino.RhinoApp.WriteLine(str(e))
    
    def orthogonalize_planes(self, plane):
        zaxis_coord_abs = [abs(plane.ZAxis.X), abs(plane.ZAxis.Y), abs(plane.ZAxis.Z)]
        zaxis_coord = [plane.ZAxis.X, plane.ZAxis.Y, plane.ZAxis.Z]
        id = [0, 1, 2]
    
        zaxis_coord_abs, id = (list(t) for t in zip(*sorted(zip(zaxis_coord_abs, id), key=lambda pair: pair[0])))
    
        coord = math.copysign(math.ceil(abs(zaxis_coord[id[2]])), zaxis_coord[id[2]])
    
        if id[2] == 0:
            plane0 = Plane(plane.Origin, Vector3d(coord, 0, 0))
            return plane0
        elif id[2] == 1:
            plane0 = Plane(plane.Origin, Vector3d(0, coord, 0))
            return plane0
        else:
            plane0 = Plane(plane.Origin, Vector3d(0, 0, coord))
            return plane0
    
    def rotate_planes(self):
        for i in range(mesh.Faces.Count):
            for j in range(4):
                e = mesh.TopologyEdges.GetEdgeIndex(f_v[i][j], f_v[i][(j + 1) % 4])
    
                if len(mesh.TopologyEdges.GetConnectedFaces(e)) == 2:
                    sign = -1 if f_rotation_flip[i] else 1
                    sign = sign * 1 if j % 2 == 0 else sign * -1
                    sign = 1
    
                    if j % 2 == 0 and f_rotation_flip[i]:
                        e_planes[i][j] = PlaneUtil.MovePlanebyAxis(e_planes[i][j], plate_thickness * edge_offset)
                        update_neighbour_plane(e_planes[i][j], i, e)
                    if j % 2 == 0 and not f_rotation_flip[i]:
                        update_neighbour_plane(e_planes[i][j], i, e)
                        e_planes[i][j] = PlaneUtil.MovePlanebyAxis(e_planes[i][j], plate_thickness * edge_offset)
                    if j % 2 == 1 and f_rotation_flip[i]:
                        e_planes[i][j].Rotate(math.radians(edge_rotation * sign * 1), e_planes[i][j].YAxis)
                        update_neighbour_plane(e_planes[i][j], i, e)
                        sign *= 1
                    if j % 2 == 1 and not f_rotation_flip[i]:
                        sign *= -1
                        e_planes[i][j].Rotate(math.radians(edge_rotation * sign * 1), e_planes[i][j].YAxis)
                        update_neighbour_plane(e_planes[i][j], i, e)
                elif ortho:
                    e_planes[i][j] = orthogonalize_planes(e_planes[i][j])
    
    def get_bisector_planes(self):
        bi_planes = []
    
        for i in range(mesh.Faces.Count):
            bi_planes_i = []
            for j in range(4):
                pl1 = e_planes[i][j]
                pl0 = e_planes[i][(j + 1) % 4]
                bi_planes_i.append(PlaneUtil.DihedralPlane(pl0, pl1))
            bi_planes.append(bi_planes_i)
    
        return bi_planes
    
    def get_plates(self):
        plines = []
    
        for f, e in self.f_e.items():
            # Offset Planes
            e_planes_local = []
            for j in range(4):
                pl = self.e_planes[f][j] if j not in e else PlaneUtil.MovePlanebyAxis(self.e_planes[f][j], self.plate_thickness)
                e_planes_local.append(pl)
    
            # Get Top Plates
            plines.append(PolylineUtil.PolylineFromPlanes(PlaneUtil.MovePlanebyAxis(self.f_planes[f], self.box_height * 0.5 - self.top_plate_inlet - self.plate_thickness * 0.5), e_planes_local))
            plines.append(PolylineUtil.PolylineFromPlanes(PlaneUtil.MovePlanebyAxis(self.f_planes[f], self.box_height * 0.5 - self.top_plate_inlet + self.plate_thickness * 0.5), e_planes_local))
            plines.append(PolylineUtil.PolylineFromPlanes(PlaneUtil.MovePlanebyAxis(self.f_planes[f], -self.box_height * 0.5 + self.top_plate_inlet - self.plate_thickness * 0.5), e_planes_local))
            plines.append(PolylineUtil.PolylineFromPlanes(PlaneUtil.MovePlanebyAxis(self.f_planes[f], -self.box_height * 0.5 + self.top_plate_inlet + self.plate_thickness * 0.5), e_planes_local))
    
            # Get Side Plates
            for j in range(len(e)):
                curr = e[j]
                prev = MathUtil.Wrap(e[j] - 1, 4)
                next = MathUtil.Wrap(e[j] + 1, 4)
    
                # Side planes
                side_plane0 = PlaneUtil.MovePlanebyAxis(self.f_planes[f], self.box_height * 0.5)
                side_plane1 = e_planes[f][prev] if j == 0 else self.bi_planes[f][prev]
                side_plane2 = PlaneUtil.MovePlanebyAxis(self.f_planes[f], -self.box_height * 0.5)
                side_plane3 = e_planes[f][next] if j != 0 else self.bi_planes[f][curr]
                side_planes = [side_plane0, side_plane1, side_plane2, side_plane3]
    
                # Top and bottom plane plane
                base_plane0 = self.e_planes[f][curr]
                base_plane1 = PlaneUtil.MovePlanebyAxis(self.e_planes[f][curr], self.plate_thickness)
    
                plines.append(PolylineUtil.PolylineFromPlanes(base_plane0, side_planes))
                plines.append(PolylineUtil.PolylineFromPlanes(base_plane1, side_planes))
    
        return plines
    
    # output
    #    public List&lt;Polyline&gt; plines;//pair of outlines
    #    public Vector3d[][] insertion_vectors;//v0,v1,v2,v3,v4,v5
    #    public int[][] adjacency;//0,1
    #    public int[][] joints_per_face;//0,0,1,1,2,2
    #    public List&lt;int[]&gt; three_valence;//43, 41, 45, 41
    def get_joinery_solver_output(self):
        # Insertion vectors
        counter = 0
        
        for o in f_e.items():
            f = o[0]
            e = o[1]
            e.sort()
            if e[0] == 0 and e[1] == 3:
                e.reverse()
        
            # Get vertices to construct vectors
            v = [self.mesh.Faces[f].A, self.mesh.Faces[f].B, self.mesh.Faces[f].C, self.mesh.Faces[f].D]
            v0_0 = v[e[0]]
            v0_1 = v[(e[0] + 1) % 4]
            v1_0 = v[e[1]]
            v1_1 = v[(e[1] + 1) % 4]
        
            dir0 = self.mesh.Vertices[v0_1] - self.mesh.Vertices[v0_0]
            dir1 = self.mesh.Vertices[v0_1] - self.mesh.Vertices[v1_1]
            dir0.Unitize()
            dir1.Unitize()
        
            l0 = PlaneUtil.PlanePlane(self.f_planes[f], self.bi_planes[f][e[0]])
            bisector_dir0 = l0.To - l0.From
            bisector_dir0.Unitize()
        
            l1 = PlaneUtil.PlanePlane(self.f_planes[f], self.bi_planes[f][(e[1] + 1) % 4])
            bisector_dir1 = l1.To - l1.From
            bisector_dir1.Unitize()
        
            # Assign vectors per box
            self.box_insertion_vectors[counter] = bisector_dir1
            self.box_insertion_lines[counter] = Line(
                PolylineUtil.CenterPoint(self.plines[counter * 8 + 1]),
                PolylineUtil.CenterPoint(self.plines[counter * 8 + 1]) + bisector_dir1 * 300)
        
            # Assign vectors per face
        
            # Top and bottom plate
            insertions = [Vector3d.Zero, Vector3d.Zero, bisector_dir1, bisector_dir1, bisector_dir1, bisector_dir1]
            insertions[2 + ((e[1] + 2) % 4)] = bisector_dir0
            insertions[2 + ((e[1] + 3) % 4)] = bisector_dir0
            self.insertion_vectors[counter * 4 + 0] = insertions
            self.insertion_vectors[counter * 4 + 1] = insertions
        
            # Side plates
            self.insertion_vectors[counter * 4 + 2] = [Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero]
            self.insertion_vectors[counter * 4 + 3] = [Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero]
            counter += 1
        
        # Flatten ID Mapping
        counter = 0
        dict_plate_id_meshface_id = {}
        for o in f_e.items():
            dict_plate_id_meshface_id[o[0]] = counter
            counter += 1
        
        ##############################################################################
        # Adjacency
        ##############################################################################
        unique_key = set()
        # Box adjacency
        counter = 0
        for o in f_e.items():
            f = o[0]
            e = o[1]
        
            # Current box
            self.adjacency.append([counter * 4 + 0, counter * 4 + 2, -1, -1])
            self.adjacency.append([counter * 4 + 0, counter * 4 + 3, -1, -1])
            self.adjacency.append([counter * 4 + 1, counter * 4 + 2, -1, -1])
            self.adjacency.append([counter * 4 + 1, counter * 4 + 3, -1, -1])
            self.adjacency.append([counter * 4 + 2, counter * 4 + 3, -1, -1])
            # Neighbors
            m_e_0 = self.f_me[f][e[0]]  # mesh.TopologyEdges.GetEdgeIndex(v[e[0]], v[(e[0] + 1) % 4])
            m_e_1 = self.f_me[f][e[1]]  # mesh.TopologyEdges.GetEdgeIndex(v[e[1]], v[(e[1] + 1) % 4])
        
            f0 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_0)
            if len(f0) == 2:
                next_face = f0[0] if f0[0] != f else f0[1]
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 0, counter * 4 + 2, -1, -1])
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 1, counter * 4 + 2, -1, -1])
        
            f1 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_1)
            if len(f1) == 2:
                next_face = f1[0] if f1[0] != f else f1[1]
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 0, counter * 4 + 3, -1, -1])
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 1, counter * 4 + 3, -1, -1])
        
            counter += 1
        
        ##############################################################################
        # Three valence
        ##############################################################################
        # Initialize counter variable
        counter = 0
        
        # Loop through key-value pairs
        for f, e in f_e.items():
            # Retrieve topology vertices of current face
            v = [mesh.Faces[f].A, mesh.Faces[f].B, mesh.Faces[f].C, mesh.Faces[f].D]
            
            # Retrieve topology edge indexes
            m_e_0 = f_me[f][e[0]]
            m_e_1 = f_me[f][e[1]]
            
            # Retrieve connected faces of topology edges
            e_f_0 = mesh.TopologyEdges.GetConnectedFaces(m_e_0)
            
            # Check if edge m_e_0 is shared by two faces
            if len(e_f_0) == 2:
                # Retrieve index of the other face connected to m_e_0
                f_0 = e_f_0[1 - e_f_0.index(f)]
                
                # Retrieve index of neighboring face from dictionary
                nei0 = dict_plate_id_meshface_id[f_0]
                
                # Add connectivity information to three_valence list
                three_valence.append([counter * 4 + 0, counter * 4 + 2, nei0 * 4 + 0, counter * 4 + 2])
                three_valence.append([counter * 4 + 1, counter * 4 + 2, nei0 * 4 + 1, counter * 4 + 2])
            
            # Retrieve connected faces of topology edges
            e_f_1 = mesh.TopologyEdges.GetConnectedFaces(m_e_1)
            
            # Check if edge m_e_1 is shared by two faces
            if len(e_f_1) == 2:
                # Retrieve index of the other face connected to m_e_1
                f_1 = e_f_1[1 - e_f_1.index(f)]
                
                # Retrieve index of neighboring face from dictionary
                nei1 = dict_plate_id_meshface_id[f_1]
                
                # Add connectivity information to three_valence list
                three_valence.append([counter * 4 + 0, counter * 4 + 3, nei1 * 4 + 0, counter * 4 + 3])
                three_valence.append([counter * 4 + 1, counter * 4 + 3, nei1 * 4 + 1, counter * 4 + 3])
            
            # Increment counter
            counter += 1
        
        ##############################################################################
        # Joints per face
        ##############################################################################
        # Initialize counter variable
        counter = 0
        
        # Loop through key-value pairs
        for f, e in f_e.items():
            # top-bottom
            joints_per_face[counter * 4 + 0] = [0, 0, 20, 20, 20, 20]
            joints_per_face[counter * 4 + 1] = [0, 0, 20, 20, 20, 20]
        
            # sides
            # set all to 0 except the dovetail
            a = 1 if e[0] == 3 and e[1] == 0 else 0
            b = 0 if e[0] == 3 and e[1] == 0 else 1
            joints_per_face[counter * 4 + 2 + a] = [0, 0, 0, 0, 10, 0]
            joints_per_face[counter * 4 + 2 + b] = [0, 0, 10, 0, 0, 0]
            counter += 1
        
    def run(self):
        self.stripper()
        self.get_edge_planes()
        self.rotate_planes()
        self.get_bisector_planes()
        self.get_plates()
        self.get_joinery_solver_output()



chevron = Chevron(None)
_mesh = chevron.chevron_grid(_surface)</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>832</X>
                      <Y>571</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>2513</W>
                      <H>1958</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">d1e9f2d2-5440-420e-9f62-4797c6d52944</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>24</X>
                          <Y>175</Y>
                          <W>156</W>
                          <H>104</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>122</X>
                          <Y>227</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="9">
                        <item name="InputCount" type_name="gh_int32" type_code="3">5</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="3" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="4" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="7">
                        <chunk name="InputParam" index="0">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">0a0a3d4f-0cfe-4264-acc8-ac409ed5ec8b</item>
                            <item name="Name" type_name="gh_string" type_code="10">_surface</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_surface</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">413becb6-7abc-45cf-b5c7-b3205a7e6f4f</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">f4070a37-c822-410f-9057-100d2e22a22d</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>26</X>
                                  <Y>177</Y>
                                  <W>81</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>68</X>
                                  <Y>187</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _u_divisions.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">576b5b05-52d9-4a09-b072-3e5ebc218d1c</item>
                            <item name="Name" type_name="gh_string" type_code="10">_u_divisions</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_u_divisions</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">48d01794-d3d8-4aef-990e-127168822244</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>26</X>
                                  <Y>197</Y>
                                  <W>81</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>68</X>
                                  <Y>207</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _v_division_dist.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">71c7651b-cdae-449e-b0df-82f3fac19163</item>
                            <item name="Name" type_name="gh_string" type_code="10">_v_division_dist</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_v_division_dist</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>26</X>
                                  <Y>217</Y>
                                  <W>81</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>68</X>
                                  <Y>227</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="3">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _shift.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">8d0b9db7-1c26-437c-ae51-3a26ad7fafa6</item>
                            <item name="Name" type_name="gh_string" type_code="10">_shift</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_shift</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>26</X>
                                  <Y>237</Y>
                                  <W>81</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>68</X>
                                  <Y>247</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="4">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _scale.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">80f4a469-672f-4d8b-8a33-ab37e675a00b</item>
                            <item name="Name" type_name="gh_string" type_code="10">_scale</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_scale</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>26</X>
                                  <Y>257</Y>
                                  <W>81</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>68</X>
                                  <Y>267</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">a4eefa29-f37c-414a-a4d5-b7924c69cc21</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>137</X>
                                  <Y>177</Y>
                                  <W>41</W>
                                  <H>50</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>157.5</X>
                                  <Y>202</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output _mesh.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                            <item name="Name" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>137</X>
                                  <Y>227</Y>
                                  <W>41</W>
                                  <H>50</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>157.5</X>
                                  <Y>252</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="14">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">import Rhino
import Rhino.Geometry
from Rhino.Geometry import Surface, Mesh, MeshFace, Point3d, Point3f, Vector3d, Plane, Line
import math
import System
from collections import OrderedDict
import Grasshopper

class Chevron:
    # User inputs
    mesh = None
    edge_rotation = 0.0
    edge_offset = 0.0
    box_height = 0.0
    top_plate_inlet = 0.0
    plate_thickness = 0.0
    ortho = False

    # Class generated properties
    f_e = OrderedDict()
    f_rotation_flip = OrderedDict()
    bi_planes = []
    e_planes = []
    f_planes = []

    # Output
    f_v = []
    f_me = []
    plines = [] # pair of outlines
    insertion_vectors = [] # v0,v1,v2,v3,v4,v5
    adjacency = [] # v0,v1, f0, f1
    joints_per_face = [] # 0,0,1,1,2,2
    three_valence = [] # 43, 41, 45, 41

    # Display
    box_insertion_vectors = [] # v0,v1,v2,v3,v4,v5
    box_insertion_lines = [] # v0,v1,v2,v3,v4,v5
    
    def __init__(self, mesh, edge_rotation=1, edge_offset=0.5, box_height=760, top_plate_inlet=80, plate_thickness=40, ortho=True):

        if mesh == None:
            return
        self.mesh = mesh # assuming DuplicateMesh() is a method in Rhino or some other external library
        self.mesh.Flip(True, True, True)

        self.edge_rotation = max(min(edge_rotation, 30), -30) # constrain self.edge_rotation to -30 to 30
        self.edge_offset = max(min(edge_offset, 2), -2) # constrain self.edge_offset to -2 to 2

        self.box_height = max(min(box_height, 100000000), 1) # constrain box_height to 1 to infinity
        
        self.top_plate_inlet = max(min(top_plate_inlet, box_height * 0.333), 1) # constrain top_plate_inlet to 1 to box_height * 0.333
        #print(self.top_plate_inlet)
        self.plate_thickness = max(min(plate_thickness, box_height * 0.333), 1) # constrain self.plate_thickness to 1 to box_height * 0.333
        #print(self.plate_thickness)
        self.ortho = ortho

        # output
        self.plines = [] # list of Polyline objects
        self.insertion_vectors = [[] for _ in range(self.mesh.Faces.Count * 4)] # list of Vector3d arrays
        self.adjacency = [] # list of int arrays
        self.joints_per_face = [[] for _ in range(self.mesh.Faces.Count * 4)] # list of int arrays
        self.three_valence = [] # list of int arrays
        self.f_v = [[] for _ in range(self.mesh.Faces.Count)] # list of int arrays
        self.f_me = [[] for _ in range(self.mesh.Faces.Count)] # list of int arrays

        # display
        self.box_insertion_vectors = [None] * self.mesh.Faces.Count # list of Vector3d objects
        self.box_insertion_lines = [None] * self.mesh.Faces.Count # list of Line objects
    
    def chevron_grid(self, s, u_divisions=4, v_division_dist=900, shift=0.5, scale=0.05799):
        
        # Python code
        # Inputs to construct self.mesh
        f = []
        v = []
        
        # Get Surface Interval, divisionStep, baseStep, maxStep, and Delta parameters
        DomU = s.Domain(0)
        DomV = s.Domain(1)
        half_v = DomV.T1 * 0.5
        StepU = (DomU.T1 - DomU.T0) / u_divisions
        baseStepV = v_division_dist
        maxStepV = 2500
        Delta = maxStepV - baseStepV
        
        totalV = DomV[1] - DomV[0]
        rem = (totalV / 2) - ((maxStepV / 2) + baseStepV + Delta)
        stepV = rem / baseStepV
        
        # Iterate number strips of the NURBS
        ctU = 0
        for j in range(u_divisions):
            ctV = 0
            thresh = totalV / 2
            StepV1 = baseStepV
            b = True
            ListV = []
        
            p0, p1, p2, p6, p7, p8 = None,None,None,None,None,None
            savept6 = Point3f.Unset
            savept7 = Point3f.Unset
            savept8 = Point3f.Unset
            iterations = 0

            while b and iterations &lt; 1000:
                iterations += 1
                ListV.append(StepV1)
        
                # Get First Half of a Quads
                if ctV == 0:
                    
                    p0 = s.PointAt(ctU, ctV)
                    
                    p1 = s.PointAt(ctU + StepU * 0.5, ctV)
                    p2 = s.PointAt(ctU + StepU, ctV)
                    p6 = s.PointAt(ctU, ctV + StepV1 * (1 - shift / 2))
                    p7 = s.PointAt(ctU + StepU * 0.5, ctV + StepV1 * (1 + shift / 2))
                    p8 = s.PointAt(ctU + StepU, ctV + StepV1 * (1 - shift / 2))
                    savept6 = p6
                    savept7 = p7
                    savept8 = p8
                else:
                    p0 = savept6
                    p1 = savept7
                    p2 = savept8
                    p6 = s.PointAt(ctU, ctV + StepV1 * (1 - shift / 2))
                    p7 = s.PointAt(ctU + StepU * 0.5, ctV + StepV1 * (1 + shift / 2))
                    p8 = s.PointAt(ctU + StepU, ctV + StepV1 * (1 - shift / 2))
                    savept6 = p6
                    savept7 = p7
                    savept8 = p8
        
                # Add self.mesh faces
                f.append(MeshFace(len(v), len(v)+ 1, len(v) + 2, len(v) + 3))
                v.extend([p0, p6, p7, p1])
                f.append(MeshFace(len(v), len(v) + 1, len(v)+ 2, len(v) + 3))
                v.extend([p1, p7, p8, p2])
        
                # Increment V Parameter, and multiply by scale due to curvature change
                ctV += StepV1
                thresh -= StepV1
                StepV1 += StepV1 * scale
                
                # mirror side
                if ctV + StepV1 &gt; half_v:
                    ListV.append(thresh)
                    ListV.reverse()
                    revCt = totalV / 2  # rev counter
                
                    for i in range(len(ListV) - 1):
                        revCt += ListV[i]
                
                        if i == 0:
                            p0 = s.PointAt(ctU, revCt - ListV[i + 1] * shift / 2)
                            #print(ctU, revCt - ListV[i + 1] * shift / 2)
                            p1 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * shift / 2)
                            p2 = s.PointAt(ctU + StepU, revCt - ListV[i + 1] * shift / 2)
                
                            f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                            v.extend([p6, p0, p1, p7])
                
                            f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                            v.extend([p7, p1, p2, p8])
                
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1] * (1 - shift / 2))
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * (1 + shift / 2))
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1] * (1 - shift / 2))
                            savept6 = p6
                            savept7 = p7
                            savept8 = p8
                        elif i == (len(ListV) - 2):
                            p0 = savept6
                            p1 = savept7
                            p2 = savept8
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1])
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1])
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1])
                        else:
                            p0 = savept6
                            p1 = savept7
                            p2 = savept8
                            p6 = s.PointAt(ctU, revCt + ListV[i + 1] * (1 - shift / 2))
                            p7 = s.PointAt(ctU + StepU * 0.5, revCt + ListV[i + 1] * (1 + shift / 2))
                            p8 = s.PointAt(ctU + StepU, revCt + ListV[i + 1] * (1 - shift / 2))
                            savept6 = p6
                            savept7 = p7
                            savept8 = p8
                        
                        f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                        v.extend([p1, p7, p8, p2])
                        f.append(MeshFace(len(v), len(v) + 1, len(v) + 2, len(v) + 3))
                        v.extend([p0, p6, p7, p1])
                        
                    b = False
                    
            ctU += StepU
            
        # Create Mesh
        #print(v)
        self.mesh = Mesh()
        for point in v:
            self.mesh.Vertices.Add(point)
        self.mesh.Faces.AddFaces(f)
        self.mesh.Weld(100)
        self.mesh.RebuildNormals()

        return self.mesh
        
    def get_mesh_face_edges(self, f, flag):
        edge_id = self.mesh.TopologyEdges.GetEdgesForFace(f)
        ids = [0, 1] if flag else [1, 2]
        return ids
    
    def stripper(self):
        self.f_e = OrderedDict()
        self.f_rotation_flip = OrderedDict()
        f_e_temp = OrderedDict()
        f_rotation_flip_temp = OrderedDict()
        flagArray = [False] * self.mesh.Faces.Count
        num = 0
    
        for i in range(self.mesh.Faces.Count):
            if(num&gt;=self.mesh.Faces.Count):
                break
            
            face_1 = 0
            num2 = 0
            while num2 &lt; self.mesh.Faces.Count:
                if flagArray[num2]:
                    num2 += 1
                else:
                    face_1 = num2
                    break
    
            self.mesh1 = Rhino.Geometry.Mesh()
            self.mesh1.Vertices.AddVertices(self.mesh.Vertices)
            self.mesh1.Faces.AddFace(self.mesh.Faces[face_1])
    
            f_e_temp[face_1] = self.get_mesh_face_edges( face_1, i % 2 == 0)
            f_rotation_flip_temp[face_1] = i % 2 == 0
    
            nums = [face_1]
            flagArray[face_1] = True
            num += 1
            flags = [False]
            flag = False
    
            while not flag:
                flag1 = False
                for j in range(self.mesh1.Faces.Count):
                    if not flags[j]:
                        f_n = self.mesh.Faces.AdjacentFaces(nums[j])
                        for k in range(len(f_n)):
                            if not flagArray[f_n[k]]:
                                f = self.mesh1.Faces[j]
                                a = f.A
                                b = f.B
                                c = f.C
                                d = f.D
                                f = self.mesh.Faces[f_n[k]]
                                a1 = f.A
                                b1 = f.B
                                c1 = f.C
                                d1 = f.D
                                if (a == b1 and b == a1) or (c == d1 and d == c1) or (c == b1 and d == a1) or (b == c1 and a == d1):
                                    f_e_temp[f_n[k]] = self.get_mesh_face_edges( f_n[k], i % 2 == 0)
                                    f_rotation_flip_temp[f_n[k]] = i % 2 == 0
    
                                    self.mesh1.Faces.AddFace(self.mesh.Faces[f_n[k]])
                                    nums.append(f_n[k])
                                    flags.append(False)
                                    flagArray[f_n[k]] = True
                                    num += 1
                                    flag1 = True
                        flags[j] = True
    
                if flag1:
                    continue
    
                flag = True
                self.mesh1.Vertices.CullUnused()
                # Rhino.RhinoDoc.ActiveDoc.Objects.AddMesh(self.mesh1)
    
            f_e_temp_keys = list(f_e_temp.keys())
            if i % 2 == 0:
                f_e_temp_keys.reverse()
            
            #print(len(f_e_temp_keys))
            for j in range(len(f_e_temp_keys)):
                
                self.f_e[f_e_temp_keys[j]] = f_e_temp[f_e_temp_keys[j]]
                
                self.f_rotation_flip[f_e_temp_keys[j]] = f_rotation_flip_temp[f_e_temp_keys[j]]
                #print(self.f_rotation_flip)
                
                #if(f_e_temp_keys == 10):
                    
                    #print(f_rotation_flip_temp[f_e_temp_keys[j]])
    
            f_e_temp = OrderedDict()
            f_rotation_flip_temp = OrderedDict()
        
        #print(self.f_rotation_flip )
        #print(self.f_rotation_flip)
#        for val in self.f_e:
#            print(val, self.f_e[val])
    
    def update_neighbour_plane(self, update_plane, curr_face, curr_edge):
        
        
        face_neighbors = self.mesh.TopologyEdges.GetConnectedFaces(curr_edge)
        if len(face_neighbors) == 1:
            return
        
        
        if face_neighbors[0] == curr_face:
            face_neighbors = [face_neighbors[1],face_neighbors[0]]
    
        neighbor_edges = [0, 0, 0, 0]
        for i in range(4):
            neighbor_edges[i] = self.mesh.TopologyEdges.GetEdgeIndex(
                self.f_v[face_neighbors[0]][i],
                self.f_v[face_neighbors[0]][(i + 1) % 4]
            )
    
        neighbor_edge = neighbor_edges.index( curr_edge )
        """
        if(curr_face == 139):
            print("Hi", face_neighbors, curr_edge, neighbor_edges)
            print(face_neighbors[0])
            print(curr_face)
            print(self.e_planes[face_neighbors[0]][neighbor_edge])
            Rhino.RhinoDoc.ActiveDoc.Objects.AddLine(self.mesh.TopologyEdges.EdgeLine(curr_edge))
        """
        self.e_planes[face_neighbors[0]][neighbor_edge] = Plane(
            update_plane.Origin,
            -update_plane.XAxis,
            update_plane.YAxis
        )
        
    
    def get_edge_planes(self):
        try:
            for i in range(len(self.mesh.Faces)):
                self.f_v[i] = [self.mesh.Faces[i][0], self.mesh.Faces[i][1], self.mesh.Faces[i][2], self.mesh.Faces[i][3]]
    
            self.e_planes = [None] * len(self.f_v)
            self.f_planes = [None] * len(self.f_v)
            self.f_me = [None] * len(self.f_v)
    
            for i in range(len(self.f_v)):
                n = len(self.f_v[i])
                self.e_planes[i] = [None] * n
                self.f_planes[i] = Plane(self.mesh.Faces.GetFaceCenter(i), Vector3d(self.mesh.FaceNormals[i]))
                self.f_me[i] = [None] * len(self.f_v[i])
    
                for j in range(len(self.f_v[i])):
                    v1 = self.f_v[i][(j + 0) % n]
                    v2 = self.f_v[i][(j + 1) % n]
    
                    e = self.mesh.TopologyEdges.GetEdgeIndex(v1, v2)
                    self.f_me[i][j] = e
                    cf = self.mesh.TopologyEdges.GetConnectedFaces(e)
    
                    sum = Vector3d.Zero
                    for k in range(len(cf)):
                        sum = sum + Vector3d(self.mesh.FaceNormals[cf[k]])
                    sum /= len(cf)
    
                    edgePlane = Plane(
                        (Point3d)(self.mesh.Vertices[v1] + self.mesh.Vertices[v2]) * 0.5,
                        self.mesh.Vertices[v1] - self.mesh.Vertices[v2], sum)
    
                    self.e_planes[i][j] = edgePlane
            
        except Exception as e:
            print(str(e))
    
    def orthogonalize_planes(self, plane):
        
        zaxis_coord_abs = [abs(plane.ZAxis.X), abs(plane.ZAxis.Y), abs(plane.ZAxis.Z)]
        zaxis_coord = [plane.ZAxis.X, plane.ZAxis.Y, plane.ZAxis.Z]
        id = [0, 1, 2]
    
        zaxis_coord_abs, id = (list(t) for t in zip(*sorted(zip(zaxis_coord_abs, id), key=lambda pair: pair[0])))
    
        coord = math.copysign(math.ceil(abs(zaxis_coord[id[2]])), zaxis_coord[id[2]])
    
        if id[2] == 0:
            plane0 = Plane(plane.Origin, Vector3d(coord, 0, 0))
            return plane0
        elif id[2] == 1:
            plane0 = Plane(plane.Origin, Vector3d(0, coord, 0))
            return plane0
        else:
            plane0 = Plane(plane.Origin, Vector3d(0, 0, coord))
            return plane0

    def move_plane_by_axis(self, plane, dist, axis=2):
        plane1 = Rhino.Geometry.Plane(plane)
        if axis == 0:
            plane1.Translate(plane1.XAxis * dist)
        elif axis == 1:
            plane1.Translate(plane1.YAxis * dist)
        else:
            plane1.Translate(plane1.Normal * dist)
        return plane1

    def rotate_planes(self):
        
        #print(self.f_e)
        
        for i in range(self.mesh.Faces.Count):
            for j in range(4):
                e = self.mesh.TopologyEdges.GetEdgeIndex(self.f_v[i][j], self.f_v[i][(j + 1) % 4])
                #print("___")

                if len(self.mesh.TopologyEdges.GetConnectedFaces(e)) == 2:
                    sign = -1 if self.f_rotation_flip[i] else 1
                    sign = sign * 1 if j % 2 == 0 else sign * -1
                    sign = 1
                    
                    #if(i == 162):
                        #print(j)
                    
                    if (j in self.f_e[i]):
                        
                        
                        if j % 2 == 0 and self.f_rotation_flip[i]:
                            self.e_planes[i][j] = self.move_plane_by_axis(self.e_planes[i][j], self.plate_thickness * self.edge_offset)
                            self.update_neighbour_plane(self.e_planes[i][j], i, e)
                        if j % 2 == 0 and not self.f_rotation_flip[i]: # this failing
                            
                            self.e_planes[i][j] = self.move_plane_by_axis(self.e_planes[i][j], self.plate_thickness * self.edge_offset)
                            self.update_neighbour_plane(self.e_planes[i][j], i, e)
                        if j % 2 == 1 and self.f_rotation_flip[i]:
                            self.e_planes[i][j].Rotate(math.radians(self.edge_rotation * sign * 1), self.e_planes[i][j].YAxis)
                            self.update_neighbour_plane(self.e_planes[i][j], i, e)
                            
                        if j % 2 == 1 and not self.f_rotation_flip[i]:
                            sign *= -1
                            self.e_planes[i][j].Rotate(math.radians(self.edge_rotation * sign * 1), self.e_planes[i][j].YAxis)
                            self.update_neighbour_plane(self.e_planes[i][j], i, e)
                            
                elif self.ortho:
                    self.e_planes[i][j] = self.orthogonalize_planes(self.e_planes[i][j])
    
    def to_line(self,  v, p, scale = 1):
        return Line(p, p + v * scale);
    
    def dihedral_plane(self, plane0, plane1):
         # Plane between two Planes
            result, l = Rhino.Geometry.Intersect.Intersection.PlanePlane(plane0, plane1)
            result, t = Rhino.Geometry.Intersect.Intersection.LinePlane(l, plane0)
            centerDihedral = l.PointAt(t)
        
            # Convert ZAxis to lines, cant it be done on origin
            angleLine0 = self.to_line(plane0.ZAxis,plane0.Origin) 
            angleLine1 = self.to_line(plane1.ZAxis,plane1.Origin) 
        
            # Plane cannot be anti/parallel and they must be apart from each other
            if not plane0.ZAxis.IsParallelTo(plane1.ZAxis, 0.01) and plane0.Origin.DistanceToSquared(plane1.Origin) &gt; 0.001:
                # Intersect two lines to get center
                result, t0, t1 = Rhino.Geometry.Intersect.Intersection.LineLine(angleLine0, angleLine1,0.01,False)
                
                # Construct plane from LineLine center and plane origins
                center = angleLine0.PointAt(t0)
                v0 = (plane0.Origin - center)
                v1 = (plane1.Origin - center)
                v0.Unitize()
                v1.Unitize()
                
                # Compute Plane
                dihedralPlane = Rhino.Geometry.Plane(centerDihedral, l.Direction, v0 + v1)
        
                return dihedralPlane
            else:
                return Rhino.Geometry.Plane.Unset  # Axes are parallel or anti-parallel, or planes are at the same location
    
    def get_bisector_planes(self):
        self.bi_planes = []
    
        for i in range(self.mesh.Faces.Count):
            bi_planes_i = []
            for j in range(4):
                pl1 = self.e_planes[i][j]
                pl0 = self.e_planes[i][(j + 1) % 4]
                bi_planes_i.append(self.dihedral_plane(pl0, pl1))
            self.bi_planes.append(bi_planes_i)
    
    def polyline_from_planes(self, basePlane, sidePlanes, close=True):
        polyline = Rhino.Geometry.Polyline()
    
        for i in range(len(sidePlanes) - 1):
            result, pt = Rhino.Geometry.Intersect.Intersection.PlanePlanePlane(basePlane, sidePlanes[i], sidePlanes[i + 1])
            polyline.Add(pt)
    
        result, pt1 = Rhino.Geometry.Intersect.Intersection.PlanePlanePlane(basePlane, sidePlanes[len(sidePlanes) - 1], sidePlanes[0])
        polyline.Add(pt1)
    
        if close:
            polyline.Add(polyline[0])
    
        return polyline
    
    def get_plates(self):
        self.plines = []
        #print("________")
        for f, e in self.f_e.items():
            #print(f)
            # Offset Planes
            self.e_planes_local = []
            for j in range(4):
                pl = self.e_planes[f][j] if j not in e else self.move_plane_by_axis(self.e_planes[f][j], self.plate_thickness*1.0)
                self.e_planes_local.append(pl)
                #Rhino.RhinoDoc.ActiveDoc.Objects.AddPoint(self.e_planes[f][j].Origin)
    
            # Get Top Plates
            self.plines.append(self.polyline_from_planes(self.move_plane_by_axis(self.f_planes[f], self.box_height * 0.5 - self.top_plate_inlet - self.plate_thickness * 0.5), self.e_planes_local))
            self.plines.append(self.polyline_from_planes(self.move_plane_by_axis(self.f_planes[f], self.box_height * 0.5 - self.top_plate_inlet + self.plate_thickness * 0.5), self.e_planes_local))
            self.plines.append(self.polyline_from_planes(self.move_plane_by_axis(self.f_planes[f], -self.box_height * 0.5 + self.top_plate_inlet - self.plate_thickness * 0.5), self.e_planes_local))
            self.plines.append(self.polyline_from_planes(self.move_plane_by_axis(self.f_planes[f], -self.box_height * 0.5 + self.top_plate_inlet + self.plate_thickness * 0.5), self.e_planes_local))
    
            # Get Side Plates
            for j in range(len(e)):
                curr = e[j]
                prev = ((e[j] - 1)+4)%4# MathUtil.Wrap(e[j] - 1, 4)
                next = (e[j] + 1)%4
                # Side planes
                side_plane0 = self.move_plane_by_axis(self.f_planes[f], self.box_height * 0.5) # top plane
                side_plane1 = self.e_planes[f][prev] if j == 0 else self.bi_planes[f][prev]
                side_plane2 = self.move_plane_by_axis(self.f_planes[f], -self.box_height * 0.5) # bottom outline
                side_plane3 = self.e_planes[f][next] if j != 0 else self.bi_planes[f][curr]
                side_planes  = [side_plane0, side_plane1, side_plane2, side_plane3]
    
                # Top and bottom plane plane
                base_plane0 = self.e_planes[f][curr]
                base_plane1 = self.move_plane_by_axis(self.e_planes[f][curr], self.plate_thickness)
    
                self.plines.append(self.polyline_from_planes(base_plane0, side_planes))
                self.plines.append(self.polyline_from_planes(base_plane1, side_planes))

    
    def center_point(self, polyline):
        count = len(polyline)
    
        if count == 0:
            return Point3d.Unset
    
        if count == 1:
            return polyline[0]
    
        center = Point3d.Origin
        weight = 0.0
    
        stop = count - 1
        if polyline[0].DistanceToSquared(polyline[polyline.Count - 1]) &gt; 0.001:
            stop += 1
    
        for i in range(stop):
            A = polyline[i]
            B = polyline[(i + 1) % count]
            d = A.DistanceTo(B)
            center += d * 0.5 * (A + B)
            weight += d
    
        center /= weight
    
        return center
    
    # output
    #    public List&lt;Polyline&gt; plines;//pair of outlines
    #    public Vector3d[][] insertion_vectors;//v0,v1,v2,v3,v4,v5
    #    public int[][] adjacency;//0,1
    #    public int[][] joints_per_face;//0,0,1,1,2,2
    #    public List&lt;int[]&gt; three_valence;//43, 41, 45, 41
    def get_joinery_solver_output(self):
        # Insertion vectors
        counter = 0
        
        for o in self.f_e.items():
            f = o[0]
            e = o[1]
            e.sort()
            if e[0] == 0 and e[1] == 3:
                e.reverse()
        
            # Get vertices to construct vectors
            v = [self.mesh.Faces[f].A, self.mesh.Faces[f].B, self.mesh.Faces[f].C, self.mesh.Faces[f].D]
            v0_0 = v[e[0]]
            v0_1 = v[(e[0] + 1) % 4]
            v1_0 = v[e[1]]
            v1_1 = v[(e[1] + 1) % 4]
        
            dir0 = self.mesh.Vertices[v0_1] - self.mesh.Vertices[v0_0]
            dir1 = self.mesh.Vertices[v0_1] - self.mesh.Vertices[v1_1]
            dir0.Unitize()
            dir1.Unitize()
            
            result, l0 = Rhino.Geometry.Intersect.Intersection.PlanePlane(self.f_planes[f], self.bi_planes[f][e[0]])
            bisector_dir0 = l0.To - l0.From
            bisector_dir0.Unitize()
            
            result, l1 = Rhino.Geometry.Intersect.Intersection.PlanePlane(self.f_planes[f], self.bi_planes[f][(e[1] + 1) % 4])
            bisector_dir1 = l1.To - l1.From
            bisector_dir1.Unitize()
        
            # Assign vectors per box
            self.box_insertion_vectors[counter] = bisector_dir1
            #print(self.box_insertion_lines)
            #print(counter)
            #print(self.plines)
            self.box_insertion_lines[counter] = Line(
                self.center_point(self.plines[counter * 8 + 1]),
                self.center_point(self.plines[counter * 8 + 1]) + bisector_dir1 * 300)
        
            # Assign vectors per face
        
            # Top and bottom plate
            insertions = [Vector3d.Zero, Vector3d.Zero, bisector_dir1, bisector_dir1, bisector_dir1, bisector_dir1]
            insertions[2 + ((e[1] + 2) % 4)] = bisector_dir0
            insertions[2 + ((e[1] + 3) % 4)] = bisector_dir0
            self.insertion_vectors[counter * 4 + 0] = insertions
            self.insertion_vectors[counter * 4 + 1] = insertions
        
            # Side plates
            self.insertion_vectors[counter * 4 + 2] = [Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero]
            self.insertion_vectors[counter * 4 + 3] = [Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero, Vector3d.Zero]
            counter += 1
        
        # Flatten ID Mapping
        counter = 0
        dict_plate_id_meshface_id = OrderedDict()
        for o in self.f_e.items():
            dict_plate_id_meshface_id[o[0]] = counter
            counter += 1
        
        ##############################################################################
        # Adjacency
        ##############################################################################
        unique_key = set()
        # Box adjacency
        counter = 0
        for o in self.f_e.items():
            f = o[0]
            e = o[1]
        
            # Current box
            self.adjacency.append([counter * 4 + 0, counter * 4 + 2, -1, -1])
            self.adjacency.append([counter * 4 + 0, counter * 4 + 3, -1, -1])
            self.adjacency.append([counter * 4 + 1, counter * 4 + 2, -1, -1])
            self.adjacency.append([counter * 4 + 1, counter * 4 + 3, -1, -1])
            self.adjacency.append([counter * 4 + 2, counter * 4 + 3, -1, -1])
            # Neighbors
            m_e_0 = self.f_me[f][e[0]]  # self.mesh.TopologyEdges.GetEdgeIndex(v[e[0]], v[(e[0] + 1) % 4])
            m_e_1 = self.f_me[f][e[1]]  # self.mesh.TopologyEdges.GetEdgeIndex(v[e[1]], v[(e[1] + 1) % 4])
        
            f0 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_0)
            if len(f0) == 2:
                next_face = f0[0] if f0[0] != f else f0[1]
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 0, counter * 4 + 2, -1, -1])
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 1, counter * 4 + 2, -1, -1])
        
            f1 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_1)
            if len(f1) == 2:
                next_face = f1[0] if f1[0] != f else f1[1]
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 0, counter * 4 + 3, -1, -1])
                self.adjacency.append([dict_plate_id_meshface_id[next_face] * 4 + 1, counter * 4 + 3, -1, -1])
        
            counter += 1
        
        ##############################################################################
        # Three valence
        ##############################################################################
        # Initialize counter variable
        counter = 0
        
        # Loop through key-value pairs
        for f, e in self.f_e.items():
            # Retrieve topology vertices of current face
            v = [self.mesh.Faces[f].A, self.mesh.Faces[f].B, self.mesh.Faces[f].C, self.mesh.Faces[f].D]
            
            # Retrieve topology edge indexes
            m_e_0 = self.f_me[f][e[0]]
            m_e_1 = self.f_me[f][e[1]]
            
            # Retrieve connected faces of topology edges
            e_f_0 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_0)
            
            # Check if edge m_e_0 is shared by two faces
            if len(e_f_0) == 2:
                # Retrieve index of the other face connected to m_e_0
                
                f_0 = e_f_0[abs(System.Array.IndexOf(e_f_0, f) - 1)];
                
                
                # Retrieve index of neighboring face from dictionary
                nei0 = dict_plate_id_meshface_id[f_0]
                
                # Add connectivity information to three_valence list
                self.three_valence.append([counter * 4 + 0, counter * 4 + 2, nei0 * 4 + 0, counter * 4 + 2])
                self.three_valence.append([counter * 4 + 1, counter * 4 + 2, nei0 * 4 + 1, counter * 4 + 2])
            
            # Retrieve connected faces of topology edges
            e_f_1 = self.mesh.TopologyEdges.GetConnectedFaces(m_e_1)
            
            # Check if edge m_e_1 is shared by two faces
            if len(e_f_1) == 2:
                # Retrieve index of the other face connected to m_e_1
                f_1 = e_f_1[abs(System.Array.IndexOf(e_f_1, f) - 1)];
                
                # Retrieve index of neighboring face from dictionary
                nei1 = dict_plate_id_meshface_id[f_1]
                
                # Add connectivity information to three_valence list
                self.three_valence.append([counter * 4 + 0, counter * 4 + 3, nei1 * 4 + 0, counter * 4 + 3])
                self.three_valence.append([counter * 4 + 1, counter * 4 + 3, nei1 * 4 + 1, counter * 4 + 3])
            
            # Increment counter
            counter += 1
        
        ##############################################################################
        # Joints per face
        ##############################################################################
        # Initialize counter variable
        counter = 0
        
        # Loop through key-value pairs
        for f, e in self.f_e.items():
            # top-bottom
            self.joints_per_face[counter * 4 + 0] = [0, 0, 20, 20, 20, 20]
            self.joints_per_face[counter * 4 + 1] = [0, 0, 20, 20, 20, 20]
        
            # sides
            # set all to 0 except the dovetail
            a = 1 if e[0] == 3 and e[1] == 0 else 0
            b = 0 if e[0] == 3 and e[1] == 0 else 1
            self.joints_per_face[counter * 4 + 2 + a] = [0, 0, 0, 0, 10, 0]
            self.joints_per_face[counter * 4 + 2 + b] = [0, 0, 10, 0, 0, 0]
            counter += 1
        
    def run(self):
        if self.mesh == None:
            print("Mesh is not given")
            return
        self.stripper()
        self.get_edge_planes()
        self.rotate_planes()
        self.get_bisector_planes()
        self.get_plates()
        self.get_joinery_solver_output()

##############################################################################
# Output
##############################################################################
chevron = Chevron(_mesh, _edge_rotation, _edge_offset, _box_height, _top_plate_inlet, _plate_thickness, _ortho)
chevron.run()

_plines_partitioned =  [[] for _ in range(int(chevron.plines.Count*0.5))] # list of int arrays

for i in range(int(chevron.plines.Count*0.5)):
    _plines_partitioned[i] = [chevron.plines[i*2+0], chevron.plines[i*2+1]]

_data = [_plines_partitioned, chevron.insertion_vectors, chevron.joints_per_face, chevron.three_valence, chevron.adjacency]
_dir = chevron.box_insertion_lines
</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>944</X>
                      <Y>139</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>2857</W>
                      <H>2005</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">9a65734d-ee28-4ce3-83da-772e47059ff5</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>77</X>
                          <Y>458</Y>
                          <W>155</W>
                          <H>144</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>179</X>
                          <Y>530</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="12">
                        <item name="InputCount" type_name="gh_int32" type_code="3">7</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="3" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="4" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="5" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="6" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="OutputId" index="2" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="10">
                        <chunk name="InputParam" index="0">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">199aa08f-1f63-45c2-8802-0d333ca5eb36</item>
                            <item name="Name" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">794a1f9d-21d5-4379-b987-9e8bbf433912</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>460</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>470</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _edge_rotation.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ad2dddb5-fed9-4b24-ad57-2780cf981a81</item>
                            <item name="Name" type_name="gh_string" type_code="10">_edge_rotation</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_edge_rotation</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">f7f43842-d7c9-4985-a054-457fc403543e</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>480</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>490</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _edge_offset.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">f9810b96-6bdf-4e25-a9c4-17bd97d08737</item>
                            <item name="Name" type_name="gh_string" type_code="10">_edge_offset</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_edge_offset</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">caa51ca4-9554-4aba-868d-ed6a4976d128</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>500</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>510</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="3">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _box_height.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">7d1a61ef-3379-452e-8c0d-5ad638797480</item>
                            <item name="Name" type_name="gh_string" type_code="10">_box_height</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_box_height</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">726dcf6f-688a-426e-964b-4e5880a36e84</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>520</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>530</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="4">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _top_plate_inlet.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">97f5add8-fdb2-498e-acac-9edf890ee182</item>
                            <item name="Name" type_name="gh_string" type_code="10">_top_plate_inlet</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_top_plate_inlet</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">ee0252a5-24b8-4908-89d8-7d05e7556f5b</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>540</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>550</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="5">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _plate_thickness.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">227014af-8fd2-49e7-b6eb-5d06f1465498</item>
                            <item name="Name" type_name="gh_string" type_code="10">_plate_thickness</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_plate_thickness</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">1c179503-ab5e-4bdc-9f38-bb76d41cd508</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">39fbc626-7a01-46ab-a18e-ec1c0c41685b</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>560</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>570</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="6">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input _ortho.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">d9b14d2f-79fe-4e4d-ae34-bff7d7a80dad</item>
                            <item name="Name" type_name="gh_string" type_code="10">_ortho</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_ortho</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">f7d83f39-22f6-446e-8b59-5e9de17bb138</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">d60527f5-b5af-4ef6-8970-5f96fe412559</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>79</X>
                                  <Y>580</Y>
                                  <W>85</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>123</X>
                                  <Y>590</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">63af56b4-868a-4e36-8417-f18c21692d56</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>194</X>
                                  <Y>460</Y>
                                  <W>36</W>
                                  <H>46</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>212</X>
                                  <Y>483.3333</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output _data.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">e5b14ec9-82ff-453e-af78-2f668aa7ae1d</item>
                            <item name="Name" type_name="gh_string" type_code="10">_data</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_data</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>194</X>
                                  <Y>506</Y>
                                  <W>36</W>
                                  <H>47</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>212</X>
                                  <Y>530</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output _dir.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">bd3bd943-0860-441e-940b-b5f79fdbc81b</item>
                            <item name="Name" type_name="gh_string" type_code="10">_dir</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_dir</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>194</X>
                                  <Y>553</Y>
                                  <W>36</W>
                                  <H>47</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>212</X>
                                  <Y>576.6666</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="15">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">7f5c6c55-f846-4a08-9c9a-cfdc285cc6fe</item>
                <item name="Name" type_name="gh_string" type_code="10">Scribble</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="Bold" type_name="gh_bool" type_code="1">true</item>
                    <item name="Ca" type_name="gh_drawing_pointf" type_code="31">
                      <X>43.48868</X>
                      <Y>-382.5693</Y>
                    </item>
                    <item name="Cb" type_name="gh_drawing_pointf" type_code="31">
                      <X>1807.771</X>
                      <Y>-382.5693</Y>
                    </item>
                    <item name="Cc" type_name="gh_drawing_pointf" type_code="31">
                      <X>1807.771</X>
                      <Y>-51.78317</Y>
                    </item>
                    <item name="Cd" type_name="gh_drawing_pointf" type_code="31">
                      <X>43.48868</X>
                      <Y>-51.78317</Y>
                    </item>
                    <item name="Description" type_name="gh_string" type_code="10">A quick note</item>
                    <item name="Font" type_name="gh_string" type_code="10">Microsoft Sans Serif</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">020a2f46-a705-4c7a-b90c-33e91e0a1dfe</item>
                    <item name="Italic" type_name="gh_bool" type_code="1">false</item>
                    <item name="Name" type_name="gh_string" type_code="10">Scribble</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Scribble</item>
                    <item name="Size" type_name="gh_single" type_code="5">50</item>
                    <item name="Text" type_name="gh_string" type_code="10">[  ] - 2 Components to rewrite
[  ] - separate files into example files 
[  ] - document components on the github
[  ] - add folding components: a) hex divide and profile extrude 
[  ]  - there is issue with planarity of polylines, maybe clipper tolerance is off
[  ] - bst project is not computable</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>38.48868</X>
                          <Y>-387.5693</Y>
                          <W>1774.282</W>
                          <H>340.7861</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>43.48868</X>
                          <Y>-382.5693</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="16">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">2844fec5-142d-4381-bd5d-4cbcef6d6fed</item>
                <item name="Name" type_name="gh_string" type_code="10">Sketch</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">A series of doodles</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">0517fc7a-7048-4125-b5a1-d7aabd69d705</item>
                    <item name="MarkCount" type_name="gh_int32" type_code="3">1</item>
                    <item name="Name" type_name="gh_string" type_code="10">Sketch</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Sketch</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="1">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>388.7265</X>
                          <Y>14.87657</Y>
                          <W>60.24829</W>
                          <H>104.2132</H>
                        </item>
                      </items>
                      <chunks count="1">
                        <chunk name="SketchProperties">
                          <items count="3">
                            <item name="Color" type_name="gh_drawing_color" type_code="36">
                              <ARGB>255;0;0;0</ARGB>
                            </item>
                            <item name="Pattern" type_name="gh_int32" type_code="3">0</item>
                            <item name="Width" type_name="gh_single" type_code="5">3</item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="Mark" index="0">
                      <items count="16">
                        <item name="V" index="0" type_name="gh_point2d" type_code="50">
                          <X>442.461456298828</X>
                          <Y>14.8765735626221</Y>
                        </item>
                        <item name="V" index="1" type_name="gh_point2d" type_code="50">
                          <X>439.204803466797</X>
                          <Y>19.7615680694581</Y>
                        </item>
                        <item name="V" index="2" type_name="gh_point2d" type_code="50">
                          <X>410.709014892578</X>
                          <Y>58.0273609161377</Y>
                        </item>
                        <item name="V" index="3" type_name="gh_point2d" type_code="50">
                          <X>393.611541748047</X>
                          <Y>73.4965076446533</Y>
                        </item>
                        <item name="V" index="4" type_name="gh_point2d" type_code="50">
                          <X>388.726531982422</X>
                          <Y>79.1956691741944</Y>
                        </item>
                        <item name="V" index="5" type_name="gh_point2d" type_code="50">
                          <X>409.89486694336</X>
                          <Y>80.8239994049073</Y>
                        </item>
                        <item name="V" index="6" type_name="gh_point2d" type_code="50">
                          <X>425.363983154297</X>
                          <Y>80.8239994049073</Y>
                        </item>
                        <item name="V" index="7" type_name="gh_point2d" type_code="50">
                          <X>445.718170166016</X>
                          <Y>86.523157119751</Y>
                        </item>
                        <item name="V" index="8" type_name="gh_point2d" type_code="50">
                          <X>446.532318115235</X>
                          <Y>79.1956691741944</Y>
                        </item>
                        <item name="V" index="9" type_name="gh_point2d" type_code="50">
                          <X>446.532318115235</X>
                          <Y>66.9831829071045</Y>
                        </item>
                        <item name="V" index="10" type_name="gh_point2d" type_code="50">
                          <X>446.532318115235</X>
                          <Y>58.0273609161377</Y>
                        </item>
                        <item name="V" index="11" type_name="gh_point2d" type_code="50">
                          <X>446.532318115235</X>
                          <Y>69.4256801605225</Y>
                        </item>
                        <item name="V" index="12" type_name="gh_point2d" type_code="50">
                          <X>446.532318115235</X>
                          <Y>90.5939884185791</Y>
                        </item>
                        <item name="V" index="13" type_name="gh_point2d" type_code="50">
                          <X>448.160614013672</X>
                          <Y>112.576461791993</Y>
                        </item>
                        <item name="V" index="14" type_name="gh_point2d" type_code="50">
                          <X>448.974822998047</X>
                          <Y>119.089787483216</Y>
                        </item>
                        <item name="VertexCount" type_name="gh_int32" type_code="3">15</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="17">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">919e146f-30ae-4aae-be34-4d72f555e7da</item>
                <item name="Name" type_name="gh_string" type_code="10">chevron_surfaces</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">chevron_surfaces</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="IconOverride" type_name="gh_drawing_bitmap" type_code="37">
                      <bitmap length="501">iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAk5QAAJOUBi1NojwAAAZdJREFUSEtjGAXUAiFAfFBAQOArCwvrX3Z29n9A9hOgmC5YlkwQwsnJeRVkGJD9X1/f4H9UdOz/rp7+/7V1jWA+SByIy0GKiQUBQPwUiMGapaWl/5eUlv8/cfL0/3v3H2BgkBxULVGWOADxByBOAOIuSUnJB0D8f+nyVVgNh+H0jKz/wGADWUIwuA4AcQGECQEyMjKLgNT/PXsPYDUchmVl5f5zc/O8hejCDgSAGOQKHyAG+QSOeXh4TgMj9P+ly1exGg7Cm7fugAUVKDFgBTZA/ACIQb5Ax1eAFnyvqa3HajgMu7q6E/QFPgByAM7IBuEFi5bCfEEeMDY2fUrIF8AkDbJgCkQH6SDc0NDoHzaDYdjfP/A/NAOSB4Cp5S++FNXY3PYfmDn/QJWTDkDBNGHSVKyGgzDF8QAEBwjFA1ANRRYUgMojbAbDMFDNCLdgS2ZWLlaDYRiohnwL5OUVDgMpsCGgAg6U7kFFNij1gAwH5XSoPMUAVKitBWUqIP4FLa5BmQyUm0EVFE0AqD6YDcSZYB59AAMDADT3Bs0QX6cxAAAAAElFTkSuQmCC</bitmap>
                    </item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">e9c93c99-0982-4b82-954a-7c111ab4c1f7</item>
                    <item name="Name" type_name="gh_string" type_code="10">chevron_surfaces</item>
                    <item name="NickName" type_name="gh_string" type_code="10">chevron_surfaces</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-151</X>
                          <Y>119</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-125.6398</X>
                          <Y>131.4322</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="PersistentData">
                      <items count="1">
                        <item name="Count" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Branch" index="0">
                          <items count="2">
                            <item name="Count" type_name="gh_int32" type_code="3">23</item>
                            <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                          </items>
                          <chunks count="23">
                            <chunk name="Item" index="0">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="37545"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="1">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="36366"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="2">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="35544"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="3">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="36125"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="4">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="35492"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="5">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="35289"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="6">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="35108"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="7">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="34473">7L15OFbd2/+PpEmJUoomJElCJal0poFKhUolKSKhkFSIElFJ0iQphQYls8s8LeNlHq7JrEFd0iBJEtJ3++zV9vnez7OP43s8vz9+zx+fjuPufXt1ta+11x7Wea71PlcCggICAn+IX8M6/EtUiPjN2Oiojb3Deofjxx3slecaWzmdtHGwX7NCRV1TRX2p6nJNlaWqqmrKc9efOuZ8yslqjb3VKWcn82PKcw1OWRyzObzVynWXg52V/Zrly9XVNdWsVq44vGL58uVLVUcPf8mUfx1bRdfK4biVs5Orio6TlaMwwcecJr9mvLnT4aM2p62WWh4f5+BoZW9/ysnipLClubP58IfGjh0rNNzCyQsEBNQJ3dg2SXTcKOJ/xIZ/S+MJCAj1nxcSiOaRZzPwR0hgKj6z9fkOXUqPx24KrY9kFVYpaSgORWsNEn/ujD+rLuApAGtGkT9MHm7ScHOHj5Yt8F+PNkM8zsxwAkc8d0hgsregbNeWma7Th4/mg/98shD+HyH83//9q2vtf0Ekz/0n+fe/u6DbckzD47nwX4838md/f05VUGj6c17I8+/P/+tOxndT8SMX3Y5/ncw/G//357+f6ZY/Uva/+mT+/cr8s/H/POGa31u//68+mX+/Mv9k//x7d/5MePvvJ7PKlzd6+EHyMMAN/PcHaZbg//sZvv97hviJFBDG//1Pz1Dkv//gv379vWT/1OHvm1scLCcmykNdG4gfHNtBpYN4XZ5/CSkLg4SZ97gIQnbv3u3Kh3jM91679f7cAi4K+RoVFeX1HrQ+krynK7BYI5mDvgwfx/8dFGAebcWY/d/dDr8V/t87q0jhv+mspX/f6f+Dzlr+X/7uv/1ZtnSYi+5m+L913z/UhtIPlVNdQn44UUpyV0q9omVLjO+dp5T8nBelARul/K/M9qWU/HtXKG1eNodh7ehPKXmc65ROlZjSKWt+g1LyuDcpzbwyTUjC7zal5PcEUWohOHOaYNJdSsnvvUfpWNdZSl1NIZSS7XhAaVzXXO1Xwg8pJdv1iFKyXeGUku2KoJRs1xNKyXY9o5RsVySlZLteUEq2K4pSsl3RlJLtiqWUbFccpYuWSSxsD4qnlGxnAqVDX6ckmS1KpJRs94iS7WZQ+tR6OnPbrmRKyfNIodRFboZh0YcRJc8rldKtr2Y2rfZIo5Q8z3RKyfPMoJQ8zyxKyfPMoZQ8z1xKyfNElJLnmUcpeZ75lJLnOaK1LyXX8HILKCXPu5BS8ryLKCXPu5hS8rxHlDxvJqXkeZdQSp53KaVz7stYMcTLKCX7YUS7jWd/XfSsnFKyXyooJfulilKyX6opJfulhlKyX2opJfuFRSnZLyPK+le/sCkl+4VDKdkvXErJfuFRSvbLiJL9Ukcp2S/1lPb+Cs02eVuP+6cBnD3veQVFNwBj/XSifxopVS+TIPpnRBMMJhH900Spat04on+aKY07MNr1sVYLpYvfCRD91UpptO2gkHT1iC769pNpfO8VpdxM102laq8pnXr+p2J70Iju1Dk1YfTgiH6XYwzeUnlD6a3R37/Imo8oq8SxBopHVMK/M9Fs0VtKDXccu+MeOKKBEh/PhPwYUdUeRZuFim2U1nCtTdJMRtQh9dlW3WsjKnbv/Wpe7ojGucmrWHWP6HbTw3N65N9R2rkmYrL3nhENmPNGUMJvRBcLzv0eljWilW/N3i35OqLHC0O5OfPeUyr6rLl4264Rjb4kndbsO6L6NiYv7NJH9NOWeyH9n0b0qnL91Suz+ZTuDz0jXLtiRBdNmu4hZTiiA+dSfhy0HdHyr7vtI71HNOTQD37ngxG1rb19UCNlRMcnsQ2KPoxoo9zJUlGhdkqjbkvo7JIeUdfRiRn3l43o5tOGS9u2jeiM9q6XStYj2rEnUN7Jc0TTS5aEpt8b0SsrqyUFk0Z0X5R9gF7FiCpKTxoT+H5E+67GnK8bGtGSQf2+2VIfKA0+/tnxiNqICiisXjxee0SPtl7tiNkyojVBTU8N94yo5o5FFj8Oj2jYmLOz7zmO6BhU1rjaY0QdXGbefX1lROtUbXdeDBrRtR3pYoqPRzQyfFxFedyIipnsu+yQNaJnJF5smFI6oq/K+gRSuSOq661HvDdGNG5VsOtQ54hO72lfHjEwouejV3RvHNtBabvlpdiOqSO6fVad7bV5I5rCVVigpjKiswNOt3G0RtTI9mGewroR/RuC/1OH4zy64NJY8mjWMP+Iednmapv4Ry+B4+nds5DgPzE/d3eHZ3/OS2DfUu3+weAg+Y0k1972pX3c0EtI1ztsUkXwzZg/yJUyypkVDRsv7xZSJXgW5oqGhzNnuUeDS6C4Y2ASB23dRHKT9vT8SZnRoH7QJOdNAgdd0SX57ZBxha6aMVB7nXeBHc9BB/RIvv7MRrO3p2Pg5mNL7Y2xHGS2heQqvSJWV77HwA0Pwy/F0RzktZXkXujhOzu1WEDZYzeYvuCgX9tIvmT0j6ab0bGwsN020TGSg87tIPnzOVdiUjtiof3OmBSVxxwUY0RyzweuSnqH46BijsnOpjAOstxF8q6ADydsHsWBhn+2Z+V9DpLZS/IvwR73/CbEw3eNjxum3+OgRSYkjzCS0ZVZGA95dX/yt93ioItmJA92dzMpOxwPL32nMVcFchDrEMmvNS7x4XnGg7uhxP3CKxwUZkVyLSsxKZOMeFi8f7G1mS8HqR/Fx/c59byBFw9vw67/0D3PQU7HSS50f1avmlgCfO45evnuWQ5a50jy6hmNKhMXJcA0sTGHvp3koP5TJN8cOmG7mkUC1PuHaw04cNB4V/y9L1+munskgN8TdmWtNQcpnye5fq/KilNJCZBWYXP+4WEOOupF8tj+n1JyVQkwWDn10h8TDnp7meQln9Jkvwglwpp9DT2Bxhy0wR9/3l9SesasRHgY9Dz/8jYOEr+Fr9cG8deJBolwc++u+3w9DroWRPKeu1LnDG0T4QQz9p77WuJ6hZJ8w6YXdawHiaDjt2XzSy0OMgon+VUdw70fkhPBV/DxI74qByU+J7nIaqP2Q+2JwOg6vrFzEQe5RJP8ZNsqt9Y/iVAczpSrn8dBIgyS+9UtczVQTYJY92bDdBkO+pRK8kt7asW26CWBf3T+jr0SHPQ8l+St2jNScs8kgcU497ESEznoQQHJP2S+v7PtehIgnxhzByHiPiwneX2Ds05edhK0uZ7RHf+bjTyqSf7wyvRrlZwkqBvSeTa/m43O1ZFc4FZri7kQA37/Hvz5+DMbXW0iec0NhuV3KQZE+eSk9jSxEaOd5ENnsrwFTBnAdsqXvl/DRt1fSR7WrRjRfIkBD9f4RPuns5HjcNpJcFuR60NvWxhw0yQ/kRPDRs/Hkjz+Y3iY1NhkiPwx3XpiEButnkFym0P9BZP3J8OqyM13RfzYyGEeyf9YHO5geCeDk1qyW8QJNvqkRnLFUBuRPDZxnHlO9/Wt2EhWi+QKzGJPsYFk6Ens8D6oz0a2W0i+PW/zhgN6KRCvoapevpY4XyOSi32z79tlnwJvHfe/OqzARg8tSD7tfMhsqfQU8Na8VHhzBhsF2pLc2oFh2dKSAtotYzxz/7DQdjeSl13fwNJUSIVli9vWZHSzkLQXybesallQtzkVBNEcXa96FrK6QXJNT8mK/uupEFPYEmxUzkLC90g+70RMi0tiKsxdH8TNjWeh3kiSB9VsZPv0pkJfv+F1q8fE98aRXJj3R2doehpkFWWVXbzMQhXZJE/L2t822iQN9JJ+3RA6y0KfCkn+JGKbsJ9bGkwTzbvXeJCFulgkD195X/lFRhpkv7NLVzdiobIGkst3ZkhvbkwD5wnrplRosJBpO8k/72F8vy2VDsb7GN1/FFmo7wvJt53+nGS2Ih1C/vT5HJzIQqIDJF+2uON358l02LFnT73zn1rkICj0L57eVLWXfyMdOjny5SFttWj8JJL3Lbi7s7EiHe4tzksL4dYihakkd2PNER3oSIeZLMNuz5e1CBRIPt79dbUsZMCtYLUfK6/XonI1kkc5nDgn5ZIBLw+X/Aq0JL5Xh+TPpirGdpdmQFs2N8zQuBaV6JL89kqJtKZ3GRD2XfRg+spatMuI5IrSezTFZmaCpryDuMWiWuS+h+RW9udcjZdlgvF4JdEnk2qRvznJUwQ1JFcfzQTT+CneawSI7z1CcvfU/PWNFzKBlbh1/762GtTvQPLgn4rTLzIywUf2RtMrTg1iOJN8f5ic1eXKTNC/Niq1JbUGFXng/jH9trtvKBM2uSgPGL6oQcu8SP6p3nuxzfQscOnvYyr716C3fiTPOJkrnqqbBW9bZF/c86hBYtdJnnSW33XlYBYotOXdZRjWIOP7JGeo2svuepYFo1suNx1YVoMmPcZ81sRSM04WfDhv/vF9dzW6nUDyrpRjMm4q2WCQ53gapVYj4zSSz+t3nX7ZJBteX/O5prmuGq0tInnE6BVZT+KzodA+tR6Nrkary3E/eLi15jdmQ7MQb8g3oAo58kiu8bnj7uLFOWDSuv16oVEVCmkiefeO/Gduu3NAYLB9yrfGSqTznuQyH9qCjjwhcnIDV7v3DytRdAfJnScEnxEszwFflyW9/gqVqOobyee+0J/2YFouGEmFD676WIGcfpBc+en3H6GrcsEnd+Ux+xMVaMEgyS+mtxRJXCRy/agw4VfLKtCcPyRvZZt5B0bmwsWLgc2PMsuRi/Ao8r0nt0ZP9EsubEwM03t/rhy9EiH5vR62xeUxCPTMXESWjC5H7eNJfkSlZttrRQQx7T+0t5WUoURRkouqiI5bshKBD+/Yis3by9A9MZJ7jBMrVdyH4NfsWYnzxMtQ0mSSz9nY/ZVzFMGE1buX1gaVouMSJN9S16584RKCa+pT6/33laJuzGtHRxhcDkJw+HLKjDetJejeFJL/SLe915+EQHyiu4FHeAm6j/let1/fLPMRRLAy7a4qlKAVmE/Y7m39rBXBnoy9hoIdTJSJj3/IseOE+2cEu0MOClQdZyJjcZK3yNwPCx6TB57OQ9/mqDLRHtx+RctJ+a+m5oHGmmsxDEYx6p9Icu4kM7XXKnnQsl/pyJfTxegK7h9ps8ik+6vyAClnbYSBIqQxjuSjG5euuLYrD5p78uBgdhEyGkPyN/OddfMP5cGmux5j/dYVoRmjSG5jw41+4ZIHEfUmW6+MKkJMAZJHKffuN7uYB8pTbe94XCpEqQPkdc/Zta9K934esCw6kN3mQvSjj+RTnb+UezzLg+1u81YtryxAct9J/mSj5iqHrDy4eXmN94TrBWjgK8m3v7rhv4iZB/qL3hyNkihA+vi+vZ62+Lxycx78NlFvcuTkoxJ8n4eB160T/DyQ1b6pGDkjH8U3khwpSE27LZwPRuHrTT88yENWLJIbOErJMqfnwwajL0KmjxGKRiSX6g966bA6H85GZMaaKyAkkorfG0cuf/m0LR+E5D/qh+3NQY4R+P1zGRmsccgHwd/NUvpm2cjhLsmXK3i7Sp7Ph8dNH5r22GSimZ64nevnP1YPzYfug0IBsfYZqPAkyafrfpJzeZkPzQ4RVj0uaahiH8m9ejfEXyjOJ+LlFSmDHqlohT7JNxi7yWxg50Pgpe2pWZeSUekSkh8YOttu9CkfOmTSCsz8GejNXJIXCu42DevNhwdBN1xv3ElEQkIkn7Vx0pbKCQWg2W1iPTMkAQ18w+Pm98smMZIFoJe2LCV0YxwqryH56fFOn0QVC+D12ll31m2PQXdzSb4/73yRn2oBXLdaYtdk9gKpPsDjptHZXmUogFi/JS3brSPR4BWSz352+NoO3QK4Va3ho33mMbpsSXL9r6NsdHYVgFPxqJ0G58PRIUOSN55/VDLZpAAqb4zO+TTrPtJSInn3K/ElBy0LQNQrYtzhxXeR7jR8HMtz51qPFkCwfMGDF3cDUMgXMk4T3r4q/IZjAdxvXnPaO8UXCTWQ/O1qD/mikwWw+e3BilKmHVKOI/lU+XeMNhfiOF9alMf+WQPTQnCeJeazu8qtALa88gow8nWF1W4kD5r/a3S6ewE8KFve7/L0InRY4jxifPimWI8CuNvx/ci91YHwAeeJhWPW1CqeKwCPKdcENyoEQY88zvv67+oNf15/IKLlxPQQyBXD8fmDF6LDx3fz76m/IxAGEl1EXnqVGEdeSf+rPVEaDd8lfoWDUhPJpT8KPx9uP0NJMHf8x6fQnUDyqgNvLIbPV29z/KXAt5HwMJTkbhIXPIf7J2IiOqjGfgk/T5HcT1n68XB/XtxdffVqeQw8tCD5QjkXheH+/9IQeexrSzxMXENyI7GVrOHrxQ409O9qSIB3SiRXv2OlNHx9jUIWP2XVJsGnMSQPOWJhZkDcD4w7R/mllQyQ/Tn0Lz5PK8Vy+P4RiZeuNC5Kge11JG9sfmx2lbjfPCc0yyvmpcLaEpJnrDYyGb4/szOXH9mXlg49L0luGf89fvh+nrpKrLwxKQMqHpLcRSJ56/D9H3BP0DopKguO+pK838qo9hHxvKxUeDjt29Ns0DtL8nHfEnk7iecr+smL9boPcsHYmuS7mn3HDj+PaWMOmoduReBqRnLtrWcLh59f+VcNB05vygOlHSRfrdDOGH7ez1Tc/1hTkAc1eiRXvO99c/j9cNax/1k88f7oBpL3zpq19IFvPrhPWbMJcvIhVpvk+hNaC9rO5YOqQbC806oCyNEi+QMzoWNjifeS9FqWbK9rASisJLl6ZY1px5F8mHlEZJPv8kJQWk7yZacYTcPvN9FN8QddEwuhainJlTfPeOlIvA9l1ZPtp0cXQSPmqhmTzxcR78/rLheOMRWLQQofxz3POGv4fauQI2reMI8Jmrg9Q9+/vLYi3ttjr8inLH/IBGXcfu05bQdsiPd8ybcavYSgEvDF/SADy/q9iXHkxiXtCSkSpTAe99v1q2e7HxHjjkJnBt+/ohRCTHA7hcvtETF+yTSU/Dg0vgzycf/ze+Ibh8c7C8klreK+ZRCEr1esYWXk8PjYfG5XHKugDPYdI/m30pO+b4jx1PPLwLLNa8thx2mSPzdzzGolxt+r7xv6u93LIQLfD06e1c7D4zW/o1d7Tl85FOH7pyuzucmDGN/TBoLq45dXwDN/kq87tmjucDygoK8jFhRfAcXBJL8W1/7Mmogfxnfke4p2VsCyRyQvt/Tr6iPijbC3GT+ijlbCxmjMF7OLrxDxyVj/PYWdTytBKonk4ZMev/Mi4pksyR0fjOdWwYw8kgv6eYXWEPHP5MdmwQcOVMF6/Lw8N1BqUSbipeWbpAJP1FWBNH6+GAXWksPxldnUn4V7plbDi1bc/ny16a+IeKyYsYolElANep0kd5Tskr1CxG/xBw+9yCmrBule/FyUW1iLEfHelviN+wVla2CtCPm8pwjNeTUcHwq8Ut6lBzVwfBLJo9x3/plCxJNi7D018e41IDSH5PJd6+WG40+XEKd4XkgNHFtAch3/AZeHRLwacu9J46i6GjDUxO8TGM0UIuLbrhbbC+N/1EAD4M/vkq0djoc3Tdjf161aC0OGJHe8vy/QnYifn3x8ZcfeXguPTEiuYT/lsSoRb4u/UWh38quFXDuS5w86nRqOz3+05IWrPK+FA84kPzC61Gk4nn/ueDjbqa0WbH1IHjxa6MYlIv7f+M1pmoggC35dI3l/U9glFyJf8O+43PFpFQuyHpJcYbvkEisiv/gce4ejt48F4yNJrngktNmAyEfeFyc2LPRhgX4SyS0XjpG+RuQvuX+G9NEtFhxKJfnOG7Y1DCLf8Vvqk/k2ngVHckk+7tLhM3ZEflSy59kO+1wWGBSQXKlFsK+fyKcu/jLtd2pmgUI5ydtbvuT7EvnXhvBdkZ8/smCwCvdzbrOEF5GvafWm3Csfw4abPJKPfTThxBsiv4sIrVmxbBobjBtJLpz7+cVaIh8M5F6v6FFnQ9YbkrfelD66m8gfc8JP1G5Zx4aj70l+8Opsh8lEvim6cFfT6wNsCPxM8h0dXdpviPxUuODJmgXH2CCDx0Epmz2vPxL57O246KiSIDaY9JM8piV/3hwi/62f9yZcPIkNHwXI8VSHufPbfCJfruqQ2qfSwobl40medPd4608ivy4yrty38BMb1k/E81fpufVviHz8QejbqPFjODB7Csmd78yybSXy95prHuqfpnKgW5Lk8vYMid9Evh+9ZJPVXVUOOErj+MHtxdidK9Ih42mW3D5tDojMxvNUNw9tDZNKh8GocMmifRyYJofnnzfMSNFrTANm2aEeO2sOeM0n+RZn2+aojDQ48vLr3kAvDkgrkXz8yn3et93SQPiKoNTMQA5sVSa52c11+kP70sB0WplfbxQHLFXx/JXLZ2lBqTRQzzPYY5DGAVN1kpf6b57k15sKkz5q7nrH4sDP5STX2zmF75qYCoaqqZXirzmQsILkIXqT4wQDU2H8ty+u+v0ceKVF8l69U595m1PhLWhI7hjDBZ3VeB6V/fT1WoVUkHnc1Cc7jwsftPH8m7ve1LaWFECZGZ4/FnNhBpAcrfR/OSM9BZwWXsvdr0scR4fkN2MSkvfZp8BPR11u104urF+Pr1dRY8rB4fkuP9lTrce4wMdxV8jVaecmDyRD/ZBm33JXLgTj+faKUwGWWexk+Ni3RvrWDS4w8Hw77/aAQIl3MjirC71+GsoFGTzffnXK2qUDJsnw0G/rDItkLhRiPq3Q7uTCscnAO+29fV4eF/owf1fwTLKxhQEfdl2vt2ZxQRbPzys+EhpnFcoAnWNHx8vWc0ENc+2yt/eeXmJA3Ru5gVNtI1xY2bSEvZ8B+/duEZDs4MIyzN2zLxvGbGRAXEmCrkYPFxQwX7viY0S3FAM4W0ezGb+4MAnzImtbDXshBkw+NdojVJgHXbidaTN9JpdykmCC1wa7oXE8aMF8ocCF+KrsJDB7OHj96VQexOn+nY99dVX3ehK0Hj698sMMHlzGfPa4h09LzyRBJbeuf7M8D/Qx9xTQFDfUS4KWAyXvbRbyQAXzdREsXSPVJHgfVml3fikPXuP+Ny3uMmv7kwiCW8bNdNPkQTrmB9aF2Zm0J8KeF4nftXV4cBDzdaveGL1OToT2otBMUV0eaGL+OdnwTMuDRIhpCg1wNeBBM77uzroLFm6zTQRmzburM3bz4Dnm1ytlTmQYJELDyQxzOTMe2GH+IVnn7vRZiTDq660JNyx4sBbzsimCmV1CibBM+Lf6EjseiGDOZ2ZoKlclwNRDjZKWDjxowvdhdAI66pyUAEdKjof4n+FBGOZfpkzPveCRQPT3jTleZ3lwBvOwST47VlkkQKrX4qNK3jzQwzytRqF0zKIEuOaRmVPvy4PFmG85MbBytVgCnLOoVOy6xoPxmNu0vJvfwouHXZOaLhnf4MEf/LxELoxN2p8RD0p7N9hV3OXBb8yNBhJvvfOMBy9RuaFXITzowzw+5Oij0sPxsNPznvCLMB4I4eMnZhacmLswHnKur3Q89JgHwphHdHyYf2FCPKgvcrx27DkPZmIeuLppyPNRHOyMbC5HUTyQwdzinN4S/cNxkOidnSIUxwPA3G8f5/3wetPqc2MVOuN5sAfzq8ZFXo+iYyHHXMpkH4MHRzHfuFpr6yG1WCh9Emhel8wDd8zfDimOvvQ9Bnoag5Ss0ngQ9Left6dP+nOayHOuuEk6pxP3A+YKM7X9jmnGwIdZH81lM3nAxVxg/YH2uZnR4CS2d3s+wUsw7w3aXCrmHg2tgzpXDmXxoA3zFUqvC1JmRUPtnQ/jLxO8A/PDHvkRE4degsmPscJZBO/G/ITbSfvFuS8hUHrj9xKCf/rbD9dmiPg8egmvNpp/HuafMb/ygVyvvPFdbfp/Z4b7/905iB2B6J+KP+L5Tx3+PrqTtA6ufaTtXwdB2CF4CfNPH9ftZOyvB23sKPTH3HVNoojSogboxA7EQMw1aqr8/lc6B/HKNPqn4pVsSvFKN6V4JZxSvFJOKV5JpxSvtFOKV+IpxSv1lOKVfErxSj+l2AlAKXYKUIqdBJRipwGl2IlAKXYqUIqdDJRipwOl2AlBKXZKUIqdFJRipwWl2IlBKXZqUIqdHJRipwel2AlCKXaKUIqdJJRipwml2IlCKXaqUIqdLJRipwul2AlDKXbKUIqdNJRipw2l2IlDKXbqUIqdPJRipw+l2AlEKXYKUYqdRJRipxGl2IlEKXYqUYqdTJRipxOl2AlFKXZKUYqdVJRipxWl2IlFKXZqUYqdXJRipxel2AlGKXaKUYqdZJRipxml2IlGKXaqUYqdbJRipxul2AlHKXbKUYqddJRipx2l2IlHKXbqUYqdfJRipx+l2AlIKXYKIuwcRNhJiLCzkFLsPKQUOxMpxc5FSrGzkVLsfKQUOyMpxc5JSrGzklLsvKQUOzMpxc5NSrGzk1Ls/KQUO0Mpxc5RSrGzlFLsPKUUO1Mpxc5VSrGzlVLsfKUUO2Mpxc5ZSrGzllLsvKUUO3Mpxc5dSrGzl1Ls/KUUO4Mpxc5hSrGzmFLsPKYUO5Mpxc5lSrGzmVLsfKYUO6Mpxc5pSrGzmlLsvKYUO7Mpxc5tSrGzm1Ls/KYUO8Mpxc5xSrGznFLsPKcUO9Mpxc51SrGznVLsfKcUO+Mpxc55SrGznlLsvKcUO/Mpxc59SrGzn1Ls/KcUVwZQiisHKMWVBZTiygNKcWUCpbhygVJc2UAprnygFFdGUIorJyjFlRX/0H3/0M2U0gWpw3EeXXAppnpo0jD/gLmGxJiUlMcvQcVPtkmW4K8x5/+0hFbmS5CvO7BXhOAszN/JZoqbiEXD5SzFxC6lBmBiHsFx/Oy5NBrcV7CLQgiehnlJdJxD3cNoiFQYOLuB4KGYH606fz6CHw1jB3dnHFjYAF5/j+982v7HqRioOS91sFKxAdwwnyZcLeGbHQPL3v56c2JBA5j+/XykrPFD/VjYvjU/9ZlCAxhgbtTME5e7HQvFjZ2vuPINoIr5T1nZ0DbZOJAfEy9YI9cAszGvaOFrqtrGQaDxJY8r8xpAAHOrpWIGvn1xMJiqNH3z3AYy4yT4x5w9W/PnxEPP4K27/rMagIP53PQA6+Qj8SC6om+SuEwDlGJe/aSzSsovHkZtr17wWqoBHmP+fPVx4+c18dC94rrbwukNEIH5tHxnn87v8TD7hrjfxSkNcA7zeZ9XjJXSSgAZ0cQNt8UbwB7zWskpdvIHCG5apOY6sQGMMVcY4o2TeJwAwtsZpw0nNMAmzKV2fzhWWJQAIhIvRQpEGkAO83yNSGv9CYngEcr/ZC5M9A/m620u5pUvTgTtI2t9Dv+pJzJNkgtGbzMrckoErcVzzpcO1kOnDsmFjaYETL6TCD6FkndMf9YDG/N8A983ZxoSYe8fvUa/nnoowVzf8gzz4kAiiDOnPo/rrIdnmM8rBBertUmwLDyk78WneniEuUzMAS8x8ySoCbmRYvG+Hi5j7mwTaXvoSRI0JPFjFd7WgyPmAiGxD8uKkkA2f/8Zl6Z6MMH88b3Qb1ZjGYB6NNePqa+HTZi7rJNzuLqQAf1zLyj/qKkHdcxdE7qVrO0YUHt1/ZkdlfUwD/OCuntNev4MMHIOsG4oqgdhzK+6M/e6VDIgUN1CVzi/HobWkbxPPeRb1xcGZIzZeVA5ox6aMD/12rb0pEoytCWjswtT6qEec1XLdAPP7cnQ+t5rw7eYemBgLvLrY4FJQDKonTH6mPeiHqIwn7r6y7iBmGRQYaaVLQmvhxuYByVNz5v4JRmU9j/Xq35QD56YewS4bT8umgLxMyp9P96qBzvM+3P19YK2pIDkboGo/dfrwQzzB7vSNj+3SYGQ/qcN3hfqQQtzlaNOPwuLUuDdlabMzjP1IIN5YnPk6NtCqdDTc9VMzbIefgDJnw06LrFyS4U5bftejjGphxrMl91PV3ROToV83x2dczbWw1PMpabNyZiqlAbZC7YJHdaqhwDMOWMtsx8eTgOBWE0JG3ni+mJunPgofxQ3DW7vO3R24Yx60MM8MPPQtc+i6bBs671fqkJEOzF3VPxtvOBsOtRz0gNceutgFOaFx6p9zySkg6rMt4HbrXXQupbk8VFj04JkMqCf80LVkVUH2Zi7JJhs2GKYAXIWWlrJ6XVwH3PBMnaYSXoGyBcciVGIqQMPzB0POR0K+pwB9StdHkbfqoP9mKdFxiy8bpgJvRaq+dm+dQCYa8j0lO31zgTm1XfPrh2rAxnMrwraqR57nwkC9o6f9Q/WwTjMNYXGKCZLZoHfhslmJzfUQYs2yRl6DyoET2VBTW5kWbtGHdRgLlrSYlL3OAts8xWbTknXQSTmT9MvaR4VyAbd6rW+DybWQTDmK4q8L/Quzob7i3gaz77xwBbzYOW1NmWXsmHux16Hi208OKT997kYbz2bkQ3VPq8PiTJ5sAzzc6srj9tMyIFnhTPmJ6bxYAHm3y6bHz2ukQOPfcTDN1/jQe8akn9Put+cmpwD8529QjodeFCF+dGLLpYzxubCq2PC8/TX8yACc6OijeHHPXPB78P5WzuX8cAP80LO/n2/InNhptbGjaum8cAZ82C1UXu6fuSCwcRBQckxPDDBPORO/0KNSQje5LMOPvrABT3MA89/X7V4GQJ5xZUyexu4sBhzCbnpL5o3IVCQrRIKzODCTMy97pRHsO0QWPOdGma/5IIw5pONFymOPYfgWYtSvqQ/F1pXkxx9DGT1hyPo8bHe4+Y+ws2SOl5kJSH42NFht+gAF7IxD7YxnYF4CG5YhuQ4beMS4w3Jr08wfTTmA4KwzXuY0rO5cBFzHbbpSnXpPPByO2W+fYgD1pg/6TabcGx1Htze4zhuWw4HNDAv3q7SuswjDyxvbmsUf8iBaZhrNcT8KXuQB4FbDr3cdIAD71aRfNPsjdOsGvNAz0Q2Pm41Byowf3bwDnLoy4OWk29/Lh9gQyjmn/rOh4stzYdl75cu2t7IBm/MK7c2nHyxIx/GpWxeoRHMhl2YG/l+fXbxUj58enJYXeQMG1Zh3rhyU1dRRD7oFS56cmQZG2ZibvliM1+4Ph+ujv6T2CPBhgEtPF4kzrEV7s6HzPq57Y3VLKjG/EtC+5sa+QLg3am6sDSWBcWYp7zYGBS6pgDsB5gVMbYsuK319z3Qtl7avgACNs2RLdNjgS/mnhd3o2qfAjhcUc7nC7PgEOY55TXqsxgFYMqo/tz8tha2YH6ZrRaQXVYA873PBN55WAvKmGccNSsb9bMALFmrRI+418JkzEtGGbPDRAsh1nBlF29FLfxYieOKzsRJnRqFEPpoXP4ZyVpoxVzq697HoVsLwbfL2ftJTQ0UYu6RLjpmonMh3JocJTE/tgaeYe6VIhXAvlQIMz9xVora1EAw5qH9dyw9YwthopCk9clNNeCOefG8if5H8gohZmKLz2zBGjiMuW/KOJ3D/EJ4ckD3VlVWNehjfrj92bIzfYUgevP6onS1aliD+X3Ftx+50kXQA3teyHyuAkXMq1L502cvLoJYiUBm+KEqEMX8KEeV27W9CDrvND6rm1kFQpi/alvrc/pgERT8XHJp1uZK4GiSvFsmsP3H9SKYLXpkx4+sCsjHvK7r8xdubBHkq3JqZZ6UQwDmGl06m151FMGByoWvrKeXwwnMk7qfB48TKYZvs2a2uP8uhS2Yuwbs76lbVQxiF4d+b3IsBU3Mq0ptmWd3F4MAb9O8C7tLYCzmx8vXiB/yLQaLtF61d0wm9K3A99VMpdSI0GKIzTV11PheDK8xn8O8HsXLKYaoWYHjtkQXAwdz46Ydjo9Ki+FY9PHzO2YXQwHmD1+V+DxrLYa5wlss99YVAcK896Dw5TcfisHfPC5jtlARhGEukMF6XSHCBM0T95/0nCyEO5jvrfZnPJ/BhJm5EZ0yewrgDOYp+70jD6xhQtTto55hJflgifnFzPG7VLczISijW9D8ZR7oYy53PKvx9XEmTD49dDdKJg/WYV7u566R7c6E0IiZY3t/54Is5iKN0+7dDGbCIt16c73XOaCIOWfDnjOXnzIhVoNrvvRJFkzA/N35nrsR2UywVJGRnetLjJOYSyZ/nlNQwgTp6zraQZvToVeD5AGMa+GrWphwk7HnrcKiNPiA+ei25pm3+Ey4NrUjQ70zGVowd2A3LrjwkwnyRyxPB1YzoAbzCHbAPak/TDhqcbl+2c1EYGF+//FaweuiJeB40i3d52QCZGHu3pf7+bhECRh4BO0JtIuFQsyV56kpnpUpgUSjmT2vF0cDA/PdMOT8fG4JjDqntVItMZI6zko1m5+7F5RAyayAn2udn0IC5vdW/e7mLiwBrrnOLfPpERCPuYGRXOJu5RKozWGmvUx8BDF/2+O32eXO4hL4cE348ue+YOo4tqKqustVSkD0mUBftPZNiMK8fVav7fDnGQufX2zwuUq1M/xzdcLw8S9ZqofdlHOn+Lm4wdrh9nBkONafbSwhBfP5Lrkdw+0PPHqiK+m5K/rbDyeyBi2Hz9fXI3ipW7kPysB8Uveeejeifwaz37dpNN9CZZi/FC6ab0/0Z+zdJTM09wSjCsytJu3tCiD632qdmKbNszDUhPnpkBcqw9drSzfL4nxbBHqFedak9/uHr++rH1qPLh2IRF8wF78i2HiTuB+m2bAnbQt5gbowd9p9LHv4/vki5f9s95RYJILvN41ih8vD95vZq/6tzQvikSjm89mS2eHE/XnMzyAo63Ai+ns/u7TbvLlC3M/H9rwuunchCSlgnvFb4csN4v63WiUR/DErGf19XhqvLJIbfl5GP9JeYtKYggwxN2XMejn8fDUZezi8mpqO7DG3vHquaAnxPGp8WZzYqJaBnDG3XVTaYEo8v8JLIMHMLgsFYe45KyIjinjeJ03r7X13KRs9xTzN7E14OfF+mPY4QvcAykUlmDtP3WPcQbxnFtvcXTrbHiEW5gpTp4e2E+8l0215s+Ov5KE/mL+4uNt++P02jTWTt2l6PhqD34cXpaQah9+HD4JV9GTUC9BSzAOcuTWuxPtT6MNQpE5uAdLFPC3lXFo98b7V1A2vT7tZiOwxzypj/3CfUgxtdpPkZBsK0WnMVU2+FKSNLoYX20oHG62K0G3Mp2kX2Fwi3vNBj9+XSUYXoWDM9ZsjvWc3FUHxNP7h65rFKBFz1PRo4t3sIqj6PsMo9lwx+juOnPEPkj5PjCNWx2Ti2eOZqAHz9MVG24OJcSd5h9FjlgETvcP8gdjiobLzRWAsdHDwYTMT/R2/NBYaqZwhxi8vg7IeO9kSNPnvOGi4rHF4vHO/UHfifUwJksO8z1TZaXh8nGt6bbTv9xIEmCeXZusOj6fvzk9eHHauFBlj3tb+ecspYvy1DbVQGVVYiiwwLzX307ckxuv8NSKro7aXIS/MW87I2R0lxndzls6jT7fK0B3ML4mVdnkQ8cCluWXLps4uR/GYr8jZf2M4fvgQdVVV7HA5KsH8xZk/yycR8YahjlF9+udy9Arz2dXVD4bjE8vm/hMn1SrQT8ydTJVOfCXimXt3jyZez6hA0jj+QdpPuyOI+Cfx8fICgT8VSB7zeuGx8wWIeKns6N13Hpcq0U7Mq7/vD8gl4qtjwhs+BJdXIlPMp9RzO2WIeKz1/JnVB3dWIX/MfwuvPDscvz2dpLx73t0qdAvz4m+h1TJEvLfTRady/uxqVIR516NJZeFEfBhw81Wst3k1asG8L3fbtWoiniwWumnDaK9Gf+PP5axNMsPxZ+PKWUbbJWuQDI5XT0aHtwoR8erkbXPWdOypQWsxz1AffZ9JxLdeT07pyrjWIBPMo9mb33kT8bAST2rf0swa5Im5cq36/uH4maXr5zGjuQaF/eU2aIo4EW/nmbqtCp5Viyr/HkdmYvAxIj6PFAktXKBdiz5gLvbqBPsoEc9rmDfV/TpXi6Rw/J8veG59CRH/y4h75as9qkV/8wU5Zq/qciJfmOy3I1btVS06irmY++ivx4n8wuAE+5Tgn1rkiblawvQXakQ+0r6bl7BPhYWiMffeov1wNJG/dBupF0losxDCnD0oGZZN5DtBMo5phw6wUC3m+6K8NDOJ/GjvS/Pp/cdY6APm49U04weIfAoZcu4K+bOQOM6/Gn1Sq8cR+RfLZRLf5T4LiWG+3ctbqprI17qXn9ujkcFCqpg/dy0d857I77akGh29UspCm/4ex/DqsgVEPui8wralt52FLDFfvUhWQ4vIH2uCvo2b+5OFjmEekP5p8zci35RXmaKnKclGN//mg4Ur7PuJ/DTg0msBdXk2eob5YMGq63ZEPrs8I+Qay4CNWJgfuKvElCHyX9HEBJGl9mzU+TfPtRq6+pLIl6PctrncucdGKji/njHje5ITkV8XvbGP7olkIy3MtT7trTtI5OOt6yZMOFrIRmaY83QNBmSJ/H3yo42Bfiw2csRc6fv8lgoi37eJquVd6GSjQMxV1I/++LE4G2zbjBYfGGQjBuaKP00SDglkQ2fR3OPM6RxUgfncjhiFj4+zoPRozvL98znoI+aNjbqH+pyzINWwbaMqcJAAnt/oKig6kimZBQ0t9yJObuOguZj356RI2bzPhGSb9tOPrTno7/zJ518K54y9M0Gto9fupjMHmWKu6p5/3t8wE1auFBWeGMBBvpg3CVufu/E5A+7HcJc/COGgYMyvbZhTbpSeAWudw/bvTOIgJuadLffdjQwzQDbt6W+XXA56g7ndT4OY+zIZ0K0VPvZAHQcNYT5t3bKDbgnpsE1z3L2pbUT7Acel3TdPqpxNh6NajT1i/Ry0A/NbrYu+vBdNh+hTbSe2jeaiv/NdCruHdo/hpsFy4epDutJcFIx5n9ZgdsThNEgqUbkkrMBFYZi/eV95croSEde6tep/0uIiFuZn2DPC3ZNT4VXqksppG7moG/Mlf949PeyWCrHvlk3i7uWiOXh+z2D7t8GrQqkgoTTV18qCi9ZgPomhdaGpKAWclka9e+PMRQ6Yy4rOmt+4JQW6zIssyjy4yBvzhRfHfw0TTYG5W8u2PPPjor/zmZ+O7WYJxCZDTY3LrroALsrAvHvyJ/2dAcmwfOvC9gl3uagWc5lL6bfubE+GvUoHhiTuc9FbzDfpnpt4VCUZEvR1pD5FcNEoPE9rkO2+9O0XBuws7xfNesZF4zHfP8457lolAwKkg2o0YrlIHvOyj51dy/wZUC+S716XwEWKmAf3rnT2tGPA6z/q5z6ncdFOzI/5Wr7wW8iACn+Lt6ZZXGSMuUKxp8+xsQwoSFhRPqGAi05jPlAYKVpelATjZaZLby7mIk/Mx/oOuBs9SQIlDXsp/woueox5zb38A6rmSbCpZ5RzUDUXPcVcac2Oz0Zrk4j4SmKcI5eLeJjnKTIveg8kQuXE2Mh19VxUhbmX2gQPl4ZEyHi042psCxf1YV7pc3ar+J1EkI7Qm6j3mosGMd97sHdGpRORz9wSmKD7nrgf8LqAhtGYSRWLE0FzYMKb5+1cpIx5SsAPgXUTEmF13ByD5Z+5aAPm55fetKsvSgCfoOdzDnYS/YN5p0VdnfDjBHAdUrjt0s1FpzDXG63NVzuQAAEyUbNserjoIuYmbUcSZLUS4PdOw21ifVx0H/Oq6mC919/jYfVS7bbCX1wUh3lrlGdrXE08MMeISvcOctHf9ZrM5+Gi0n7xwN3rqOk0xEX1mHu9Hzj8/Eg8fE96+GqxIA99x5wjVD61fE48xIeXceyFeEgUrx/tcQ9odO2LA4+IzIXJwjwkg3lGzqfjyrZx8NHrw+TM0TykhvlSdX2FV7JxMNbbWsR/DA9tx7xfVObF5NuxcO9tUonxWB46hHnNpW4hhn4syCoNJCaO4yEXzHutzbm22THwsM/yrM54HrqC+WeRx0MKp2NArWlC6sIJPBSN+WXXSdLX+NEQ9Ei0/DzBozAvy1Qc3fswGqqaxX9yCf53HXCOyujDa5cS+adfxdZPBC/BvGpCxMRosWiwcQkVGyvKQ+2YV75JSbzJfAnjE6ykh7fde4f5FOh+IfDkJdBtx+efeGz1f7cRYZQH+fPkYU/bX4fcDQz/3SE3veSQbtu/OeReKgbkDDvk9v09wD/thP9fnXL/kw0J/7Mv33/25fvPvnz/2ZfvP/vy/Wdfvv/sy/efffn+sy/f/959+SqE6TePpotu6aJhuuiZLtqmi87ponm66J8uW6DLLuiyEbrshS7bocuO6LIpuuyLLlujy+7oskG67JEu26TLTumyWbrsly5bpsuu6bJxuuydLtunmx2gm02gm32gm62gm92gmw2hmz2hm22hm52hm82hm/2hmy2im12im42im72im+2imx2jm02jm32jm62jm92jmw2kmz2km22km52km82km/2kmy2lm12lm42lm72lm+2lmx2mm02mm32mm62mm92mmw2nmz2nm22nm52nm82nm/2nWy2gW12gW42gW72gW+2gWx2hW02hW32hW62hW92hWw2iWz2iW22iW52iW82iW/2iWy2jW12jW42jW72jW+2jWx2kW02kW32kW62kW92kWw2lWz2lW22lW52lW82lW/2lWy2mW12mW42mW72mW+2mWx2nW02nW32nW62nW92ncwPQuQfo3AZ07gQ6NwOd+4HOLUHnrqBzY9C5N+jcHnTuEDo3CZ37hM6tQuduoXPD0Lln6Nw2dO4cOjcPnfuHzi1E5y6icyPRuZfo3E507ig6NxWd+4rOrUXn7qJzg9G5x+jcZnTuNDo3G537jc4tR+euo3Pj0bn36Nx+dO5AOjchnfuQzq1I526kc0PSuSfp3JZ07kw6Nyed+5POLUrnLqVzo9K5V+ncrnTuWDo3LZ37ls6tS+fupXMD07mH6dzGdO5kOjcznfuZzi1N566mc2PTubfp3N507nA6Nzmd+5zOrU7nbqdzw9O55+nc9nTufDo3P537n65agK66gK4aga56ga7aga46gq6agq76gq5ag666g64ahK56hK7ahK46ha6aha76ha5ahq66hq4ah656h67ah646iK6aiK76iK5aia66ia4aiq56iq7aiq46i66ai676i65ajK66jK4aja56ja7aja46jq6ajq76jq5aj666j64akK56kK7akK46ka6aka76ka5akq66kq4ak656k67ak646lK6alK76lK5ala66la4alq56lq7alq46l66al676l65amK66mK4ama56ma7ama46mq6amq76mq5am666m64anK56nK7anK46na6ana76na5anq66nq4an656n67an253ALrdBOh2H6DbrYBudwO6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</stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="8">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="31657"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="9">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="32172"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="10">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="33263"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="11">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="31620"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="12">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="31624"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="13">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="30314"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="14">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="30529"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="15">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="27884"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="16">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="27312"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="17">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="27760"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="18">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="21348"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="19">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="21341"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="20">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="20088"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="21">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="18662"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                            <chunk name="Item" index="22">
                              <items count="2">
                                <item name="ON_Data" type_name="gh_bytearray" type_code="20">
                                  <stream length="18172"></stream>
                                </item>
                                <item name="RefID" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="18">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59daf374-bc21-4a5e-8282-5504fb7ae9ae</item>
                <item name="Name" type_name="gh_string" type_code="10">List Item</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="BaseOutputIndex" type_name="gh_int32" type_code="3">0</item>
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific item from a list.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">261b259a-d475-4ef1-82f6-20567f101d9f</item>
                    <item name="Name" type_name="gh_string" type_code="10">List Item</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Item</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-60</X>
                          <Y>140</Y>
                          <W>64</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-26</X>
                          <Y>172</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">2e3ab970-8545-46bb-836c-1c11e5610bce</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">cb95db89-6165-43b6-9c41-5702bc5bf137</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="8">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="Description" type_name="gh_string" type_code="10">Base list</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">96dc4e81-3ce2-4ab1-b5f4-32256dd3a51c</item>
                            <item name="Name" type_name="gh_string" type_code="10">List</item>
                            <item name="NickName" type_name="gh_string" type_code="10">L</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">e9c93c99-0982-4b82-954a-7c111ab4c1f7</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>-58</X>
                                  <Y>142</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>-48</X>
                                  <Y>152</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item index</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">a01ed3f6-2582-4b29-9f4c-d94e457d132c</item>
                            <item name="Name" type_name="gh_string" type_code="10">Index</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">f700efc0-99dd-4289-864a-335553d0856b</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>-58</X>
                                  <Y>162</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>-48</X>
                                  <Y>172</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="number" type_name="gh_int32" type_code="3">0</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Wrap index to list bounds</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">3d8fc307-c744-408a-af5b-a397d4a09b26</item>
                            <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                            <item name="NickName" type_name="gh_string" type_code="10">W</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>-58</X>
                                  <Y>182</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>-48</X>
                                  <Y>192</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {i'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">90fadbdc-1a4a-4399-9089-d94f95d5bc6a</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>-11</X>
                                  <Y>142</Y>
                                  <W>13</W>
                                  <H>60</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>-4.5</X>
                                  <Y>172</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="19">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">1e936df3-0eea-4246-8549-514cb8862b7a</item>
                <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">Contains a collection of polygon meshes</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">f9c87b5c-0781-4a8f-a021-de2c2ee8b2c3</item>
                    <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Mesh</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>78</X>
                          <Y>32</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>103.375</X>
                          <Y>44.4563</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="20">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">deaf8653-5528-4286-807c-3de8b8dad781</item>
                <item name="Name" type_name="gh_string" type_code="10">Surface</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">Contains a collection of generic surfaces</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">413becb6-7abc-45cf-b5c7-b3205a7e6f4f</item>
                    <item name="Name" type_name="gh_string" type_code="10">Surface</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Srf</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">90fadbdc-1a4a-4399-9089-d94f95d5bc6a</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-1</X>
                          <Y>109</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>24.01117</X>
                          <Y>121.2873</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="21">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">f7f43842-d7c9-4985-a054-457fc403543e</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-188</X>
                          <Y>492</Y>
                          <W>205</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-187.8469</X>
                          <Y>492.1996</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">10</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">1</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="22">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">caa51ca4-9554-4aba-868d-ed6a4976d128</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-188</X>
                          <Y>512</Y>
                          <W>194</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-187.8469</X>
                          <Y>512.1996</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">1</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">0</item>
                        <item name="Max" type_name="gh_double" type_code="6">2.5</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">0.5</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="23">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">726dcf6f-688a-426e-964b-4e5880a36e84</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-188</X>
                          <Y>532</Y>
                          <W>191</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-187.8469</X>
                          <Y>532.1996</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">1000</item>
                        <item name="Min" type_name="gh_double" type_code="6">100</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">760</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="24">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">ee0252a5-24b8-4908-89d8-7d05e7556f5b</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-188</X>
                          <Y>552</Y>
                          <W>209</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-187.8469</X>
                          <Y>552.1996</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">80</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="25">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">1c179503-ab5e-4bdc-9f38-bb76d41cd508</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-188</X>
                          <Y>572</Y>
                          <W>211</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-187.8469</X>
                          <Y>572.1996</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">40</item>
                        <item name="Min" type_name="gh_double" type_code="6">1</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">40</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="26">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">2e78987b-9dfb-42a2-8b76-3923ac8bd91a</item>
                <item name="Name" type_name="gh_string" type_code="10">Boolean Toggle</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="7">
                    <item name="Description" type_name="gh_string" type_code="10">Boolean (true/false) toggle</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">f7d83f39-22f6-446e-8b59-5e9de17bb138</item>
                    <item name="Name" type_name="gh_string" type_code="10">Boolean Toggle</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Toggle</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                    <item name="ToggleValue" type_name="gh_bool" type_code="1">true</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="1">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-105</X>
                          <Y>601</Y>
                          <W>104</W>
                          <H>22</H>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="27">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">9deb91eb-6e97-4231-974a-7b0586605f14</item>
                <item name="Lib" type_name="gh_guid" type_code="9">9bb16bc1-9a19-4a99-9f0b-1afee092287d</item>
                <item name="Name" type_name="gh_string" type_code="10">input_get</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">input_get</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">2699650e-157b-42da-bfab-ad9aa9b627b2</item>
                    <item name="Name" type_name="gh_string" type_code="10">input_get</item>
                    <item name="NickName" type_name="gh_string" type_code="10">input_get</item>
                  </items>
                  <chunks count="7">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>563</X>
                          <Y>484</Y>
                          <W>153</W>
                          <H>104</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>608</X>
                          <Y>536</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">data</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">898a2027-9d14-402f-8c0a-1c717e7e8310</item>
                        <item name="Name" type_name="gh_string" type_code="10">data</item>
                        <item name="NickName" type_name="gh_string" type_code="10">data</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">05010591-4158-4ea6-93c6-916918ac8041</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>565</X>
                              <Y>486</Y>
                              <W>28</W>
                              <H>100</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>580.5</X>
                              <Y>536</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">plines</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">accd8708-dc8d-4cfd-8ca0-8a7b22682f07</item>
                        <item name="Name" type_name="gh_string" type_code="10">plines</item>
                        <item name="NickName" type_name="gh_string" type_code="10">plines</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>623</X>
                              <Y>486</Y>
                              <W>91</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>668.5</X>
                              <Y>496</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="1">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">insertion_vectors</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">498ba33d-9819-4195-965e-06b33b992ced</item>
                        <item name="Name" type_name="gh_string" type_code="10">insertion_vectors</item>
                        <item name="NickName" type_name="gh_string" type_code="10">insertion_vectors</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>623</X>
                              <Y>506</Y>
                              <W>91</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>668.5</X>
                              <Y>516</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="2">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">joints_per_face</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">2559d4ac-6a1a-4318-9843-ee69733b1e94</item>
                        <item name="Name" type_name="gh_string" type_code="10">joints_per_face</item>
                        <item name="NickName" type_name="gh_string" type_code="10">joints_per_face</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>623</X>
                              <Y>526</Y>
                              <W>91</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>668.5</X>
                              <Y>536</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="3">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">three_valence</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">760a01c7-ea1a-4a9e-8873-2e2abd13a8c0</item>
                        <item name="Name" type_name="gh_string" type_code="10">three_valence</item>
                        <item name="NickName" type_name="gh_string" type_code="10">three_valence</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>623</X>
                              <Y>546</Y>
                              <W>91</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>668.5</X>
                              <Y>556</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="4">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">adjacency</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">86d5364b-8bff-4d6d-bd4a-ef7c23193379</item>
                        <item name="Name" type_name="gh_string" type_code="10">adjacency</item>
                        <item name="NickName" type_name="gh_string" type_code="10">adjacency</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>623</X>
                              <Y>566</Y>
                              <W>91</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>668.5</X>
                              <Y>576</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="28">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">1c40ee3f-4795-4a05-aa54-abc048fa8c0c</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>67</X>
                          <Y>411</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>67.30554</X>
                          <Y>411.8592</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">10</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">8</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="29">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">d5967b9f-e8ee-436b-a8ad-29fdcecf32d5</item>
                <item name="Name" type_name="gh_string" type_code="10">Curve</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">Contains a collection of generic curves</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">e32433b5-188a-46ae-ab8e-b5bcf767bf8f</item>
                    <item name="Name" type_name="gh_string" type_code="10">Curve</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Crv</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">14601213-e982-4283-bc15-52e3ab5ae12d</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>668</X>
                          <Y>707</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>693.6038</X>
                          <Y>719.1375</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="30">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">0b4ac802-fc4a-4201-9c66-0078b837c1eb</item>
                <item name="Name" type_name="gh_string" type_code="10">Face Boundaries</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Convert all mesh faces to polylines</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">f2dafb33-369c-4bf1-a048-e265656fef21</item>
                    <item name="Name" type_name="gh_string" type_code="10">Face Boundaries</item>
                    <item name="NickName" type_name="gh_string" type_code="10">FaceB</item>
                  </items>
                  <chunks count="3">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>644</X>
                          <Y>71</Y>
                          <W>67</W>
                          <H>28</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>678</X>
                          <Y>85</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Mesh for face boundary extraction</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">733d4b2c-eb9a-4a77-aae8-7762a06df6bb</item>
                        <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">M</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">b82e1ffe-9f9d-4f94-87af-7fef14d5eec7</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>646</X>
                              <Y>73</Y>
                              <W>17</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>656</X>
                              <Y>85</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Boundary polylines for each mesh face</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">13fa147f-045e-48ec-a2eb-8bdf2f6add04</item>
                        <item name="Name" type_name="gh_string" type_code="10">Boundaries</item>
                        <item name="NickName" type_name="gh_string" type_code="10">B</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>693</X>
                              <Y>73</Y>
                              <W>16</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>701</X>
                              <Y>85</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="31">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">0b4ac802-fc4a-4201-9c66-0078b837c1eb</item>
                <item name="Name" type_name="gh_string" type_code="10">Face Boundaries</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Convert all mesh faces to polylines</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">e5b0369d-ffc9-4016-acc4-0738feb6c838</item>
                    <item name="Name" type_name="gh_string" type_code="10">Face Boundaries</item>
                    <item name="NickName" type_name="gh_string" type_code="10">FaceB</item>
                  </items>
                  <chunks count="3">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>666</X>
                          <Y>41</Y>
                          <W>67</W>
                          <H>28</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>700</X>
                          <Y>55</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Mesh for face boundary extraction</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">009a9ac7-a92d-4538-8ebf-2911d6c5072c</item>
                        <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">M</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>668</X>
                              <Y>43</Y>
                              <W>17</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>678</X>
                              <Y>55</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Boundary polylines for each mesh face</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">163e5d05-17a7-453f-a9df-ca62bab8ee81</item>
                        <item name="Name" type_name="gh_string" type_code="10">Boundaries</item>
                        <item name="NickName" type_name="gh_string" type_code="10">B</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>715</X>
                              <Y>43</Y>
                              <W>16</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>723</X>
                              <Y>55</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="32">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59daf374-bc21-4a5e-8282-5504fb7ae9ae</item>
                <item name="Name" type_name="gh_string" type_code="10">List Item</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="BaseOutputIndex" type_name="gh_int32" type_code="3">0</item>
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific item from a list.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">11f3e0ee-df02-455e-949e-3724d72d3114</item>
                    <item name="Name" type_name="gh_string" type_code="10">List Item</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Item</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>799</X>
                          <Y>65</Y>
                          <W>64</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>833</X>
                          <Y>97</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">2e3ab970-8545-46bb-836c-1c11e5610bce</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">cb95db89-6165-43b6-9c41-5702bc5bf137</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="8">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="Description" type_name="gh_string" type_code="10">Base list</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ad675cb1-bf0d-4d8f-9223-69343310d49d</item>
                            <item name="Name" type_name="gh_string" type_code="10">List</item>
                            <item name="NickName" type_name="gh_string" type_code="10">L</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">163e5d05-17a7-453f-a9df-ca62bab8ee81</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>801</X>
                                  <Y>67</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>811</X>
                                  <Y>77</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Item index</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">90c963fb-1ee4-4cd3-ba14-15ce97284f1c</item>
                            <item name="Name" type_name="gh_string" type_code="10">Index</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>801</X>
                                  <Y>87</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>811</X>
                                  <Y>97</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="number" type_name="gh_int32" type_code="3">0</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Wrap index to list bounds</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">447c3b2f-fd6c-4e16-9bab-fd8ac2d49aae</item>
                            <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                            <item name="NickName" type_name="gh_string" type_code="10">W</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>801</X>
                                  <Y>107</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>811</X>
                                  <Y>117</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {i'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">8917ec91-5d47-4ef8-a835-074c1e3416ee</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>848</X>
                                  <Y>67</Y>
                                  <W>13</W>
                                  <H>60</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>854.5</X>
                                  <Y>97</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="33">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59daf374-bc21-4a5e-8282-5504fb7ae9ae</item>
                <item name="Name" type_name="gh_string" type_code="10">List Item</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="BaseOutputIndex" type_name="gh_int32" type_code="3">0</item>
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific item from a list.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">2f8a6202-b7e1-4d73-b59a-89b304d775ed</item>
                    <item name="Name" type_name="gh_string" type_code="10">List Item</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Item</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>806</X>
                          <Y>153</Y>
                          <W>64</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>840</X>
                          <Y>185</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">2e3ab970-8545-46bb-836c-1c11e5610bce</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">cb95db89-6165-43b6-9c41-5702bc5bf137</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="8">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="Description" type_name="gh_string" type_code="10">Base list</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">174e3943-2c05-4ef5-969e-2996356b8df3</item>
                            <item name="Name" type_name="gh_string" type_code="10">List</item>
                            <item name="NickName" type_name="gh_string" type_code="10">L</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">13fa147f-045e-48ec-a2eb-8bdf2f6add04</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>808</X>
                                  <Y>155</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>818</X>
                                  <Y>165</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Item index</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">356fb3ae-dbf2-448e-9b88-57ab124760f4</item>
                            <item name="Name" type_name="gh_string" type_code="10">Index</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>808</X>
                                  <Y>175</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>818</X>
                                  <Y>185</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="number" type_name="gh_int32" type_code="3">0</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Wrap index to list bounds</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">735959ad-ee8f-473b-aec3-23f75ead051a</item>
                            <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                            <item name="NickName" type_name="gh_string" type_code="10">W</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>808</X>
                                  <Y>195</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>818</X>
                                  <Y>205</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {i'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">4647ee96-3c05-4165-8fd5-9d77e3eff677</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>855</X>
                                  <Y>155</Y>
                                  <W>13</W>
                                  <H>60</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>861.5</X>
                                  <Y>185</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="34">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">a = x</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>569</X>
                      <Y>441</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>1110</W>
                      <H>1094</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">e5fbe590-874e-4168-817d-b699e2e64db7</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>366</X>
                          <Y>566</Y>
                          <W>72</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>395</X>
                          <Y>588</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">d3bf6e24-f44a-42d2-a816-95c51778dfc7</item>
                            <item name="Name" type_name="gh_string" type_code="10">x</item>
                            <item name="NickName" type_name="gh_string" type_code="10">x</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>368</X>
                                  <Y>568</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>375.5</X>
                                  <Y>578</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input y.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">f1976196-6197-4cf9-9e0c-97c19340e910</item>
                            <item name="Name" type_name="gh_string" type_code="10">y</item>
                            <item name="NickName" type_name="gh_string" type_code="10">y</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>368</X>
                                  <Y>588</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>375.5</X>
                                  <Y>598</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">fb362739-2cbe-473c-ad4e-055dfc4dcba6</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>410</X>
                                  <Y>568</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>423</X>
                                  <Y>578</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output a.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">f5293259-3a12-435d-9d5f-97496927b990</item>
                            <item name="Name" type_name="gh_string" type_code="10">a</item>
                            <item name="NickName" type_name="gh_string" type_code="10">a</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>410</X>
                                  <Y>588</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>423</X>
                                  <Y>598</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="35">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">f700efc0-99dd-4289-864a-335553d0856b</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-224</X>
                          <Y>197</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-223.3986</X>
                          <Y>197.8617</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">22</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="36">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">cc14daa5-911a-4fcc-8b3b-1149bf7f2eeb</item>
                <item name="Name" type_name="gh_string" type_code="10">Point List</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="4">
                    <item name="Description" type_name="gh_string" type_code="10">Displays details about lists of points</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">b3a730d5-3b47-4b1d-a5e3-83fece2eea82</item>
                    <item name="Name" type_name="gh_string" type_code="10">Point List</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Points</item>
                  </items>
                  <chunks count="3">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>349</X>
                          <Y>10</Y>
                          <W>44</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>379</X>
                          <Y>32</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="9">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Points to display</item>
                        <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">a8d243e4-c15d-4554-a789-0ed4c03b183a</item>
                        <item name="Name" type_name="gh_string" type_code="10">Points</item>
                        <item name="NickName" type_name="gh_string" type_code="10">P</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">e591c86a-73a1-4f08-b180-ae8c894b3317</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>351</X>
                              <Y>12</Y>
                              <W>13</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>359</X>
                              <Y>22</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">Optional text size (in Rhino units)</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">84eba90c-387e-4150-a0df-b71d2ed3f42f</item>
                        <item name="Name" type_name="gh_string" type_code="10">Size</item>
                        <item name="NickName" type_name="gh_string" type_code="10">S</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>351</X>
                              <Y>32</Y>
                              <W>13</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>359</X>
                              <Y>42</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="37">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">cb4ca22c-3419-4962-a078-ad4ff7f1f929</item>
                <item name="Name" type_name="gh_string" type_code="10">Face Normals</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Extract the normals and center points of all faces in a mesh</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">e79d5a1f-66be-4fb9-8090-cab61c1da4f9</item>
                    <item name="Name" type_name="gh_string" type_code="10">Face Normals</item>
                    <item name="NickName" type_name="gh_string" type_code="10">FaceN</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>172</X>
                          <Y>18</Y>
                          <W>69</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>206</X>
                          <Y>40</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Mesh for normal and center point extraction</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">2a20ebfb-db74-4639-8f84-bc583cd334e1</item>
                        <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">M</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">f9c87b5c-0781-4a8f-a021-de2c2ee8b2c3</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>174</X>
                              <Y>20</Y>
                              <W>17</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>184</X>
                              <Y>40</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Center-points of all faces</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">e591c86a-73a1-4f08-b180-ae8c894b3317</item>
                        <item name="Name" type_name="gh_string" type_code="10">Centers</item>
                        <item name="NickName" type_name="gh_string" type_code="10">C</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>221</X>
                              <Y>20</Y>
                              <W>18</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>230</X>
                              <Y>30</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="1">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Normal vectors for all faces</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">f0b7b8a0-489b-4a81-9474-c2e6ecbbea14</item>
                        <item name="Name" type_name="gh_string" type_code="10">Normals</item>
                        <item name="NickName" type_name="gh_string" type_code="10">N</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>221</X>
                              <Y>40</Y>
                              <W>18</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>230</X>
                              <Y>50</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="38">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">3a710c1e-1809-4e19-8c15-82adce31cd62</item>
                <item name="Name" type_name="gh_string" type_code="10">Tree Branch</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific branch from a data tree.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">2bd235a8-f364-4589-9b59-1c42a5693bec</item>
                    <item name="MaintainPaths" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">Tree Branch</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Branch</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>588</X>
                          <Y>702</Y>
                          <W>79</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>634</X>
                          <Y>724</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="9">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">Data Tree</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">314ba002-ff08-4b14-8da9-8a7565a98e3c</item>
                        <item name="Name" type_name="gh_string" type_code="10">Tree</item>
                        <item name="NickName" type_name="gh_string" type_code="10">T</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SimplifyData" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">701b89bb-5aa5-4fdf-9219-f3e7cf1f7bd1</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>590</X>
                              <Y>704</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>614</X>
                              <Y>714</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Data tree branch path</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">25590436-9fd2-4727-804f-f93e6a1c5f17</item>
                        <item name="Name" type_name="gh_string" type_code="10">Path</item>
                        <item name="NickName" type_name="gh_string" type_code="10">P</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">8ddc4f3b-12dc-482b-acb2-354cc4cbc0d2</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>590</X>
                              <Y>724</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>614</X>
                              <Y>734</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">Branch at {P}</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">14601213-e982-4283-bc15-52e3ab5ae12d</item>
                        <item name="Name" type_name="gh_string" type_code="10">Branch</item>
                        <item name="NickName" type_name="gh_string" type_code="10">B</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>649</X>
                              <Y>704</Y>
                              <W>16</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>657</X>
                              <Y>724</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="39">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">8ddc4f3b-12dc-482b-acb2-354cc4cbc0d2</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>410</X>
                          <Y>735</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>410.253</X>
                          <Y>735.5103</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">1</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="40">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">5a93246d-2595-4c28-bc2d-90657634f92a</item>
                <item name="Name" type_name="gh_string" type_code="10">Partition List</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Partition a list into sub-lists</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">7618d120-147e-4353-a118-f0475973e6d9</item>
                    <item name="Name" type_name="gh_string" type_code="10">Partition List</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Partition</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>483</X>
                          <Y>692</Y>
                          <W>80</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>529</X>
                          <Y>714</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="8">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">List to partition</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">11fb1174-e9f0-41b1-9ec9-b333c03f4de8</item>
                        <item name="Mapping" type_name="gh_int32" type_code="3">1</item>
                        <item name="Name" type_name="gh_string" type_code="10">List</item>
                        <item name="NickName" type_name="gh_string" type_code="10">L</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>485</X>
                              <Y>694</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>509</X>
                              <Y>704</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="8">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Size of partitions</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">f49fc9e2-7f00-4ab1-bc68-5598777ac89b</item>
                        <item name="Name" type_name="gh_string" type_code="10">Size</item>
                        <item name="NickName" type_name="gh_string" type_code="10">S</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">1c40ee3f-4795-4a05-aa54-abc048fa8c0c</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>485</X>
                              <Y>714</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>509</X>
                              <Y>724</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">2</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="2">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">3</item>
                                  </items>
                                </chunk>
                                <chunk name="Item" index="1">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">2</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">List chunks</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">701b89bb-5aa5-4fdf-9219-f3e7cf1f7bd1</item>
                        <item name="Name" type_name="gh_string" type_code="10">Chunks</item>
                        <item name="NickName" type_name="gh_string" type_code="10">C</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>544</X>
                              <Y>694</Y>
                              <W>17</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>552.5</X>
                              <Y>714</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="41">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">ed02439c-2577-4599-b6e3-806dd3813ca9</item>
                <item name="Lib" type_name="gh_guid" type_code="9">9bb16bc1-9a19-4a99-9f0b-1afee092287d</item>
                <item name="Name" type_name="gh_string" type_code="10">assembly</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">assembly</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">b11053c6-6657-4b04-b9a7-6c8f0fffd6b7</item>
                    <item name="Name" type_name="gh_string" type_code="10">assembly</item>
                    <item name="NickName" type_name="gh_string" type_code="10">assembly</item>
                  </items>
                  <chunks count="5">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>912</X>
                          <Y>302</Y>
                          <W>59</W>
                          <H>84</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>957</X>
                          <Y>344</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">data</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">cffb2ae4-cf9f-4be1-bc64-a157c36bcc72</item>
                        <item name="Name" type_name="gh_string" type_code="10">data</item>
                        <item name="NickName" type_name="gh_string" type_code="10">data</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">05010591-4158-4ea6-93c6-916918ac8041</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>914</X>
                              <Y>304</Y>
                              <W>28</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>929.5</X>
                              <Y>314</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="8">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">directions as lines</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">1441e26e-2f85-4d62-8284-c8f94b34c109</item>
                        <item name="Name" type_name="gh_string" type_code="10">dir</item>
                        <item name="NickName" type_name="gh_string" type_code="10">dir</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">479d96ac-4b67-4489-b8a6-13b496a64b5b</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>914</X>
                              <Y>324</Y>
                              <W>28</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>929.5</X>
                              <Y>334</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="2">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">polylines per element</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">15460318-a5dc-447b-8f24-9fbf74d22106</item>
                        <item name="Name" type_name="gh_string" type_code="10">n</item>
                        <item name="NickName" type_name="gh_string" type_code="10">n</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>914</X>
                              <Y>344</Y>
                              <W>28</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>929.5</X>
                              <Y>354</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">4</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="3">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">t</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">10859441-cd6f-4368-8ed5-b8c387eb6b33</item>
                        <item name="Name" type_name="gh_string" type_code="10">t</item>
                        <item name="NickName" type_name="gh_string" type_code="10">t</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">83ea0a7e-e996-4b27-955b-53fa0479139a</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>914</X>
                              <Y>364</Y>
                              <W>28</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>929.5</X>
                              <Y>374</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="42">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">83ea0a7e-e996-4b27-955b-53fa0479139a</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>717</X>
                          <Y>383</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>717.6848</X>
                          <Y>383.4872</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">2</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="43">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">356848b4-a6c0-4b02-9aa1-2967b950d5d0</item>
                <item name="Lib" type_name="gh_guid" type_code="9">20563e24-568f-4f4f-b61b-71a1781ef92f</item>
                <item name="Name" type_name="gh_string" type_code="10">Mesh Edges</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Get All Mesh</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">10a65c64-92f8-42ee-8c85-8d532120f3da</item>
                    <item name="Name" type_name="gh_string" type_code="10">Mesh Edges</item>
                    <item name="NickName" type_name="gh_string" type_code="10">MeshEdges</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-460</X>
                          <Y>495</Y>
                          <W>75</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-426</X>
                          <Y>517</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Mesh</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">b83ffdee-81c8-4b5b-b89d-5915502814ab</item>
                        <item name="Name" type_name="gh_string" type_code="10">Mesh</item>
                        <item name="NickName" type_name="gh_string" type_code="10">M</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">7ad64441-d947-496a-b219-843eb05877d7</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-458</X>
                              <Y>497</Y>
                              <W>17</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-448</X>
                              <Y>517</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">All mesh edges</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">76abd5fb-c961-4c5a-81ae-376a683bd51d</item>
                        <item name="Name" type_name="gh_string" type_code="10">AllE</item>
                        <item name="NickName" type_name="gh_string" type_code="10">AE</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-411</X>
                              <Y>497</Y>
                              <W>24</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-399</X>
                              <Y>507</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="1">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">Naked mesh edges</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">58779f77-5fdc-4847-8d6b-972f48dfdba7</item>
                        <item name="Name" type_name="gh_string" type_code="10">NakedE</item>
                        <item name="NickName" type_name="gh_string" type_code="10">NE</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-411</X>
                              <Y>517</Y>
                              <W>24</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-399</X>
                              <Y>527</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="44">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">ccc7b468-e743-4049-891f-299432545898</item>
                <item name="Name" type_name="gh_string" type_code="10">Curve Middle</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Get the point in the middle of a curve</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">a50836c5-22ea-4c96-91e6-13fd273347bf</item>
                    <item name="Name" type_name="gh_string" type_code="10">Curve Middle</item>
                    <item name="NickName" type_name="gh_string" type_code="10">MidPt</item>
                  </items>
                  <chunks count="3">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-369</X>
                          <Y>485</Y>
                          <W>68</W>
                          <H>28</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-338</X>
                          <Y>499</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Curve for mid-point.</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">1c52af77-de0f-40ca-b22c-4ca58a778c7c</item>
                        <item name="Name" type_name="gh_string" type_code="10">Curve</item>
                        <item name="NickName" type_name="gh_string" type_code="10">C</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">76abd5fb-c961-4c5a-81ae-376a683bd51d</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-367</X>
                              <Y>487</Y>
                              <W>14</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-358.5</X>
                              <Y>499</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">Point in the middle of the curve</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">fc96e736-a407-4b3d-b40c-6571030b8d83</item>
                        <item name="Name" type_name="gh_string" type_code="10">Midpoint</item>
                        <item name="NickName" type_name="gh_string" type_code="10">M</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-323</X>
                              <Y>487</Y>
                              <W>20</W>
                              <H>24</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-313</X>
                              <Y>499</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="45">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">cc14daa5-911a-4fcc-8b3b-1149bf7f2eeb</item>
                <item name="Name" type_name="gh_string" type_code="10">Point List</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Displays details about lists of points</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">4eba4fdd-32fe-44d4-9868-46f1371f2787</item>
                    <item name="Name" type_name="gh_string" type_code="10">Point List</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Points</item>
                  </items>
                  <chunks count="3">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-280</X>
                          <Y>516</Y>
                          <W>44</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-250</X>
                          <Y>538</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="9">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Points to display</item>
                        <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">c3a46ca3-cd66-4a81-b0d9-e2d3f982208c</item>
                        <item name="Name" type_name="gh_string" type_code="10">Points</item>
                        <item name="NickName" type_name="gh_string" type_code="10">P</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">fc96e736-a407-4b3d-b40c-6571030b8d83</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-278</X>
                              <Y>518</Y>
                              <W>13</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-270</X>
                              <Y>528</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Optional text size (in Rhino units)</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">ec582e08-3756-410e-9a3b-78014edb06d1</item>
                        <item name="Name" type_name="gh_string" type_code="10">Size</item>
                        <item name="NickName" type_name="gh_string" type_code="10">S</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">8e13944f-fdd6-4eba-a9b2-c99702e942ef</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>-278</X>
                              <Y>538</Y>
                              <W>13</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>-270</X>
                              <Y>548</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="46">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">8e13944f-fdd6-4eba-a9b2-c99702e942ef</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>-452</X>
                          <Y>577</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>-451.1495</X>
                          <Y>577.3081</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">150</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">41</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="47">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59e0b89a-e487-49f8-bab8-b5bab16be14c</item>
                <item name="Name" type_name="gh_string" type_code="10">Panel</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="9">
                    <item name="Description" type_name="gh_string" type_code="10">A panel for custom notes and text values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">1325b89e-c535-4492-9470-7973257c4989</item>
                    <item name="Name" type_name="gh_string" type_code="10">Panel</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="ScrollRatio" type_name="gh_double" type_code="6">0</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">f5293259-3a12-435d-9d5f-97496927b990</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                    <item name="UserText" type_name="gh_string" type_code="10">Double click to edit panel content…</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="5">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>143</X>
                          <Y>843</Y>
                          <W>91</W>
                          <H>493</H>
                        </item>
                        <item name="MarginLeft" type_name="gh_int32" type_code="3">0</item>
                        <item name="MarginRight" type_name="gh_int32" type_code="3">0</item>
                        <item name="MarginTop" type_name="gh_int32" type_code="3">0</item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>143.8289</X>
                          <Y>843.1607</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="PanelProperties">
                      <items count="7">
                        <item name="Colour" type_name="gh_drawing_color" type_code="36">
                          <ARGB>255;255;255;255</ARGB>
                        </item>
                        <item name="DrawIndices" type_name="gh_bool" type_code="1">true</item>
                        <item name="DrawPaths" type_name="gh_bool" type_code="1">true</item>
                        <item name="Multiline" type_name="gh_bool" type_code="1">true</item>
                        <item name="SpecialCodes" type_name="gh_bool" type_code="1">false</item>
                        <item name="Stream" type_name="gh_bool" type_code="1">false</item>
                        <item name="Wrap" type_name="gh_bool" type_code="1">true</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="48">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59e0b89a-e487-49f8-bab8-b5bab16be14c</item>
                <item name="Name" type_name="gh_string" type_code="10">Panel</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="9">
                    <item name="Description" type_name="gh_string" type_code="10">A panel for custom notes and text values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">bf897bd8-d053-45a2-96a3-a8c3a00266b7</item>
                    <item name="Name" type_name="gh_string" type_code="10">Panel</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="ScrollRatio" type_name="gh_double" type_code="6">0</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">760a01c7-ea1a-4a9e-8873-2e2abd13a8c0</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                    <item name="UserText" type_name="gh_string" type_code="10">Double click to edit panel content…</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="5">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>246</X>
                          <Y>841</Y>
                          <W>82</W>
                          <H>518</H>
                        </item>
                        <item name="MarginLeft" type_name="gh_int32" type_code="3">0</item>
                        <item name="MarginRight" type_name="gh_int32" type_code="3">0</item>
                        <item name="MarginTop" type_name="gh_int32" type_code="3">0</item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>246.808</X>
                          <Y>841.0097</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="PanelProperties">
                      <items count="7">
                        <item name="Colour" type_name="gh_drawing_color" type_code="36">
                          <ARGB>255;255;255;255</ARGB>
                        </item>
                        <item name="DrawIndices" type_name="gh_bool" type_code="1">true</item>
                        <item name="DrawPaths" type_name="gh_bool" type_code="1">true</item>
                        <item name="Multiline" type_name="gh_bool" type_code="1">true</item>
                        <item name="SpecialCodes" type_name="gh_bool" type_code="1">false</item>
                        <item name="Stream" type_name="gh_bool" type_code="1">false</item>
                        <item name="Wrap" type_name="gh_bool" type_code="1">true</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="49">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">501aecbb-c191-4d13-83d6-7ee32445ac50</item>
                <item name="Name" type_name="gh_string" type_code="10">Cull Index</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Cull (remove) indexed elements from a list.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">8bc74a54-e92a-42c5-83ff-32e4ba3f4b89</item>
                    <item name="Name" type_name="gh_string" type_code="10">Cull Index</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Cull i</item>
                  </items>
                  <chunks count="5">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>165</X>
                          <Y>752</Y>
                          <W>66</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>199</X>
                          <Y>784</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="8">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">List to cull</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">26275147-615b-4874-a625-7b1696c802ae</item>
                        <item name="Name" type_name="gh_string" type_code="10">List</item>
                        <item name="NickName" type_name="gh_string" type_code="10">L</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">f5293259-3a12-435d-9d5f-97496927b990</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>167</X>
                              <Y>754</Y>
                              <W>17</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>177</X>
                              <Y>764</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Culling indices</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">82680a34-717f-4eca-934a-6f570c36fcb8</item>
                        <item name="Name" type_name="gh_string" type_code="10">Indices</item>
                        <item name="NickName" type_name="gh_string" type_code="10">I</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>167</X>
                              <Y>774</Y>
                              <W>17</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>177</X>
                              <Y>784</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">2</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="2">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">2</item>
                                  </items>
                                </chunk>
                                <chunk name="Item" index="1">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">3</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="2">
                      <items count="6">
                        <item name="Description" type_name="gh_string" type_code="10">Wrap indices to list range</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">c43c37f1-b678-42a9-9d8b-1826ced18ba5</item>
                        <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                        <item name="NickName" type_name="gh_string" type_code="10">W</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>167</X>
                              <Y>794</Y>
                              <W>17</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>177</X>
                              <Y>804</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Culled list</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">0b584aa2-1c81-437f-a6fc-8b4985feb433</item>
                        <item name="Name" type_name="gh_string" type_code="10">List</item>
                        <item name="NickName" type_name="gh_string" type_code="10">L</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>214</X>
                              <Y>754</Y>
                              <W>15</W>
                              <H>60</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>221.5</X>
                              <Y>784</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="50">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">d5967b9f-e8ee-436b-a8ad-29fdcecf32d5</item>
                <item name="Name" type_name="gh_string" type_code="10">Curve</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">Contains a collection of generic curves</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">b5d13b12-c756-44cb-960c-e7bdcbba4668</item>
                    <item name="Name" type_name="gh_string" type_code="10">Curve</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Crv</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">accd8708-dc8d-4cfd-8ca0-8a7b22682f07</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>789</X>
                          <Y>501</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>814.6051</X>
                          <Y>513.8563</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="51">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">from collections import OrderedDict

dict = OrderedDict()
dict[2] = "a"
dict[1] = "c"
dict[3] = "e"
print(dict)</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>226</X>
                      <Y>98</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>1110</W>
                      <H>1094</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">6d2fcde4-483a-426c-9cfd-1ac558800aa8</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>1135</X>
                          <Y>234</Y>
                          <W>72</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>1164</X>
                          <Y>256</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">096acc3e-6d60-4a80-b37e-d31d33776c60</item>
                            <item name="Name" type_name="gh_string" type_code="10">x</item>
                            <item name="NickName" type_name="gh_string" type_code="10">x</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>1137</X>
                                  <Y>236</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>1144.5</X>
                                  <Y>246</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input y.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ebd6efc3-b607-4489-b933-0f684aaa835b</item>
                            <item name="Name" type_name="gh_string" type_code="10">y</item>
                            <item name="NickName" type_name="gh_string" type_code="10">y</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>1137</X>
                                  <Y>256</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>1144.5</X>
                                  <Y>266</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">276add12-1bb8-431d-9451-d2a22502ea28</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>1179</X>
                                  <Y>236</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>1192</X>
                                  <Y>246</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output a.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">29ef152e-46c6-40f1-907e-5ce90e5694e2</item>
                            <item name="Name" type_name="gh_string" type_code="10">a</item>
                            <item name="NickName" type_name="gh_string" type_code="10">a</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>1179</X>
                                  <Y>256</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>1192</X>
                                  <Y>266</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="52">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">d5967b9f-e8ee-436b-a8ad-29fdcecf32d5</item>
                <item name="Name" type_name="gh_string" type_code="10">Curve</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Description" type_name="gh_string" type_code="10">Contains a collection of generic curves</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">8f2bddb2-3fa3-4ebc-a3da-c8fe867d2266</item>
                    <item name="Name" type_name="gh_string" type_code="10">Curve</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Crv</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="Source" index="0" type_name="gh_guid" type_code="9">63d114b5-815e-416b-97f7-cd4ab3ebfabc</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>1023</X>
                          <Y>572</Y>
                          <W>50</W>
                          <H>24</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>1048.485</X>
                          <Y>584.0563</Y>
                        </item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="53">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">3a710c1e-1809-4e19-8c15-82adce31cd62</item>
                <item name="Name" type_name="gh_string" type_code="10">Tree Branch</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific branch from a data tree.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">60ada7e0-a910-4f31-9e6a-6afd1cfc287e</item>
                    <item name="MaintainPaths" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">Tree Branch</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Branch</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>943</X>
                          <Y>562</Y>
                          <W>79</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>989</X>
                          <Y>584</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="9">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">Data Tree</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">f54f9a04-1343-4f78-87df-d1bc06b073cd</item>
                        <item name="Name" type_name="gh_string" type_code="10">Tree</item>
                        <item name="NickName" type_name="gh_string" type_code="10">T</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SimplifyData" type_name="gh_bool" type_code="1">true</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">667c2ee5-3393-42b7-a677-e4dc9e1af83c</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>945</X>
                              <Y>564</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>969</X>
                              <Y>574</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="7">
                        <item name="Description" type_name="gh_string" type_code="10">Data tree branch path</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">fb68c3c0-3500-4be7-b0f1-83b0708f3f39</item>
                        <item name="Name" type_name="gh_string" type_code="10">Path</item>
                        <item name="NickName" type_name="gh_string" type_code="10">P</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">8ddc4f3b-12dc-482b-acb2-354cc4cbc0d2</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>945</X>
                              <Y>584</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>969</X>
                              <Y>594</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">Branch at {P}</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">63d114b5-815e-416b-97f7-cd4ab3ebfabc</item>
                        <item name="Name" type_name="gh_string" type_code="10">Branch</item>
                        <item name="NickName" type_name="gh_string" type_code="10">B</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>1004</X>
                              <Y>564</Y>
                              <W>16</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>1012</X>
                              <Y>584</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="54">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">316ca0a6-3670-448c-8f72-a7042c8f3a02</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10"></item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>765</X>
                          <Y>596</Y>
                          <W>160</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>765.723</X>
                          <Y>596.4291</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">100</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">4</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="55">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">5a93246d-2595-4c28-bc2d-90657634f92a</item>
                <item name="Name" type_name="gh_string" type_code="10">Partition List</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="Description" type_name="gh_string" type_code="10">Partition a list into sub-lists</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">3ea08e5d-9871-40bd-87c9-ab73f7b078b6</item>
                    <item name="Name" type_name="gh_string" type_code="10">Partition List</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Partition</item>
                  </items>
                  <chunks count="4">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>838</X>
                          <Y>552</Y>
                          <W>80</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>884</X>
                          <Y>574</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="param_input" index="0">
                      <items count="9">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">List to partition</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">8a1a6583-be41-4674-a06d-a5c571370702</item>
                        <item name="Mapping" type_name="gh_int32" type_code="3">1</item>
                        <item name="Name" type_name="gh_string" type_code="10">List</item>
                        <item name="NickName" type_name="gh_string" type_code="10">L</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">accd8708-dc8d-4cfd-8ca0-8a7b22682f07</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>840</X>
                              <Y>554</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>864</X>
                              <Y>564</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_input" index="1">
                      <items count="8">
                        <item name="Access" type_name="gh_int32" type_code="3">1</item>
                        <item name="Description" type_name="gh_string" type_code="10">Size of partitions</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">8e65b0f8-4342-406a-b815-b2d230925c29</item>
                        <item name="Name" type_name="gh_string" type_code="10">Size</item>
                        <item name="NickName" type_name="gh_string" type_code="10">S</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="Source" index="0" type_name="gh_guid" type_code="9">1c40ee3f-4795-4a05-aa54-abc048fa8c0c</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                      </items>
                      <chunks count="2">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>840</X>
                              <Y>574</Y>
                              <W>29</W>
                              <H>20</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>864</X>
                              <Y>584</Y>
                            </item>
                          </items>
                        </chunk>
                        <chunk name="PersistentData">
                          <items count="1">
                            <item name="Count" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Branch" index="0">
                              <items count="2">
                                <item name="Count" type_name="gh_int32" type_code="3">2</item>
                                <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                              </items>
                              <chunks count="2">
                                <chunk name="Item" index="0">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">3</item>
                                  </items>
                                </chunk>
                                <chunk name="Item" index="1">
                                  <items count="1">
                                    <item name="number" type_name="gh_int32" type_code="3">2</item>
                                  </items>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                    <chunk name="param_output" index="0">
                      <items count="7">
                        <item name="Access" type_name="gh_int32" type_code="3">2</item>
                        <item name="Description" type_name="gh_string" type_code="10">List chunks</item>
                        <item name="InstanceGuid" type_name="gh_guid" type_code="9">667c2ee5-3393-42b7-a677-e4dc9e1af83c</item>
                        <item name="Name" type_name="gh_string" type_code="10">Chunks</item>
                        <item name="NickName" type_name="gh_string" type_code="10">C</item>
                        <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                        <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                      </items>
                      <chunks count="1">
                        <chunk name="Attributes">
                          <items count="2">
                            <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                              <X>899</X>
                              <Y>554</Y>
                              <W>17</W>
                              <H>40</H>
                            </item>
                            <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                              <X>907.5</X>
                              <Y>574</Y>
                            </item>
                          </items>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="56">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59daf374-bc21-4a5e-8282-5504fb7ae9ae</item>
                <item name="Name" type_name="gh_string" type_code="10">List Item</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="BaseOutputIndex" type_name="gh_int32" type_code="3">0</item>
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific item from a list.</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">81f2d516-6540-4bde-9f92-75d4c3545da7</item>
                    <item name="Name" type_name="gh_string" type_code="10">List Item</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Item</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>26</X>
                          <Y>651</Y>
                          <W>64</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>60</X>
                          <Y>683</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">2e3ab970-8545-46bb-836c-1c11e5610bce</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">cb95db89-6165-43b6-9c41-5702bc5bf137</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="8">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="Description" type_name="gh_string" type_code="10">Base list</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ff18c387-9ef8-4422-804b-7b2a8f01faa5</item>
                            <item name="Name" type_name="gh_string" type_code="10">List</item>
                            <item name="NickName" type_name="gh_string" type_code="10">L</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">e5b14ec9-82ff-453e-af78-2f668aa7ae1d</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>28</X>
                                  <Y>653</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>38</X>
                                  <Y>663</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Item index</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">2e1a208a-1fe0-4a2a-828a-671ccd6c4dd2</item>
                            <item name="Name" type_name="gh_string" type_code="10">Index</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>28</X>
                                  <Y>673</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>38</X>
                                  <Y>683</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="number" type_name="gh_int32" type_code="3">0</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Wrap index to list bounds</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">84f26ee7-2896-4295-89fa-c2b2384bf645</item>
                            <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                            <item name="NickName" type_name="gh_string" type_code="10">W</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>28</X>
                                  <Y>693</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>38</X>
                                  <Y>703</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {i'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">c71ec9ea-09ba-4111-aa54-788adf6ef1e9</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>75</X>
                                  <Y>653</Y>
                                  <W>13</W>
                                  <H>60</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>81.5</X>
                                  <Y>683</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="57">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">a = x</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>569</X>
                      <Y>441</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>1110</W>
                      <H>1094</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">bc8d69e5-2d0f-4dcf-97aa-52e9f2bd4aa3</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>130</X>
                          <Y>664</Y>
                          <W>72</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>159</X>
                          <Y>686</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">5631aa9f-5452-4a11-b18a-a831d1a7a4da</item>
                            <item name="Name" type_name="gh_string" type_code="10">x</item>
                            <item name="NickName" type_name="gh_string" type_code="10">x</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">c71ec9ea-09ba-4111-aa54-788adf6ef1e9</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>132</X>
                                  <Y>666</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>139.5</X>
                                  <Y>676</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input y.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">11811b10-74de-43e0-85a2-c775ce913228</item>
                            <item name="Name" type_name="gh_string" type_code="10">y</item>
                            <item name="NickName" type_name="gh_string" type_code="10">y</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>132</X>
                                  <Y>686</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>139.5</X>
                                  <Y>696</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">12c78c0e-ca0f-40a5-9d65-1167e1b925c5</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>174</X>
                                  <Y>666</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>187</X>
                                  <Y>676</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output a.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">89818d0b-f893-49df-b25c-b2f26e4064a8</item>
                            <item name="Name" type_name="gh_string" type_code="10">a</item>
                            <item name="NickName" type_name="gh_string" type_code="10">a</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>174</X>
                                  <Y>686</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>187</X>
                                  <Y>696</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="58">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">a = x</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>569</X>
                      <Y>441</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>1110</W>
                      <H>1094</H>
                    </item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">766c96ee-791f-4f6b-846d-091539c52f3f</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Python</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>230</X>
                          <Y>685</Y>
                          <W>72</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>259</X>
                          <Y>707</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="6">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="4">
                        <chunk name="InputParam" index="0">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable Python</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">5deb4136-22b4-4998-a08a-bdb5313f738d</item>
                            <item name="Name" type_name="gh_string" type_code="10">x</item>
                            <item name="NickName" type_name="gh_string" type_code="10">x</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">89818d0b-f893-49df-b25c-b2f26e4064a8</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>232</X>
                                  <Y>687</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>239.5</X>
                                  <Y>697</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="10">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script input y.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">dbb130ab-15db-4cf9-adfe-cbb178898360</item>
                            <item name="Name" type_name="gh_string" type_code="10">y</item>
                            <item name="NickName" type_name="gh_string" type_code="10">y</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">87f87f55-5b71-41f4-8aea-21d494016f81</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>232</X>
                                  <Y>707</Y>
                                  <W>12</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>239.5</X>
                                  <Y>717</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">e4fb9a2c-d1d0-4b11-a25b-c625420bec78</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>274</X>
                                  <Y>687</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>287</X>
                                  <Y>697</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output a.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">c3475b15-07ba-4f76-8f33-fb3ecd82af4c</item>
                            <item name="Name" type_name="gh_string" type_code="10">a</item>
                            <item name="NickName" type_name="gh_string" type_code="10">a</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>274</X>
                                  <Y>707</Y>
                                  <W>26</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>287</X>
                                  <Y>717</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="59">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">loft_mesh</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="13">
                    <item name="CodeInput" type_name="gh_string" type_code="10">"""get joints ids and connections areas between elements"""

__author__ = "petras vestartas"
__version__ = "2023.03.31"

from ghpythonlib.componentbase import executingcomponent as component
import Rhino.RhinoDoc
import Rhino.Geometry
import System
from System.Drawing import Color

class connections_zones(component):


    def to_polyline_from_cp(self, curve):
        
        polyline = Rhino.Geometry.Polyline() 
        result, polyline1 = curve.TryGetPolyline()
        
        if (result == False):
            
            nurbsCurve = curve.ToNurbsCurve()  
            point3dArray = []
            
            for i in range(nurbsCurve.Points.Count):
                result, pt = nurbsCurve.Points.GetPoint(i)
                point3dArray.append(pt)
            
            polyline1 = Rhino.Geometry.Polyline(point3dArray)  
            nurbsCurve = polyline1.ToNurbsCurve()  
            result, polyline1 = nurbsCurve.TryGetPolyline()  
            
            polyline1.CollapseShortSegments(0.01) 
            
            polyline1 = Rhino.Geometry.Polyline(polyline1)  
            polyline = polyline1  
            
        else:
            polyline1.CollapseShortSegments(0.01)  
            polyline = polyline1  
        
        return polyline  

    def loft_polylines_with_holes(self, curves0, curves1):
        """Loft polylines with holes
        
        Parameters
        ----------
        curves0 : list[rg.Polyline]
        curves1 : list[rg.Polyline]
        
        Returns
        -------
        rg.Mesh
            mesh as lofted polylines and cap them
        """
        
        ###############################################################################
        # user input
        ###############################################################################
        
        flag = len(curves0) is not 0 if True else len(curves1) != 0
        if (flag):
            
            curves = []
            curves2 = []
            
            flag0 = len(curves1) == 0
            flag1 = len(curves0) == 0 and len(curves1) != 0
            flag2 = len(curves0) and len(curves1)
            
            if (flag0):
                for i in range(len(curves0)):
                    if (float(i) &gt;= float(len(curves0)) * 0.5):
                        curves2.Add(curves0[i])
                    else:
                        curves.Add(curves0[i])
            elif (flag1):
                for i in range(0, len(curves1), 2):
                    curves.Add(curves1[i])
                    curves2.Add(curves1[i + 1])
            elif (flag2):
                curves = curves0
                curves2 = curves1
            
            curves0 = curves
            curves1 = curves2
        
        ###############################################################################
        # sort curves which one is border and which ones are holes
        ###############################################################################
        length = -1.0
        border_id = -1
        count = 0
        numArray = []
        for curve in curves0:
            diagonal = curve.GetBoundingBox(True).Diagonal
            temp_length = diagonal.Length
            if temp_length &gt; length:
                length = temp_length
                border_id = count
            count=count+1
        
        
        border0 = self.to_polyline_from_cp(curves0[border_id])
        border1 = self.to_polyline_from_cp(curves1[border_id])
        holes0 = []
        holes1 = []
        for i in range(curves0.Count):
            if (i != border_id):
                holes0.Add(curves0[i])
                holes1.Add(curves1[i])
        
        ###############################################################################
        # Create mesh of the bottom face
        ###############################################################################
        mesh_bottom = Rhino.Geometry.Mesh.CreatePatch(border0, Rhino.RhinoDoc.ActiveDoc.ModelAngleToleranceRadians, None, holes0, None, None, True, 1)
        
        ###############################################################################
        # Convert closed polylines to open ones
        ###############################################################################
        
        point_3d_array = []
        for i in range(len(mesh_bottom.Vertices)):
            point_3d_array.append(mesh_bottom.Vertices.Point3dAt(i))
        
        open_curve_points_0 = []
        open_curve_points_1 = []
        
        for i in range(border0.Count-1):
            open_curve_points_0.append( border0[i])
            open_curve_points_1.append( border1[i])
        
        for i in range(holes0.Count):
            holes0_polyline = self.to_polyline_from_cp(holes0[i]) 
            holes1_polyline = self.to_polyline_from_cp(holes1[i]) 
            for j in range(len(holes0_polyline)-1):
                open_curve_points_0.append(holes0_polyline[j])
                open_curve_points_1.append(holes1_polyline[j])
        
        ###############################################################################
        # Using the bottom mesh vertices create the top mesh f
        ###############################################################################
        points_to_sort_new = self.sort_set_of_points(open_curve_points_0, point_3d_array)
        mesh_top = mesh_bottom.DuplicateMesh()
        
        for i in range(len(points_to_sort_new)):
            mesh_top.Vertices.SetVertex(i, open_curve_points_1[points_to_sort_new[i]])
        
        ###############################################################################
        # Merge the top and bottom mesh into one and add sides
        ###############################################################################
        mesh = Rhino.Geometry.Mesh()
        mesh.Append(mesh_bottom)
        mesh.Append(mesh_top)
        
        count = mesh_bottom.Vertices.Count
        for p in range (mesh_bottom.TopologyEdges.Count):
            
            if (mesh_bottom.TopologyEdges.GetConnectedFaces(p).Length == 1):
                topologyVertices = mesh_bottom.TopologyEdges.GetTopologyVertices(p)
                mesh.Faces.AddFace(topologyVertices.I, topologyVertices.J, topologyVertices.J + count, topologyVertices.I + count)
        
        mesh.UnifyNormals()
        mesh.Ngons.AddPlanarNgons(Rhino.RhinoDoc.ActiveDoc.ModelAbsoluteTolerance * 1, 3, 1, True)
        
        ###############################################################################
        # Unweld ngons meshes
        ###############################################################################
        unwelded_ngon_mesh = Rhino.Geometry.Mesh()
        count = 0
        for ngonAndFacesEnumerable in mesh.GetNgonAndFacesEnumerable():
            
            faces = []
            for j in ngonAndFacesEnumerable.FaceIndexList():
                faces.append(System.Int32(j))
            
            temp_ngon_mesh = mesh.DuplicateMesh().Faces.ExtractFaces(faces)
            
            #add colors
            if(count&lt;2):
                temp_ngon_mesh.VertexColors.CreateMonotoneMesh(Color.DeepPink)
            else:
                temp_ngon_mesh.VertexColors.CreateMonotoneMesh(Color.LightGray)
            
            unwelded_ngon_mesh.Append(temp_ngon_mesh)
            count = count + 1
        
        ###############################################################################
        # Output
        ###############################################################################
        unwelded_ngon_mesh.RebuildNormals()
        return unwelded_ngon_mesh




    def sort_set_of_points(self, points_to_sort, guide_points):
        """Sort one array of point by an another point array
        
        use it like this: 
        #points_to_sort_new = []
        #for i in points_to_sort_ids:
        #    points_to_sort_new.append(points_to_sort[i])
        
        Parameters
        ----------
        points_to_sort : list[rg.Point3d]
        guide_points : list[rg.Point3d]
        
        Returns
        -------
        list[int]
            the list of indices of the sorted array
        """
        
        # create a copy
        points_to_sort_copy = []
        for i in points_to_sort:
            points_to_sort_copy.append(Rhino.Geometry.Point3d(i))
        
        guide_points_copy = []
        for i in guide_points:
            guide_points_copy.append(Rhino.Geometry.Point3d(i))
        
        # make indices of points
        points_to_sort_ids = list(range(0,len(points_to_sort_copy)))
        guide_points_ids = list(range(0,len(guide_points_copy)))
        
        # sort both lists by xyz coordinates together with indices
        points_to_sort_copy, points_to_sort_ids = zip(*sorted(zip(points_to_sort_copy, points_to_sort_ids)))
        guide_points_copy, guide_points_ids = zip(*sorted(zip(guide_points_copy, guide_points_ids)))
        
        # sort guide points indices and order the points to sort indec
        guide_points_ids, points_to_sort_ids = zip(*sorted(zip(guide_points_ids, points_to_sort_ids)))
        
        # can be used like this:
        #points_to_sort_new = []
        #for i in points_to_sort_ids:
        #    points_to_sort_new.append(points_to_sort[i])
        
        return points_to_sort_ids

    def RunScript(self, _p0, _p1):
        if _p0 and _p1:
            return self.loft_polylines_with_holes(_p0, _p1)</item>
                    <item name="Description" type_name="gh_string" type_code="10">get joints ids and connections areas between elements</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">true</item>
                    <item name="IconDisplay" type_name="gh_int32" type_code="3">2</item>
                    <item name="IconOverride" type_name="gh_drawing_bitmap" type_code="37">
                      <bitmap length="1042">iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAOnSURBVEhLtVVbSFRBGA5fRHxZxAwR0wezJ80SqcDEepJEEorUIogullqBZURltWrpapaXLCvLLDLNzEywuyBdqDBCskLDSsLoQphRmbqrf9933NmOu8fspYGPM/PPzPfN/Jc5U0Tkv8LQ+DeghQKZgGmC+UDAouZdFkwGtE6AnS5FopsLA34BHJRpNqcF6X5+fp8iIuYWox+tn9OteQKwQ7QDYycdI+8H1JxFszttvpWQkCQlR45JSuqm4YCAQAkJCX0fGRlVjbl4wAS0Alz8w/6lyAJAkX+0f83jBNC4WfILDvXdaWmVN297pLPrldx/8FCqzlXLtowdNgrihlaIckMd8I17gAH7l2L0P/suAqtjYha31zdcbTxafnKUAkZQgiaTSby9p9Zgn7pJN8BDmu3j8QIeHh7P95lzGjuev7QcLCyy4asR1tVfkeqaOuGtlK2xqZmuk+Dgme9AFAmUAQH2g7oKoAVC4Oejx20WEJgrTld1kYRkJC8uPfrlREVlbwGEIS6bt6RL5p59Eh4eYcPeMHXICQU8PT3LFy5c9K75+s1iCty83VJVVFI2QgGIyuGi0l+0E7APwDVj9uIjvEnlpAKzZ8857+vrK8AINluRSb0bU9KsFy81aLegGEUpkJq25eusWWGave3JU8ZicFIBNFafPOt4ofn65Kkzkr51u8ybN5+TsnTZclm3foMtK/vA69jYuL41a9eP3r33QBNZsXIV3RSvE2A99PDrECBQXJ0k5iY96Ara6fO4uCXi5uYme/ZmabHhfM3FekGdPFY8zvjTQZqCwKaIc/MKtGxRY4XkDSkMumPMzGLKYr/x2+ToYIGXl9cQT8yNjIe///TvsEtUVLQmSDtvw5soAcKctV+Cgmbs1BM7ePUDBLtJETEG9jeJuZ6JUw6rCkc1y67de0dYcNeu35Jz52u0mtBzKYwf4IFDbltJQvf4+EzjU9DPOYozDkp87brkzgu1l26cqjzbjXQdpJv0XAouBrilT/mebnJ3d++ACDMjDIJajHgTe1+rjWPHK6og8MGZi3Ax0C08IYks+YVa1eL0Q8x3iDgCj3U2VHYtBRITV7RDsNyZi3A1oCZYbKwJEimodFV2ZhILkgJ4CfiaBjpzaXxGRgSMz64kJa20TpSuFOSa7JzcyzhQlxEPYWgkeCIgnj8b/nRIhioeYqBZZLwJawLu+4z0zjDiIAyNRkDjWx/NGLHqKaiDoXsIQ+O/Ai0ayDOaG4NM+Q2zjkLpYIersAAAAABJRU5ErkJggg==</bitmap>
                    </item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">36cee643-88ae-473f-9d8a-308828cd3748</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">true</item>
                    <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">loft_mesh</item>
                    <item name="NickName" type_name="gh_string" type_code="10">loft_m</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="3">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>388</X>
                          <Y>763</Y>
                          <W>99</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>429</X>
                          <Y>785</Y>
                        </item>
                        <item name="Selected" type_name="gh_bool" type_code="1">true</item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="5">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="3">
                        <chunk name="InputParam" index="0">
                          <items count="14">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">polylines with holes, bottom</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">077f2434-8753-46aa-a73d-7f969f54f12a</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_p0</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_p0</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">1</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">aefd0b94-8e31-490b-8195-8982e89ee2f9</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">9ba89ec2-5315-435f-a621-b66c5fa2f301</item>
                            <item name="WireDisplay" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="3">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>390</X>
                                  <Y>765</Y>
                                  <W>24</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>403.5</X>
                                  <Y>775</Y>
                                </item>
                                <item name="Selected" type_name="gh_bool" type_code="1">true</item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="14">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">polylines with holes, top</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">3ea22a6c-1ed6-4fe9-9447-0d82c2c9883d</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_p1</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_p1</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">1</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">42a41796-14ff-4560-99a6-5d7b58af2eac</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">9ba89ec2-5315-435f-a621-b66c5fa2f301</item>
                            <item name="WireDisplay" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="3">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>390</X>
                                  <Y>785</Y>
                                  <W>24</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>403.5</X>
                                  <Y>795</Y>
                                </item>
                                <item name="Selected" type_name="gh_bool" type_code="1">true</item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">lofted and capped mesh with holes</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">f326ddec-67dd-402c-979a-139befc875f4</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_mesh</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="3">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>444</X>
                                  <Y>765</Y>
                                  <W>41</W>
                                  <H>40</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>464.5</X>
                                  <Y>785</Y>
                                </item>
                                <item name="Selected" type_name="gh_bool" type_code="1">true</item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="60">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">59daf374-bc21-4a5e-8282-5504fb7ae9ae</item>
                <item name="Name" type_name="gh_string" type_code="10">List Item</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="5">
                    <item name="BaseOutputIndex" type_name="gh_int32" type_code="3">0</item>
                    <item name="Description" type_name="gh_string" type_code="10">Retrieve a specific item from a list.</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">a370c1d3-3a5a-4824-b65a-04fe2dcffd03</item>
                    <item name="Name" type_name="gh_string" type_code="10">List Item</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Item</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>293</X>
                          <Y>733</Y>
                          <W>74</W>
                          <H>64</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>327</X>
                          <Y>765</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="7">
                        <item name="InputCount" type_name="gh_int32" type_code="3">3</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">2e3ab970-8545-46bb-836c-1c11e5610bce</item>
                        <item name="InputId" index="2" type_name="gh_guid" type_code="9">cb95db89-6165-43b6-9c41-5702bc5bf137</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="5">
                        <chunk name="InputParam" index="0">
                          <items count="8">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="Description" type_name="gh_string" type_code="10">Base list</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">34fa20b6-043c-488a-9836-a4dabd0443ca</item>
                            <item name="Name" type_name="gh_string" type_code="10">List</item>
                            <item name="NickName" type_name="gh_string" type_code="10">L</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">c3475b15-07ba-4f76-8f33-fb3ecd82af4c</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>295</X>
                                  <Y>735</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>305</X>
                                  <Y>745</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Item index</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">beed37a6-5be3-45ff-8afe-14d769a9fdc6</item>
                            <item name="Name" type_name="gh_string" type_code="10">Index</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>295</X>
                                  <Y>755</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>305</X>
                                  <Y>765</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="number" type_name="gh_int32" type_code="3">0</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="2">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Wrap index to list bounds</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">5d1ab576-941b-45c6-a021-0c4af9b87f53</item>
                            <item name="Name" type_name="gh_string" type_code="10">Wrap</item>
                            <item name="NickName" type_name="gh_string" type_code="10">W</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="2">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>295</X>
                                  <Y>775</Y>
                                  <W>17</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>305</X>
                                  <Y>785</Y>
                                </item>
                              </items>
                            </chunk>
                            <chunk name="PersistentData">
                              <items count="1">
                                <item name="Count" type_name="gh_int32" type_code="3">1</item>
                              </items>
                              <chunks count="1">
                                <chunk name="Branch" index="0">
                                  <items count="2">
                                    <item name="Count" type_name="gh_int32" type_code="3">1</item>
                                    <item name="Path" type_name="gh_string" type_code="10">{0}</item>
                                  </items>
                                  <chunks count="1">
                                    <chunk name="Item" index="0">
                                      <items count="1">
                                        <item name="boolean" type_name="gh_bool" type_code="1">true</item>
                                      </items>
                                    </chunk>
                                  </chunks>
                                </chunk>
                              </chunks>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {i'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">aefd0b94-8e31-490b-8195-8982e89ee2f9</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item</item>
                            <item name="NickName" type_name="gh_string" type_code="10">i</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>342</X>
                                  <Y>735</Y>
                                  <W>23</W>
                                  <H>30</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>353.5</X>
                                  <Y>750</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">Item at {+1'}</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">42a41796-14ff-4560-99a6-5d7b58af2eac</item>
                            <item name="Mutable" type_name="gh_bool" type_code="1">false</item>
                            <item name="Name" type_name="gh_string" type_code="10">Item +1</item>
                            <item name="NickName" type_name="gh_string" type_code="10">+1</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>342</X>
                                  <Y>765</Y>
                                  <W>23</W>
                                  <H>30</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>353.5</X>
                                  <Y>780</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="61">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">loft_brep</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="14">
                    <item name="CodeInput" type_name="gh_string" type_code="10">"""get joints ids and connections areas between elements"""

__author__ = "petras vestartas"
__version__ = "2023.03.31"


from ghpythonlib.componentbase import executingcomponent as component
import Rhino.RhinoDoc
import Rhino.Geometry
import Rhino.RhinoMath
from System.Drawing import Color


class connections_zones(component):

    def loft_polylines_with_holes(self, curves0, curves1):
        """Loft polylines with holes
        
        Parameters
        ----------
        curves0 : list[rg.Polyline]
        curves1 : list[rg.Polyline]
        
        Returns
        -------
        rg.Brep
            brep as lofted polylines and cap them
        """
        
        ###############################################################################
        # user input
        ###############################################################################
        
        flag = len(curves0) is not 0 if True else len(curves1) != 0
        if (flag):
            
            curves = []
            curves2 = []
            
            flag0 = len(curves1) == 0
            flag1 = len(curves0) == 0 and len(curves1) != 0
            flag2 = len(curves0) and len(curves1)
            
            if (flag0):
                for i in range(len(curves0)):
                    if (float(i) &gt;= float(len(curves0)) * 0.5):
                        curves2.Add(curves0[i])
                    else:
                        curves.Add(curves0[i])
            elif (flag1):
                for i in range(0, len(curves1), 2):
                    curves.Add(curves1[i])
                    curves2.Add(curves1[i + 1])
            elif (flag2):
                curves = curves0
                curves2 = curves1
            
            curves0 = curves
            curves1 = curves2
        
        
        ###############################################################################
        # Create mesh of the bottom face
        ###############################################################################
        brep_bottom = Rhino.Geometry.Brep.CreatePlanarBreps(curves0, Rhino.RhinoDoc.ActiveDoc.ModelAbsoluteTolerance)[0]
        brep_top = Rhino.Geometry.Brep.CreatePlanarBreps(curves1, Rhino.RhinoDoc.ActiveDoc.ModelAbsoluteTolerance)[0]
        
        ###############################################################################
        # Create lofts
        ###############################################################################
        breps_to_join = [brep_bottom, brep_top]
        for i in range(len(curves0)):
            wall = Rhino.Geometry.Brep.CreateFromLoft([curves0[i],curves1[i]], Rhino.Geometry.Point3d.Unset, Rhino.Geometry.Point3d.Unset, Rhino.Geometry.LoftType.Normal,False)[0]
            breps_to_join.append(wall)
        
        ###############################################################################
        # Join Brep
        ###############################################################################
        solid = Rhino.Geometry.Brep.JoinBreps(breps_to_join, Rhino.RhinoDoc.ActiveDoc.ModelAbsoluteTolerance)[0]
        
        ###############################################################################
        # Because kinked surface can cause problems down stream, Rhino
        # always splits kinked surfaces when adding Breps to the document. Since
        # we are not adding this Brep to the document, lets split the kinked
        # surfaces ourself.
        ###############################################################################
        solid.Faces.SplitKinkyFaces(Rhino.RhinoMath.DefaultAngleTolerance, True)
        
        ###############################################################################
        # The profile curve, created by the input points, is oriented clockwise.
        # Thus when the profile is extruded, the resulting surface will have its
        # normals pointed inwards. So lets check the orientation and, if inwards,
        # flip the face normals.
        ###############################################################################
        if (Rhino.Geometry.BrepSolidOrientation.Inward == solid.SolidOrientation):
            solid.Flip()
        
        for i in range(solid.Faces.Count):
            if(i &lt; 2):
                solid.Faces[i].PerFaceColor = Color.DeepPink#Color.LightGray
            else:
                solid.Faces[i].PerFaceColor = Color.LightGray
        
        return solid
    
    def RunScript(self, _p0, _p1):
        if _p0 and _p1:
            return self.loft_polylines_with_holes(_p0, _p1)</item>
                    <item name="Description" type_name="gh_string" type_code="10">get joints ids and connections areas between elements</item>
                    <item name="Hidden" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">true</item>
                    <item name="IconDisplay" type_name="gh_int32" type_code="3">2</item>
                    <item name="IconOverride" type_name="gh_drawing_bitmap" type_code="37">
                      <bitmap length="1014">iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAOLSURBVEhLtVVZSFVRFBV/RPwRMUPE1DD7ckokAxHtSzJRKFIzQsgsm8AyQnO2nLKcckjNXqI5ZiaYaUliSoURkhbPyBIxogGbqBzec7fX1fO6774r9tOBxbtn37PXOnu6z4yI/itUjWuBlwcjUAX+JmeVhrUAEsYSAxslYDcSUTonODg4fPD13VrMz4Hyd7IzuCkevjAGZMAediM/pXNfREQUlZRVUPyRYwtOTs7k7u7xzt8/oJHfhTOsQcDA4QGFL0RWF+AFZ8ovuDh7v3+A3rydIu3EKxoafkSa+kY6lXhGB0GO8DuLwmESPjL/NQVigoN3jLZ33O4sr6xegoAahKC1tTXZ2NgMsl/GCqYYINIwmhkRRgKWlpbj6RnZnWPjL/MuFBbp+FcibG2/RY1NrYSohK2zqxupIxeXjSBcDZ8MArycWeDn4ycjeUyQUXNVMwESkIG8uLT885WaupkCFmbxpeMnEiglNZ18fHz17FvFEFEAiACkQwYBKyuryqCg7dPdPb3FEOi9168pKrmshwCL0qWi0t+wC3Fb23XL9uIyRFIHDgFeRk0gGb29tzTY29sTQ8/Oi9xJM4fjjy62tHVIUUAMohBISk594OnpJdlHnj5DLebWFODlDOPzsRdSrqtrr1HCydPk57cNL2nX7j0Ue/CQLjPr/OTO0LCZA7Fx+sGHw5JI9L79SJN0TgGtQQDg4dKCGE5yIBWwI+ehoWFkbm5OqWmZUm3wvqmlnRCRikCjkQCvGCbQCeKc3AKpW8ReIO5QPIpu2KOz0LLsb5gJOf4+8AHu63ncGI6oh6Pjhh9sp4CAQEkQdkSDSIQAkJF5jlxdNyXJiQ288g0Xu0sQoQYr36RpRgrfckFMOE8zJZ9N02Pg7vT0UX1DE7m5bZ6WcwkYb7gDuLcXQYL02Nmt/8a2r3gHcdRBiHOhtTea2+7W1l1/ze06hzTJuQRMDJyWWZF7pMnCwmKMRbwAFpRqhEhWnqXZqKiq0bDAeyUXYGJAWnBDEOXlFxKmlm8/j35nEUPh+ZyOJ7sZApGRe0dZsFLJBZgaeCYwbJgJEAmIdhV2dBIGEgL8JfgFPyWXxKdm5IKN4rZRUdGLq7UrBHEmKzvnJl9oQo0HUDUCuBEjHH82+NMBWUhI6DwKjSFDJJgJTt9Hbu9ENQ5A1agGXtK/GWqEqYegDKrpAVSN/wpe+LDlqr1bBpn9ATYUQM0LHpC7AAAAAElFTkSuQmCC</bitmap>
                    </item>
                    <item name="InputIsPath" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">3e6bcdb9-2089-4333-8053-5b0657ed96b3</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">true</item>
                    <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">loft_brep</item>
                    <item name="NickName" type_name="gh_string" type_code="10">loft_b</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>380</X>
                          <Y>651</Y>
                          <W>95</W>
                          <H>44</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>421</X>
                          <Y>673</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="5">
                        <item name="InputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="InputId" index="1" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="3">
                        <chunk name="InputParam" index="0">
                          <items count="14">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">polylines with holes, bottom</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ac9c8722-20ed-44af-9a81-64d3ef79723c</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_p0</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_p0</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">1</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">aefd0b94-8e31-490b-8195-8982e89ee2f9</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">9ba89ec2-5315-435f-a621-b66c5fa2f301</item>
                            <item name="WireDisplay" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>382</X>
                                  <Y>653</Y>
                                  <W>24</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>395.5</X>
                                  <Y>663</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="InputParam" index="1">
                          <items count="14">
                            <item name="Access" type_name="gh_int32" type_code="3">1</item>
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">polylines with holes, top</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">78a40698-ce96-4d98-9190-f975acf52ec0</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_p1</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_p1</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">1</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">42a41796-14ff-4560-99a6-5d7b58af2eac</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">9ba89ec2-5315-435f-a621-b66c5fa2f301</item>
                            <item name="WireDisplay" type_name="gh_int32" type_code="3">1</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>382</X>
                                  <Y>673</Y>
                                  <W>24</W>
                                  <H>20</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>395.5</X>
                                  <Y>683</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="7">
                            <item name="Description" type_name="gh_string" type_code="10">lofted and capped brep with holes</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">a4183244-72a5-4954-b9ac-858b6f66c669</item>
                            <item name="Locked" type_name="gh_bool" type_code="1">true</item>
                            <item name="Name" type_name="gh_string" type_code="10">_brep</item>
                            <item name="NickName" type_name="gh_string" type_code="10">_brep</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>436</X>
                                  <Y>653</Y>
                                  <W>37</W>
                                  <H>40</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>454.5</X>
                                  <Y>673</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
          </chunks>
        </chunk>
      </chunks>
    </chunk>
    <chunk name="Thumbnail">
      <items count="1">
        <item name="Thumbnail" type_name="gh_drawing_bitmap" type_code="37">
          <bitmap length="43176"></bitmap>
        </item>
      </items>
    </chunk>
  </chunks>
</Archive>